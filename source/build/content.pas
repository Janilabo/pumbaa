{$I wrappers.inc}

procedure AddTypes;
begin
  AddType('T2DBooleanArray', 'TBooleanMatrix;');
  AddType('T2DDoubleArray', 'TDoubleMatrix;');
  AddType('TCharArray', 'array of Char;');
  AddType('T2DCharArray', 'array of TCharArray;');
  AddType('T2DBoxArray', 'array of TBoxArray;');
  AddType('TRange', 'record ' + #13#10 + 
                    '  start, stop: Integer;' + #13#10 +
                    'end;');
  AddType('TRangeArray', 'array of TRange;');
  AddType('T2DRangeArray', 'array of TRangeArray;');
  AddType('TSegment', 'record' + #13#10 +
                      '  A, B: TPoint;' + #13#10 +
					  'end;');
  AddType('TCircle2', 'record' + #13#10 +
                     '  center: TPoint;' + #13#10 +
                     '  radius: Double;' + #13#10 +
                     'end;');					 
end;

procedure AddFunctions;
begin
  AddFunction(@MiMU_Version, 'function MiMU_Version: Double;');

  AddFunction(@RandomB, 'function RandomB: Boolean; overload;');
  AddFunction(@RandomBit, 'function RandomBit: Byte; overload;');
  AddFunction(@RandomSample, 'function RandomSample(const x: Integer; const size: Integer): TIntegerArray; overload;');
  AddFunction(@RandomMean, 'function RandomMean(const x: Integer; const sample: Integer = 10): Integer; overload;');
  AddFunction(@Random2, 'function Random2(const x: Integer; const r: Integer = 2): Integer; overload;');
  AddFunction(@RandomMax, 'function RandomMax(const x: Integer; const r: Integer = 2): Integer; overload;');
  AddFunction(@RandomMin, 'function RandomMin(const x: Integer; const r: Integer = 2): Integer; overload;');

  AddFunction(@Double_ClampMin, 'function Double_ClampMin(const item: Double; const limit: Double): Double;');
  AddFunction(@Double_ClampMax, 'function Double_ClampMax(const item: Double; const limit: Double): Double;');
  AddFunction(@Double_Clamp, 'function Double_Clamp(const item: Double; const minimum, maximum: Double): Double; overload;');  
  AddFunction(@Double_BoundMin, 'function Double_BoundMin(const item: Double; const limit: Double): Double;');
  AddFunction(@Double_BoundMax, 'function Double_BoundMax(const item: Double; const limit: Double): Double;');
  AddFunction(@Double_Bound, 'function Double_Bound(const item: Double; const minimum, maximum: Double): Double;');
  AddFunction(@Double_RestrictMin, 'function Double_RestrictMin(const item: Double; const limit: Double): Double;');
  AddFunction(@Double_RestrictMax, 'function Double_RestrictMax(const item: Double; const limit: Double): Double;');
  AddFunction(@Double_Restrict, 'function Double_Restrict(const item: Double; const minimum, maximum: Double): Double;');
  AddFunction(@Double_LimitMin, 'function Double_LimitMin(const item: Double; const limit: Double): Double;');
  AddFunction(@Double_LimitMax, 'function Double_LimitMax(const item: Double; const limit: Double): Double;');
  AddFunction(@Double_Limit, 'function Double_Limit(const item: Double; const minimum, maximum: Double): Double;');
  AddFunction(@Double_ConstraintMin, 'function Double_ConstraintMin(var item: Double; const limit: Double): Boolean;');
  AddFunction(@Double_ConstraintMax, 'function Double_ConstraintMax(var item: Double; const limit: Double): Boolean;');
  AddFunction(@Double_Constraint, 'function Double_Constraint(var item: Double; const minimum, maximum: Double): Boolean; overload;');
  AddFunction(@Double_Increase, 'function Double_Increase(var x: Double; const N: Double = 1): Double;');
  AddFunction(@Double_Decrease, 'function Double_Decrease(var x: Double; const N: Double = 1): Double;');
  AddFunction(@Double_Increment, 'function Double_Increment(var x: Double; const N: Double = 1): Double;');
  AddFunction(@Double_Decrement, 'function Double_Decrement(var x: Double; const N: Double = 1): Double;');
  AddFunction(@Double_Digits, 'function Double_Digits(const x: Double): TIntegerArray;');
  AddFunction(@Double_NegA, 'function Double_NegA(const x: Double): Double;');
  AddFunction(@Double_Neg, 'function Double_Neg(const x: Double): Double;');
  AddFunction(@Double_Negative, 'function Double_Negative(const x: Double): Boolean;');
  AddFunction(@Double_Positive, 'function Double_Positive(const x: Double): Boolean;');
  AddFunction(@Double_Neutral, 'function Double_Neutral(const x: Double): Boolean;');
  AddFunction(@Double_MinDecimal, 'function Double_MinDecimal(const x: Double): Double;');
  AddFunction(@Double_MaxDecimal, 'function Double_MaxDecimal(const x: Double): Double;');
  AddFunction(@Double_Accuracy, 'function Double_Accuracy(const x: Double; const a: Integer): Double;');
  AddFunction(@Double_Compare, 'function Double_Compare(const x, T: Double): Integer;');
  AddFunction(@Double_Precede, 'function Double_Precede(const x, target: Double; const aAscending: Boolean): Boolean;');
  AddFunction(@Double_Ascending, 'function Double_Ascending(const x, target: Double): Boolean;');
  AddFunction(@Double_Descending, 'function Double_Descending(const x, target: Double): Boolean;');
  AddFunction(@Double_Distance, 'function Double_Distance(const x, T: Double): Double;');
  AddFunction(@Double_Difference, 'function Double_Difference(const x, T: Double): Double;');
  AddFunction(@Double_Opposite, 'function Double_Opposite(const x: Double): Double;');
  AddFunction(@Double_Sign, 'function Double_Sign(const x: Double): Integer;');
  AddFunction(@Double_FixDegrees, 'function Double_FixDegrees(const x: Double): Double;');
  AddFunction(@Double_Degrees, 'function Double_Degrees(const x: Double): Double;');
  AddFunction(@Double_FixRadians, 'function Double_FixRadians(const x: Double): Double;');
  AddFunction(@Double_Radians, 'function Double_Radians(const x: Double; const compass: Boolean = False): Double;');
  AddFunction(@Double_Percent, 'function Double_Percent(const x, position: Double): Double;');
  AddFunction(@Double_Percentage, 'function Double_Percentage(const x, percent: Double): Double;');
  AddFunction(@Double_Over, 'function Double_Over(const x, target: Double): Boolean;');
  AddFunction(@Double_Under, 'function Double_Under(const x, target: Double): Boolean;');
  AddFunction(@Double_Oversize, 'function Double_Oversize(const x, limit: Double): Boolean;');
  AddFunction(@Double_Undersize, 'function Double_Undersize(const x, limit: Double): Boolean;');

  AddFunction(@Integer_ClampMin, 'function Integer_ClampMin(const item: Integer; const limit: Integer): Integer;');
  AddFunction(@Integer_ClampMax, 'function Integer_ClampMax(const item: Integer; const limit: Integer): Integer;');
  AddFunction(@Integer_Clamp1, 'function Integer_Clamp(const item: Integer; const minimum, maximum: Integer): Integer; overload;');
  AddFunction(@Integer_Clamp2, 'function Integer_Clamp(const item: Integer; const range: TRange): Integer; overload;');
  AddFunction(@Integer_BoundMin, 'function Integer_BoundMin(const item: Integer; const limit: Integer): Integer;');
  AddFunction(@Integer_BoundMax, 'function Integer_BoundMax(const item: Integer; const limit: Integer): Integer;');
  AddFunction(@Integer_Bound, 'function Integer_Bound(const item: Integer; const minimum, maximum: Integer): Integer;');
  AddFunction(@Integer_RestrictMin, 'function Integer_RestrictMin(const item: Integer; const limit: Integer): Integer;');
  AddFunction(@Integer_RestrictMax, 'function Integer_RestrictMax(const item: Integer; const limit: Integer): Integer;');
  AddFunction(@Integer_Restrict, 'function Integer_Restrict(const item: Integer; const minimum, maximum: Integer): Integer;');
  AddFunction(@Integer_LimitMin, 'function Integer_LimitMin(const item: Integer; const limit: Integer): Integer;');
  AddFunction(@Integer_LimitMax, 'function Integer_LimitMax(const item: Integer; const limit: Integer): Integer;');
  AddFunction(@Integer_Limit, 'function Integer_Limit(const item: Integer; const minimum, maximum: Integer): Integer;');
  AddFunction(@Integer_ConstraintMin, 'function Integer_ConstraintMin(var item: Integer; const limit: Integer): Boolean;');
  AddFunction(@Integer_ConstraintMax, 'function Integer_ConstraintMax(var item: Integer; const limit: Integer): Boolean;');
  AddFunction(@Integer_Constraint1, 'function Integer_Constraint(var item: Integer; const minimum, maximum: Integer): Boolean; overload;');
  AddFunction(@Integer_Constraint2, 'function Integer_Constraint(var item: Integer; const range: TRange): Boolean; overload;');
  AddFunction(@Integer_Parity, 'function Integer_Parity(const x: Integer): Byte;');
  AddFunction(@Integer_Even, 'function Integer_Even(const x: Integer): Boolean;');
  AddFunction(@Integer_IsEven, 'function Integer_IsEven(const x: Integer): Boolean;');
  AddFunction(@Integer_Odd, 'function Integer_Odd(const x: Integer): Boolean;');
  AddFunction(@Integer_IsOdd, 'function Integer_IsOdd(const x: Integer): Boolean;');
  AddFunction(@Integer_Increase, 'function Integer_Increase(var x: Integer; const N: Integer = 1): Integer;');
  AddFunction(@Integer_Decrease, 'function Integer_Decrease(var x: Integer; const N: Integer = 1): Integer;');
  AddFunction(@Integer_Increment, 'function Integer_Increment(var x: Integer; const N: Integer = 1): Integer;');
  AddFunction(@Integer_Decrement, 'function Integer_Decrement(var x: Integer; const N: Integer = 1): Integer;');
  AddFunction(@Integer_DigitCount, 'function Integer_DigitCount(const x: Integer): Integer;');
  AddFunction(@Integer_Digitz, 'function Integer_Digitz(const x: Integer): TIntegerArray;');
  AddFunction(@Integer_Digits, 'function Integer_Digits(const x: Integer): TIntegerArray;');
  AddFunction(@Integer_NegA, 'function Integer_NegA(const x: Integer): Integer;');
  AddFunction(@Integer_Neg, 'function Integer_Neg(const x: Integer): Integer;');
  AddFunction(@Integer_Negative, 'function Integer_Negative(const x: Integer): Boolean;');
  AddFunction(@Integer_Positive, 'function Integer_Positive(const x: Integer): Boolean;');
  AddFunction(@Integer_Neutral, 'function Integer_Neutral(const x: Integer): Boolean;');
  AddFunction(@Integer_Compare, 'function Integer_Compare(const x, T: Integer): Integer;');
  AddFunction(@Integer_Ascending, 'function Integer_Ascending(const x, target: Integer): Boolean;');
  AddFunction(@Integer_Descending, 'function Integer_Descending(const x, target: Integer): Boolean;');
  AddFunction(@Integer_Precede, 'function Integer_Precede(const x, target: Integer; const aAscending: Boolean): Boolean;');
  AddFunction(@Integer_Distance, 'function Integer_Distance(const x, T: Integer): Integer;');
  AddFunction(@Integer_Difference, 'function Integer_Difference(const x, T: Integer): Integer;');
  AddFunction(@Integer_Opposite, 'function Integer_Opposite(const x: Integer): Integer;');
  AddFunction(@Integer_Sign, 'function Integer_Sign(const x: Integer): Integer;');
  AddFunction(@Integer_Shuffle, 'function Integer_Shuffle(const x: Integer): Integer;');
  AddFunction(@Integer_Over, 'function Integer_Over(const x, target: Integer): Boolean;');
  AddFunction(@Integer_Under, 'function Integer_Under(const x, target: Integer): Boolean;');
  AddFunction(@Integer_Oversize, 'function Integer_Oversize(const x, limit: Integer): Boolean;');
  AddFunction(@Integer_Undersize, 'function Integer_Undersize(const x, limit: Integer): Boolean;');
  AddFunction(@Integer_BitMax, 'function Integer_BitMax(const item: Integer): Integer;');
  AddFunction(@Integer_Unbitify1, 'function Integer_Unbitify(const item: Integer): TBooleanArray; overload;');
  AddFunction(@Integer_Unbitify2, 'function Integer_Unbitify(const item: Integer; const bCount: Integer): TBooleanArray; overload;');

  AddFunction(@Int64_IsPrime, 'function Int64_IsPrime(const x: Int64): Boolean;');
  AddFunction(@Int64_Prime, 'function Int64_Prime(const x: Int64): Boolean;');
  AddFunction(@Int64_Parity, 'function Int64_Parity(const x: Int64): Byte;');
  AddFunction(@Int64_Even, 'function Int64_Even(const x: Int64): Boolean;');
  AddFunction(@Int64_Odd, 'function Int64_Odd(const x: Int64): Boolean;');
  AddFunction(@Int64_Increase, 'function Int64_Increase(var x: Int64; const N: Int64 = 1): Int64;');
  AddFunction(@Int64_Decrease, 'function Int64_Decrease(var x: Int64; const N: Int64 = 1): Int64;');
  AddFunction(@Int64_Increment, 'function Int64_Increment(var x: Int64; const N: Int64 = 1): Int64;');
  AddFunction(@Int64_Decrement, 'function Int64_Decrement(var x: Int64; const N: Int64 = 1): Int64;');
  AddFunction(@Int64_DigitCount, 'function Int64_DigitCount(const x: Int64): Integer;');
  AddFunction(@Int64_Digitz, 'function Int64_Digitz(const x: Int64): TIntegerArray;');
  AddFunction(@Int64_Digits, 'function Int64_Digits(const x: Int64): TIntegerArray;');
  AddFunction(@Int64_Compare, 'function Int64_Compare(const x, T: Int64): Integer;');
  AddFunction(@Int64_Precede, 'function Int64_Precede(const x, target: Int64; const aAscending: Boolean): Boolean;');
  AddFunction(@Int64_Distance, 'function Int64_Distance(const x, T: Int64): Int64;');
  AddFunction(@Int64_Difference, 'function Int64_Difference(const x, T: Int64): Int64;');
  AddFunction(@Int64_Opposite, 'function Int64_Opposite(const x: Int64): Int64;');
  AddFunction(@Int64_Sign, 'function Int64_Sign(const x: Int64): Integer;');
  AddFunction(@Int64_Shuffle, 'function Int64_Shuffle(const x: Int64): Int64;');
  AddFunction(@Int64_Over, 'function Int64_Over(const x, target: Int64): Boolean;');
  AddFunction(@Int64_Under, 'function Int64_Under(const x, target: Int64): Boolean;');
  AddFunction(@Int64_Oversize, 'function Int64_Oversize(const x, limit: Int64): Boolean;');
  AddFunction(@Int64_Undersize, 'function Int64_Undersize(const x, limit: Int64): Boolean;');

  AddFunction(@Boolean_ToString, 'function Boolean_ToString(const x: Boolean): string;');
  AddFunction(@Boolean_Binary, 'function Boolean_Binary(const x: Boolean): Char;');
  AddFunction(@Boolean_BinaryDigit, 'function Boolean_BinaryDigit(const x: Boolean): Integer;');
  AddFunction(@Boolean_Bit, 'function Boolean_Bit(const x: Boolean): Integer;');
  AddFunction(@Boolean_Bitify, 'function Boolean_Bitify(const x: Boolean): Integer;');
  AddFunction(@Boolean_ToInteger, 'function Boolean_ToInteger(const x: Boolean): Integer;');
  AddFunction(@Boolean_AsInteger, 'function Boolean_AsInteger(const x: Boolean): Integer;');
  AddFunction(@Boolean_Toggle, 'function Boolean_Toggle(const x: Boolean): Boolean;');
  AddFunction(@Boolean_Opposite, 'function Boolean_Opposite(const x: Boolean): Boolean;');
  AddFunction(@Boolean_Switch, 'function Boolean_Switch(var x: Boolean): Boolean;');
  AddFunction(@Boolean_Flip, 'function Boolean_Flip(var x: Boolean): Boolean;');
  AddFunction(@Boolean_Shuffle, 'function Boolean_Shuffle(var x: Boolean): Boolean;');
  AddFunction(@Boolean_Select1, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: Integer): Integer; overload;');
  AddFunction(@Boolean_Select2, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: Int64): Int64; overload;');
  AddFunction(@Boolean_Select3, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: Double): Double; overload;');
  AddFunction(@Boolean_Select4, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: string): string; overload;');
  AddFunction(@Boolean_Select5, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: Char): Char; overload;');
  AddFunction(@Boolean_Select6, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: Boolean): Boolean; overload;');
  AddFunction(@Boolean_Select7, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: TPoint): TPoint; overload;');
  AddFunction(@Boolean_Select8, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: TBox): TBox; overload;');
  AddFunction(@Boolean_Select9, 'function Boolean_Select(const x: Boolean; const bTrue, bFalse: TRange): TRange; overload;');
  AddFunction(@Boolean_Evaluate1, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: Integer): Integer; overload;');
  AddFunction(@Boolean_Evaluate2, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: Int64): Int64; overload;');
  AddFunction(@Boolean_Evaluate3, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: Double): Double; overload;');
  AddFunction(@Boolean_Evaluate4, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: string): string; overload;');
  AddFunction(@Boolean_Evaluate5, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: Char): Char; overload;');
  AddFunction(@Boolean_Evaluate6, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: Boolean): Boolean; overload;');
  AddFunction(@Boolean_Evaluate7, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: TPoint): TPoint; overload;');
  AddFunction(@Boolean_Evaluate8, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: TBox): TBox; overload;');
  AddFunction(@Boolean_Evaluate9, 'function Boolean_Evaluate(const x: Boolean; const bTrue, bFalse: TRange): TRange; overload;');
  AddFunction(@Boolean_Enable, 'function Boolean_Enable(var x: Boolean): Boolean;');
  AddFunction(@Boolean_Disable, 'function Boolean_Disable(var x: Boolean): Boolean;');
  AddFunction(@Boolean_SetFalse, 'function Boolean_SetFalse(var x: Boolean): Integer;');
  AddFunction(@Boolean_SetTrue, 'function Boolean_SetTrue(var x: Boolean): Integer;');
  AddFunction(@Boolean_SwitchOn, 'function Boolean_SwitchOn(var x: Boolean; const state: Boolean): Boolean;');
  AddFunction(@Boolean_SwitchOff, 'function Boolean_SwitchOff(var x: Boolean; const state: Boolean): Boolean;');

  AddFunction(@Char_Compare, 'function Char_Compare(const c, T: Char): Integer;');
  AddFunction(@Char_Precede, 'function Char_Precede(const x, target: Char; const aAscending: Boolean): Boolean;');
  AddFunction(@Char_Ascending, 'function Char_Ascending(const x, target: Char): Boolean;');
  AddFunction(@Char_Descending, 'function Char_Descending(const x, target: Char): Boolean;');
  AddFunction(@Char_Str, 'function Char_Str(const c: Char; const size: Integer = 1): string;');
  AddFunction(@Char_ToStr, 'function Char_ToStr(const c: Char; const size: Integer = 1): string;');
  AddFunction(@Char_IsNumber, 'function Char_IsNumber(const c: Char): Boolean;');
  AddFunction(@Char_IsNumeric, 'function Char_IsNumeric(const c: Char): Boolean;');
  AddFunction(@Char_IsLower, 'function Char_IsLower(const c: Char): Boolean;');
  AddFunction(@Char_IsUpper, 'function Char_IsUpper(const c: Char): Boolean;');
  AddFunction(@Char_IsLowercase, 'function Char_IsLowercase(const c: Char): Boolean;');
  AddFunction(@Char_IsUppercase, 'function Char_IsUppercase(const c: Char): Boolean;');
  AddFunction(@Char_IsLetter, 'function Char_IsLetter(const c: Char): Boolean;');
  AddFunction(@Char_Swapcase, 'function Char_Swapcase(const c: Char): Char;');
  AddFunction(@Char_Upper, 'function Char_Upper(const c: Char): Char;');
  AddFunction(@Char_Lower, 'function Char_Lower(const c: Char): Char;');

  AddFunction(@String_Empty, 'function String_Empty(const str: string): Boolean;');
  AddFunction(@String_Void, 'function String_Void(const str: string): Boolean;');
  AddFunction(@String_Blank, 'function String_Blank(const str: string): Boolean;');
  AddFunction(@String_At, 'function String_At(const str: string; const s: string; const index: Integer = 1): Boolean;');
  AddFunction(@String_Chars, 'function String_Chars(const str: string): TCharArray;');
  AddFunction(@String_Charify, 'function String_Charify(const str: string): TCharArray;');
  AddFunction(@String_Chop, 'function String_Chop(const str: string): TCharArray;');
  AddFunction(@String_Get, 'function String_Get(const str: string; const index: Integer; const count: Integer): string;');
  AddFunction(@String_Pick, 'function String_Pick(const str: string; const index: Integer; const count: Integer = 2147483647): string;');
  AddFunction(@String_Pos, 'function String_Pos(const str: string; const s: string; const index: Integer = 1): Integer;');
  AddFunction(@String_Loc, 'function String_Loc(const str: string; const s: string; const index: Integer = 2147483647): Integer;');
  AddFunction(@String_Find, 'function String_Find(const str: string; const s: string; const index: Integer = 1): Integer;');
  AddFunction(@String_Search, 'function String_Search(const str: string; const s: string; const index: Integer = 1): Integer;');
  AddFunction(@String_Location, 'function String_Location(const str: string; const s: string; const index: Integer = 2147483647): Integer;');
  AddFunction(@String_Position, 'function String_Position(const str: string; const s: string; const index: Integer = 1): Integer;');
  AddFunction(@String_Contains, 'function String_Contains(const str: string; const s: string; const index: Integer = 1): Boolean;');
  AddFunction(@String_Includes, 'function String_Includes(const str: string; const s: string; const index: Integer = 2147483647): Boolean;');
  AddFunction(@String_Between, 'function String_Between(const str: string; const s1, s2: string; const index: Integer = 1): string;');
  AddFunction(@String_Count, 'function String_Count(const str: string; const s: string; const overlap: Boolean = True; const index: Integer = 1): Integer;');
  AddFunction(@String_Amount, 'function String_Amount(const str: string; const s: string; const overlap: Boolean = True; const index: Integer = 2147483647): Integer;');
  AddFunction(@String_FromLeft, 'function String_FromLeft(const str: string; const count: Integer; const index: Integer = 1): string;');
  AddFunction(@String_FromRight, 'function String_FromRight(const str: string; const count: Integer; const index: Integer = 2147483647): string;');
  AddFunction(@String_Explode1, 'function String_Explode(const str: string): TCharArray; overload;');
  AddFunction(@String_Explode2, 'function String_Explode(const str: string; const d: string; const limit: Integer = -1): TStringArray; overload;');
  AddFunction(@String_Explode3, 'function String_Explode(const str: string; const d: TStringArray; const limit: Integer = -1): TStringArray; overload;');
  AddFunction(@String_Slice, 'function String_Slice(const str: string; const a, b: Integer): string;');
  AddFunction(@String_Chunk, 'function String_Chunk(const str: string; const a, b: Integer): string;');
  AddFunction(@String_Reverse, 'function String_Reverse(var str: string): Boolean;');
  AddFunction(@String_Flip, 'function String_Flip(const str: string): string;');
  AddFunction(@String_Reversed, 'function String_Reversed(const str: string): string;');
  AddFunction(@String_StartsWith, 'function String_StartsWith(const str: string; const s: string): Boolean;');
  AddFunction(@String_EndsWith, 'function String_EndsWith(const str: string; const s: string): Boolean;');
  AddFunction(@String_StartWith, 'function String_StartWith(var str: string; const s: string; const index: Integer = 1): Boolean;');
  AddFunction(@String_EndWith, 'function String_EndWith(var str: string; const s: string; const index: Integer = 2147483647): Boolean;');
  AddFunction(@String_After1, 'function String_After(const str: string; const s: string; const index: Integer = 1): string; overload;');
  AddFunction(@String_After2, 'function String_After(const str: string; const index: Integer; const count: Integer = 2147483647): string; overload;');
  AddFunction(@String_Ahead1, 'function String_Ahead(const str: string; const s: string; const index: Integer = 2147483647): string; overload;');
  AddFunction(@String_Ahead2, 'function String_Ahead(const str: string; const index: Integer; const count: Integer = 2147483647): string; overload;');
  AddFunction(@String_Before1, 'function String_Before(const str: string; const s: string; const index: Integer = 1): string; overload;');
  AddFunction(@String_Before2, 'function String_Before(const str: string; const index: Integer; const count: Integer = 2147483647): string; overload;');
  AddFunction(@String_Behind1, 'function String_Behind(const str: string; const s: string; const index: Integer = 2147483647): string; overload;');
  AddFunction(@String_Behind2, 'function String_Behind(const str: string; const index: Integer; const count: Integer = 2147483647): string; overload;');
  AddFunction(@String_Center, 'function String_Center(const str: string; const size: Integer; const fill: Char = #32): string;');
  AddFunction(@String_Stuff, 'function String_Stuff(const str: string; const s: string; const iFrom, iCount: Integer): string;');
  AddFunction(@String_Duplicate, 'function String_Duplicate(const str: string; const x: Integer = 2): string;');
  AddFunction(@String_Duplicated, 'function String_Duplicated(const str: string; const x: Integer; const glue: string): string;');
  AddFunction(@String_Compare, 'function String_Compare(const str: string; const s: string): Integer;');
  AddFunction(@String_Precede, 'function String_Precede(const x, target: string; const aAscending: Boolean): Boolean;');
  AddFunction(@String_Ascending, 'function String_Ascending(const x, target: string): Boolean;');
  AddFunction(@String_Descending, 'function String_Descending(const x, target: string): Boolean;');
  AddFunction(@String_Quotatation, 'function String_Quotatation(const str: string): string;');
  AddFunction(@String_PregQuote, 'function String_PregQuote(const str: string; const regex: string = ''.\+*?[^]$(){}=!<>|:-''): string;');
  AddFunction(@String_TrimLeft, 'function String_TrimLeft(const str: string; const t: Char = #32): string;');
  AddFunction(@String_TrimRight, 'function String_TrimRight(const str: string; const t: Char = #32): string;');
  AddFunction(@String_Trim, 'function String_Trim(const str: string; const t: Char = #32): string;');
  AddFunction(@String_AsTRange, 'function String_AsTRange(const str: string): TRange;');
  AddFunction(@String_IDs1, 'function String_IDs(const str: string): TIntegerArray; overload;');
  AddFunction(@String_IDs2, 'function String_IDs(const str: string; const ID: TIntegerArray): TCharArray; overload;');
  AddFunction(@String_IDs3, 'function String_IDs(const str: string; const ID: TIntegerArray; const item: Char): TCharArray; overload;');
  AddFunction(@String_IDs4, 'function String_IDs(const str: string; const ID: TIntegerArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@String_Exch, 'function String_Exch(var str: string; const aIndex, bIndex: Integer): Boolean;');
  AddFunction(@String_Exchange, 'function String_Exchange(var str: string; const aIndex, bIndex: Integer): Boolean;');
  AddFunction(@String_ToTRange, 'function String_ToTRange(const str: string; const glueRange: string = ''..''; const openRange: Char = ''[''; const closeRange: Char = '']''): TRange;');
  AddFunction(@String_IsBinary, 'function String_IsBinary(const str: string; const emptyTrue: Boolean = True): Boolean;');
  AddFunction(@String_BoolifyBinary, 'function String_BoolifyBinary(const str: string): TBooleanArray;');
  AddFunction(@String_MadeOf, 'function String_MadeOf(const str: string; const allowed: TCharArray): Boolean;');
  AddFunction(@String_FreeOf, 'function String_FreeOf(const str: string; const forbidden: TCharArray): Boolean;');
  AddFunction(@String_BuiltWithout, 'function String_BuiltWithout(const str: string; const forbidden: TCharArray): Boolean;');
  AddFunction(@String_Consists, 'function String_Consists(const str: string; const allowed: TCharArray): Boolean;');
  AddFunction(@String_Pure, 'function String_Pure(const str: string; const allowed: TCharArray): Boolean;');
  AddFunction(@String_BuiltWith, 'function String_BuiltWith(const str: string; const blocks: TCharArray): Boolean');
  AddFunction(@String_Exists, 'function String_Exists(const str: string): Boolean;');

  AddFunction(@TPoint_Create1, 'function TPoint_Create(const X, Y: Integer): TPoint; overload;');
  AddFunction(@TPoint_Create2, 'function TPoint_Create(const value: Integer): TPoint; overload;');
  AddFunction(@TPoint_Create3, 'function TPoint_Create: TPoint; overload;');
  AddFunction(@TPoint_Construct, 'function TPoint_Construct(const pX, pY: Integer): TPoint; overload;');
  AddFunction(@TPoint_Build, 'function TPoint_Build(const X, Y: Integer): TPoint;');
  AddFunction(@TPoint_Inside, 'function TPoint_Inside(const pt: TPoint; const bx: TBox): Boolean;');
  AddFunction(@TPoint_InCircle, 'function TPoint_InCircle(const pt, center: TPoint; const radius: Double): Boolean;');
  AddFunction(@TPoint_InEllipse, 'function TPoint_InEllipse(const pt, center: TPoint; const XRadius, YRadius: Double): Boolean;');
  AddFunction(@TPoint_Clamp, 'function TPoint_Clamp(const pt: TPoint; const area: TBox): TPoint;');
  AddFunction(@TPoint_AngleDegrees, 'function TPoint_AngleDegrees(const pt, target: TPoint; const compass: Boolean = False): Double;');
  AddFunction(@TPoint_AngleRadians, 'function TPoint_AngleRadians(const pt, target: TPoint): Double;');
  AddFunction(@TPoint_DistEuclidean, 'function TPoint_DistEuclidean(const pt, target: TPoint): Double;');
  AddFunction(@TPoint_DistEuclidean2, 'function TPoint_DistEuclidean2(const pt, target: TPoint): Double;');
  AddFunction(@TPoint_DistSquaredEuclidean, 'function TPoint_DistSquaredEuclidean(const pt, target: TPoint): Double;');
  AddFunction(@TPoint_DistManhattan, 'function TPoint_DistManhattan(const pt, target: TPoint): Double;');
  AddFunction(@TPoint_DistChebyshev, 'function TPoint_DistChebyshev(const pt, target: TPoint): Double;');
  AddFunction(@TPoint_Grid, 'function TPoint_Grid(const pt: TPoint; const rows, columns: Integer; const spaceVertical: Integer = 0; const spaceHorizontal: Integer = 0): TPointArray;');
  AddFunction(@TPoint_Row, 'function TPoint_Row(const pt: TPoint; const cells: Integer; const space: Integer = 0): TPointArray;');
  AddFunction(@TPoint_Column, 'function TPoint_Column(const pt: TPoint; const cells: Integer; const space: Integer = 0): TPointArray;');
  AddFunction(@TPoint_Neighbour, 'function TPoint_Neighbour(const pt: TPoint; const p: TPoint; const adjacency8: Boolean = True): Boolean; overload;');
  AddFunction(@TPoint_Neighbor, 'function TPoint_Neighbor(const pt: TPoint; const p: TPoint; const adjacency8: Boolean = True): Boolean; overload;');
  AddFunction(@TPoint_Adjacent1, 'function TPoint_Adjacent(const pt: TPoint; const p: TPoint; const adjacency8: Boolean = True): Boolean; overload;');
  AddFunction(@TPoint_Adjacent2, 'function TPoint_Adjacent(const pt: TPoint; const adjacency8: Boolean = True): TPointArray; overload;');
  AddFunction(@TPoint_Neighbours, 'function TPoint_Neighbours(const pt: TPoint; const adjacency8: Boolean = True): TPointArray; overload;');
  AddFunction(@TPoint_Neighbors, 'function TPoint_Neighbors(const pt: TPoint; const adjacency8: Boolean = True): TPointArray; overload;'); 
  AddFunction(@TPoint_ToY, 'function TPoint_ToY(const pt: TPoint; const yGoal: Integer): TPointArray; overload;');
  AddFunction(@TPoint_ToX, 'function TPoint_ToX(const pt: TPoint; const xGoal: Integer): TPointArray; overload;');
  AddFunction(@TPoint_Linked, 'function TPoint_Linked(const pt: TPoint; const p: TPoint; const link: TPointArray): Boolean; overload;');
  AddFunction(@TPoint_Boxed1, 'function TPoint_Boxed(const pt: TPoint; const xRadius, yRadius: Integer): TBox; overload;');
  AddFunction(@TPoint_Boxed2, 'function TPoint_Boxed(const pt: TPoint; const radius: Integer = 0): TBox; overload;');
  AddFunction(@TPoint_ToBox1, 'function TPoint_ToBox(const pt: TPoint; const width, height: Integer): TBox; overload;');
  AddFunction(@TPoint_ToBox2, 'function TPoint_ToBox(const pt: TPoint; const size: Integer = 0): TBox; overload;');
  AddFunction(@TPoint_Boxify1, 'function TPoint_Boxify(const pt: TPoint; const width, height: Integer): TBox; overload;');
  AddFunction(@TPoint_Boxify2, 'function TPoint_Boxify(const pt: TPoint; const size: Integer = 0): TBox; overload;');  

  AddFunction(@TBox_Build1, 'function TBox_Build(const minX, minY, maxX, maxY: Integer): TBox; overload;');
  AddFunction(@TBox_Build2, 'function TBox_Build(const top, bottom: TPoint): TBox; overload;');
  AddFunction(@TBox_Build3, 'function TBox_Build(const valueX, valueY: Integer): TBox; overload;');
  AddFunction(@TBox_Build4, 'function TBox_Build(const target: TPoint): TBox; overload;');
  AddFunction(@TBox_Build5, 'function TBox_Build(const value: Integer = 0): TBox; overload;');
  AddFunction(@TBox_Create1, 'function TBox_Create(const minX, minY, maxX, maxY: Integer): TBox; overload;');
  AddFunction(@TBox_Create2, 'function TBox_Create(const top, bottom: TPoint): TBox; overload;');
  AddFunction(@TBox_Create3, 'function TBox_Create(const valueX, valueY: Integer): TBox; overload;');
  AddFunction(@TBox_Create4, 'function TBox_Create(const target: TPoint): TBox; overload;');
  AddFunction(@TBox_Create5, 'function TBox_Create(const value: Integer = 0): TBox; overload;');
  AddFunction(@TBox_Construct, 'function TBox_Construct(const XS, YS, XE, YE: Integer): TBox; overload');
  AddFunction(@TBox_Init1, 'function TBox_Init(var bx: TBox; const bX1, bY1, bX2, bY2: Integer): TBox; overload;');
  AddFunction(@TBox_Init2, 'function TBox_Init(var bx: TBox; const b: TBox): TBox; overload;');
  AddFunction(@TBox_Init3, 'function TBox_Init(var bx: TBox; const val: Integer = 0): TBox; overload;');
  AddFunction(@TBox_Init4, 'function TBox_Init(var bx: TBox; const p: TPoint): TBox; overload;');
  AddFunction(@TBox_Init5, 'function TBox_Init(var bx: TBox; const TL, BR: TPoint): TBox; overload;');
  AddFunction(@TBox_Make1, 'function TBox_Make(const pt: TPoint; const radius: Integer = 0): TBox; overload;');
  AddFunction(@TBox_Make2, 'function TBox_Make(const pt: TPoint; const wRadius, hRadius: Integer): TBox; overload;');
  AddFunction(@TBox_Form1, 'function TBox_Form(const pt: TPoint; const size: Integer = 1): TBox; overload;');
  AddFunction(@TBox_Form2, 'function TBox_Form(const pt: TPoint; const width, height: Integer): TBox; overload;');
  AddFunction(@TBox_Frame1, 'function TBox_Frame(const bx: TBox; var width, height: Integer): TBox; overload;');
  AddFunction(@TBox_Frame2, 'function TBox_Frame(const bx: TBox): TBox; overload;');
  AddFunction(@TBox_Singular, 'function TBox_Singular(const bx: TBox): Boolean;');
  AddFunction(@TBox_IsPoint, 'function TBox_IsPoint(const bx: TBox): Boolean;');
  AddFunction(@TBox_IsHorizontalLine, 'function TBox_IsHorizontalLine(const bx: TBox): Boolean;');
  AddFunction(@TBox_IsVerticalLine, 'function TBox_IsVerticalLine(const bx: TBox): Boolean;');
  AddFunction(@TBox_IsLine, 'function TBox_IsLine(const bx: TBox): Boolean;');
  AddFunction(@TBox_Linear, 'function TBox_Linear(const bx: TBox): Boolean;');
  AddFunction(@TBox_Is2D, 'function TBox_Is2D(const bx: TBox): Boolean;');
  AddFunction(@TBox_Collapsed, 'function TBox_Collapsed(const bx: TBox): Boolean;');
  AddFunction(@TBox_Boxy, 'function TBox_Boxy(const bx: TBox): Boolean;');
  AddFunction(@TBox_Plural, 'function TBox_Plural(const bx: TBox): Boolean;');
  AddFunction(@TBox_Rectangular, 'function TBox_Rectangular(const bx: TBox): Boolean;');
  AddFunction(@TBox_Equilateral, 'function TBox_Equilateral(const bx: TBox): Boolean;');
  AddFunction(@TBox_Square, 'function TBox_Square(const bx: TBox): Boolean;');
  AddFunction(@TBox_Size1, 'function TBox_Size(const bx: TBox; var width, height: Integer): Integer; overload;');
  AddFunction(@TBox_Size2, 'function TBox_Size: TPoint; overload;');
  AddFunction(@TBox_Area, 'function TBox_Area(const bx: TBox): Integer;');
  AddFunction(@TBox_Capacity, 'function TBox_Capacity(const bx: TBox): Integer;');
  AddFunction(@TBox_Footprint, 'function TBox_Footprint(const bx: TBox): Double;');
  AddFunction(@TBox_Perimeter, 'function TBox_Perimeter(const bx: TBox): Integer;');
  AddFunction(@TBox_Perim, 'function TBox_Perim(const bx: TBox): Integer;');
  AddFunction(@TBox_Circumference, 'function TBox_Circumference(const bx: TBox): Integer;');
  AddFunction(@TBox_Ratio, 'function TBox_Ratio(const bx: TBox): Double;');
  AddFunction(@TBox_Diagonal, 'function TBox_Diagonal(const bx: TBox): Double;');
  AddFunction(@TBox_Width1, 'function TBox_Width(const bx: TBox): Integer; overload;');
  AddFunction(@TBox_Width2, 'function TBox_Width(var bx: TBox; const w: Integer): Integer; overload;');
  AddFunction(@TBox_Height1, 'function TBox_Height(const bx: TBox): Integer; overload;');
  AddFunction(@TBox_Height2, 'function TBox_Height(var bx: TBox; const h: Integer): Integer; overload;');
  AddFunction(@TBox_Horizontal, 'function TBox_Horizontal(const bx: TBox): TRange; overload;');
  AddFunction(@TBox_Vertical, 'function TBox_Vertical(const bx: TBox): TRange; overload;');
  AddFunction(@TBox_Expand1, 'function TBox_Expand(const bx: TBox; const change: Integer = 1): TBox; overload;');
  AddFunction(@TBox_Expand2, 'function TBox_Expand(const bx: TBox; const target: TBox): TBox; overload;');
  AddFunction(@TBox_Shrink1, 'function TBox_Shrink(const bx: TBox; const change: Integer = 1): TBox; overload;');
  AddFunction(@TBox_Shrink2, 'function TBox_Shrink(const bx: TBox; const target: TBox): TBox; overload;');
  AddFunction(@TBox_Resize, 'function TBox_Resize(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeVertically, 'function TBox_ResizeVertically(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeHorizontally, 'function TBox_ResizeHorizontally(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeTop, 'function TBox_ResizeTop(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeBottom, 'function TBox_ResizeBottom(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeLeft, 'function TBox_ResizeLeft(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeRight, 'function TBox_ResizeRight(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeTopLeft, 'function TBox_ResizeTopLeft(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeTopRight, 'function TBox_ResizeTopRight(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeBottomRight, 'function TBox_ResizeBottomRight(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_ResizeBottomLeft, 'function TBox_ResizeBottomLeft(const bx: TBox; const change: Integer): TBox;');
  AddFunction(@TBox_Equal, 'function TBox_Equal(const bx: TBox; const b: TBox): Boolean;');
  AddFunction(@TBox_Contains1, 'function TBox_Contains(const bx: TBox; const pt: TPoint): Boolean; overload;');
  AddFunction(@TBox_Contains2, 'function TBox_Contains(const bx: TBox; const b: TBox): Boolean; overload;');
  AddFunction(@TBox_Inside1, 'function TBox_Inside(const bx: TBox; const target: TBox): Boolean; overload;');
  AddFunction(@TBox_Inside2, 'function TBox_Inside(const bx: TBox; const targets: TBoxArray): Boolean; overload;');
  AddFunction(@TBox_Center, 'function TBox_Center(const bx: TBox): TPoint;');
  AddFunction(@TBox_Envelope, 'function TBox_Envelope(const bx: TBox; const b: TBox): TBox;');
  AddFunction(@TBox_Overlap, 'function TBox_Overlap(const bx: TBox; const b: TBox): Boolean;');
  AddFunction(@TBox_Intersect1, 'function TBox_Intersect(const bx: TBox; const b: TBox): TBox; overload;');
  AddFunction(@TBox_Intersect2, 'function TBox_Intersect(const bx: TBox; const b: TBox; var iArea: TBox): Boolean; overload;');
  AddFunction(@TBox_Valid, 'function TBox_Valid(const bx: TBox): Boolean;');
  AddFunction(@TBox_Invalid, 'function TBox_Invalid(const bx: TBox): Boolean;');
  AddFunction(@TBox_Similar1, 'function TBox_Similar(const bx: TBox; const b: TBox; const maxWDiff, maxHDiff: Integer): Boolean; overload;');
  AddFunction(@TBox_Similar2, 'function TBox_Similar(const bx: TBox; const b: TBox; const diff: Integer): Boolean; overload;');
  AddFunction(@TBox_Fix, 'function TBox_Fix(var bx: TBox): Boolean;');
  AddFunction(@TBox_Constraint, 'function TBox_Constraint(var bx: TBox; const area: TBox): Boolean;');
  AddFunction(@TBox_Clip, 'function TBox_Clip(const bx: TBox; const area: TBox): TBox;');
  AddFunction(@TBox_Restrict, 'function TBox_Restrict(var bx: TBox; const area: TBox): Boolean;');
  AddFunction(@TBox_Clamp, 'function TBox_Clamp(const bx: TBox; const area: TBox): TBox;');
  AddFunction(@TBox_Points1, 'function TBox_Points(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Points2, 'function TBox_Points(const bx: TBox; const pIndex: Integer): TPoint; overload;');
  AddFunction(@TBox_Points3, 'function TBox_Points(const bx: TBox; const pIDs: TIntegerArray): TPointArray; overload;');
  AddFunction(@TBox_Points4, 'function TBox_Points(const bx: TBox; var xArray, yArray: TIntegerArray): Integer; overload;');
  AddFunction(@TBox_Pixels1, 'function TBox_Pixels(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Pixels2, 'function TBox_Pixels(const bx: TBox; const index: Integer): TPoint; overload;');
  AddFunction(@TBox_Pixeled, 'function TBox_Pixeled(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Pts, 'function TBox_Pts(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Explode, 'function TBox_Explode(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Flat, 'function TBox_Flat(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_TPA1, 'function TBox_TPA(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_TPA2, 'function TBox_TPA(const bx: TBox; const index: Integer): TPoint; overload;');
  AddFunction(@TBox_Contents, 'function TBox_Contents(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Content, 'function TBox_Content(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Extract, 'function TBox_Extract(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Enumerate, 'function TBox_Enumerate(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Enumerated, 'function TBox_Enumerated(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Elements, 'function TBox_Elements(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Unzip1, 'function TBox_Unzip(const bx: TBox; var bX1, bY1, bX2, bY2: Integer): Integer; overload;');
  AddFunction(@TBox_Unzip2, 'function TBox_Unzip(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Unpack, 'function TBox_Unpack(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_IDs1, 'function TBox_IDs(const bx: TBox): TIntegerArray; overload;');
  AddFunction(@TBox_IDs2, 'function TBox_IDs(const bx: TBox; const p: TPoint): Integer; overload;');
  AddFunction(@TBox_IDs3, 'function TBox_IDs(const bx: TBox; const p: TPointArray): TIntegerArray; overload;');
  AddFunction(@TBox_Rows, 'function TBox_Rows(const bx: TBox): T2DPointArray;');
  AddFunction(@TBox_Columns, 'function TBox_Columns(const bx: TBox): T2DPointArray;');
  AddFunction(@TBox_Rowwise, 'function TBox_Rowwise(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Columnwise, 'function TBox_Columnwise(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Grid, 'function TBox_Grid(const bx: TBox; const rows, columns: Integer; const spaceVertical: Integer = 0; const spaceHorizontal: Integer = 0): TBoxArray;');
  AddFunction(@TBox_Row, 'function TBox_Row(const bx: TBox; const cells: Integer; const space: Integer = 0): TBoxArray;');
  AddFunction(@TBox_Column, 'function TBox_Column(const bx: TBox; const cells: Integer; const space: Integer = 0): TBoxArray;');
  AddFunction(@TBox_Border1, 'function TBox_Border(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Border2, 'function TBox_Border(const bx: TBox; const X, Y: Integer): Boolean; overload;');
  AddFunction(@TBox_Border3, 'function TBox_Border(const bx: TBox; const pt: TPoint): Boolean; overload;');
  AddFunction(@TBox_Edge1, 'function TBox_Edge(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Edge2, 'function TBox_Edge(const bx: TBox; const X, Y: Integer): Boolean; overload;');
  AddFunction(@TBox_Edge3, 'function TBox_Edge(const bx: TBox; const pt: TPoint): Boolean; overload;');
  AddFunction(@TBox_Outline1, 'function TBox_Outline(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Outline2, 'function TBox_Outline(const bx: TBox; const X, Y: Integer): Boolean; overload;');
  AddFunction(@TBox_Outline3, 'function TBox_Outline(const bx: TBox; const pt: TPoint): Boolean; overload;');
  AddFunction(@TBox_Contour, 'function TBox_Contour(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Spiral, 'function TBox_Spiral(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Traverse, 'function TBox_Traverse(const bx: TBox): TPointArray;');
  AddFunction(@TBox_CornerPoints, 'function TBox_CornerPoints(const bx: TBox): TPointArray;');
  AddFunction(@TBox_CornerPts, 'function TBox_CornerPts(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Corners, 'function TBox_Corners(const bx: TBox): TPointArray;');
  AddFunction(@TBox_SimilarSize1, 'function TBox_SimilarSize(const bx: TBox; const b: TBox; const widthDifferency, heightDifferency: Integer): Boolean; overload;');
  AddFunction(@TBox_SimilarSize2, 'function TBox_SimilarSize(const bx: TBox; const b: TBox; const differency: Integer): Boolean; overload;');
  AddFunction(@TBox_Centered, 'function TBox_Centered(const bx: TBox; const area: TBox): TBox;');
  AddFunction(@TBox_CenterVertically, 'function TBox_CenterVertically(const bx: TBox; const area: TBox): TBox;');
  AddFunction(@TBox_CenterHorizontally, 'function TBox_CenterHorizontally(const bx: TBox; const area: TBox): TBox;');
  AddFunction(@TBox_ExtendX, 'function TBox_ExtendX(var bx: TBox; const xCoord: Integer): Boolean;');
  AddFunction(@TBox_ExtendY, 'function TBox_ExtendY(var bx: TBox; const yCoord: Integer): Boolean;');
  AddFunction(@TBox_Extend, 'function TBox_Extend(var bx: TBox; const pt: TPoint): Boolean;');
  AddFunction(@TBox_UnionX, 'function TBox_UnionX(const bx: TBox; const xCoord: Integer): TBox;');
  AddFunction(@TBox_UnionY, 'function TBox_UnionY(const bx: TBox; const yCoord: Integer): TBox;');
  AddFunction(@TBox_Union1, 'function TBox_Union(const bx: TBox; const pt: TPoint): TBox; overload;');
  AddFunction(@TBox_Union2, 'function TBox_Union(const bx: TBox; const b: TBox): TBox; overload;');
  AddFunction(@TBox_Disjoint, 'function TBox_Disjoint(const bx: TBox; const target: TBox): Boolean; overload;');
  AddFunction(@TBox_Lacks, 'function TBox_Lacks(const bx: TBox; const pt: TPoint): Boolean; overload;');
  AddFunction(@TBox_Mixed, 'function TBox_Mixed(const bx: TBox; const mixings: Integer = 1): TPointArray;');
  AddFunction(@TBox_Shake, 'function TBox_Shake(const bx: TBox; const shakes: Integer = 1): TPointArray;');
  AddFunction(@TBox_Shuffle, 'function TBox_Shuffle(const bx: TBox; const shuffles: Integer = 1): TPointArray;');
  AddFunction(@TBox_Any, 'function TBox_Any(const bx: TBox): TPoint;');
  AddFunction(@TBox_Some1, 'function TBox_Some(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Some2, 'function TBox_Some(const bx: TBox; const amount: Integer): TPointArray; overload;');
  AddFunction(@TBox_All, 'function TBox_All(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Placements, 'function TBox_Placements(const bx: TBox; const target: TBox): TBoxArray; overload;');
  AddFunction(@TBox_Tiled, 'function TBox_Tiled(const bx: TBox; const target: TBox): TBoxArray; overload;');
  AddFunction(@TBox_Gridded, 'function TBox_Gridded(const bx: TBox; const target: TBox): TBoxArray; overload;');
  AddFunction(@TBox_Reserve1, 'function TBox_Reserve(const bx: TBox): TPointArray; overload;');
  AddFunction(@TBox_Reserve2, 'function TBox_Reserve(const bx: TBox; var aBox: TPointArray): Integer; overload;');

  AddFunction(@TRange_Create1, 'function TRange_Create(const rStart, rStop: Integer): TRange; overload;');
  AddFunction(@TRange_Create2, 'function TRange_Create(const value: Integer): TRange; overload;');
  AddFunction(@TRange_Create3, 'function TRange_Create: TRange; overload;');
  AddFunction(@TRange_Construct, 'function TRange_Construct(const rStart, rStop: Integer): TRange; overload;');
  AddFunction(@TRange_Build, 'function TRange_Build(const rStart: Integer = 0; const rStop: Integer = 0): Integer;');
  AddFunction(@TRange_Init1, 'function TRange_Init(var range: TRange; const rStart, rStop: Integer): TRange; overload;');
  AddFunction(@TRange_Init2, 'function TRange_Init(var range: TRange; const r: TRange): TRange; overload;');
  AddFunction(@TRange_Init3, 'function TRange_Init(var range: TRange; const val: Integer = 0): TRange; overload;');
  AddFunction(@TRange_Singular, 'function TRange_Singular(const range: TRange): Boolean;');
  AddFunction(@TRange_Atomic, 'function TRange_Atomic(const range: TRange): Boolean;');
  AddFunction(@TRange_Plural, 'function TRange_Plural(const range: TRange): Boolean;');
  AddFunction(@TRange_Composite, 'function TRange_Composite(const range: TRange): Boolean;');
  AddFunction(@TRange_Sorted, 'function TRange_Sorted(const range: TRange; const oAscending: Boolean = True): TRange; overload;');
  AddFunction(@TRange_Sort, 'function TRange_Sort(var range: TRange; const oAscending: Boolean = True): Boolean; overload;');
  AddFunction(@TRange_Ordered, 'function TRange_Ordered(const range: TRange; const oAscending: Boolean = True): TRange; overload;');
  AddFunction(@TRange_Order, 'function TRange_Order(var range: TRange; const oAscending: Boolean = True): Boolean; overload;');
  AddFunction(@TRange_Asc, 'function TRange_Asc(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Ascend, 'function TRange_Ascend(const range: TRange): TRange;');
  AddFunction(@TRange_Ascended, 'function TRange_Ascended(const range: TRange): TRange;');
  AddFunction(@TRange_Ascending, 'function TRange_Ascending(const range: TRange): Boolean;');
  AddFunction(@TRange_Ascends, 'function TRange_Ascends(const range: TRange): Boolean;');
  AddFunction(@TRange_Desc, 'function TRange_Desc(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Descend, 'function TRange_Descend(const range: TRange): TRange;');
  AddFunction(@TRange_Descended, 'function TRange_Descended(const range: TRange): TRange;');
  AddFunction(@TRange_Descending, 'function TRange_Descending(const range: TRange): Boolean;');
  AddFunction(@TRange_Descends, 'function TRange_Descends(const range: TRange): Boolean;');
  AddFunction(@TRange_Increasing, 'function TRange_Increasing(const range: TRange): Boolean;');
  AddFunction(@TRange_Decreasing, 'function TRange_Decreasing(const range: TRange): Boolean;');
  AddFunction(@TRange_Growing, 'function TRange_Growing(const range: TRange): Boolean;');
  AddFunction(@TRange_Grows, 'function TRange_Grows(const range: TRange): Boolean;');
  AddFunction(@TRange_Shrinking, 'function TRange_Shrinking(const range: TRange): Boolean;');
  AddFunction(@TRange_Shrinks, 'function TRange_Shrinks(const range: TRange): Boolean;');
  AddFunction(@TRange_Rising, 'function TRange_Rising(const range: TRange): Boolean;');
  AddFunction(@TRange_Rises, 'function TRange_Rises(const range: TRange): Boolean;');
  AddFunction(@TRange_Dropping, 'function TRange_Dropping(const range: TRange): Boolean;');
  AddFunction(@TRange_Drops, 'function TRange_Drops(const range: TRange): Boolean;');
  AddFunction(@TRange_Grab, 'function TRange_Grab(const range: TRange): TRange;');
  AddFunction(@TRange_Count, 'function TRange_Count(const range: TRange): Integer;');
  AddFunction(@TRange_Area, 'function TRange_Area(const range: TRange): Integer;');
  AddFunction(@TRange_Span, 'function TRange_Span(const range: TRange): Integer;');
  AddFunction(@TRange_Size1, 'function TRange_Size(const range: TRange): Integer; overload;');
  AddFunction(@TRange_Size2, 'function TRange_Size(const range: TRange; var minVal, maxVal: Integer): Integer; overload;');
  AddFunction(@TRange_Capacity, 'function TRange_Capacity(const range: TRange): Integer;');
  AddFunction(@TRange_Frame1, 'function TRange_Frame(const range: TRange; var rSize: Integer): TRange; overload;');
  AddFunction(@TRange_Frame2, 'function TRange_Frame(const range: TRange): TRange; overload;');
  AddFunction(@TRange_Lowest, 'function TRange_Lowest(const range: TRange): Integer;');
  AddFunction(@TRange_Minimum, 'function TRange_Minimum(const range: TRange): Integer;');
  AddFunction(@TRange_Highest, 'function TRange_Highest(const range: TRange): Integer;');
  AddFunction(@TRange_Maximum, 'function TRange_Maximum(const range: TRange): Integer;');
  AddFunction(@TRange_Exceeds, 'function TRange_Exceeds(const range: TRange; const maxElements: Integer): Boolean;');
  AddFunction(@TRange_Insufficient, 'function Insufficient(const range: TRange; const minElements: Integer): Boolean;');
  AddFunction(@TRange_Digits1, 'function TRange_Digits(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Digits2, 'function TRange_Digits(const range: TRange; const dIndex: Integer): Integer; overload;');
  AddFunction(@TRange_Digits3, 'function TRange_Digits(const range: TRange; const dIDs: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TRange_Ints, 'function TRange_Ints(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Values, 'function TRange_Values(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_TIA, 'function TRange_TIA(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Enumerate, 'function TRange_Enumerate(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Enumerated, 'function TRange_Enumerated(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Elements, 'function TRange_Elements(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Numbers, 'function TRange_Numbers(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Items, 'function TRange_Items(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_ToArray, 'function TRange_ToArray(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_AsArray, 'function TRange_AsArray(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_IDs1, 'function TRange_IDs(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_IDs2, 'function TRange_IDs(const range: TRange; const dValue: Integer): Integer; overload;');
  AddFunction(@TRange_IDs3, 'function TRange_IDs(const range: TRange; const dVals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TRange_Materialize, 'function TRange_Materialize(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Mixed, 'function TRange_Mixed(const range: TRange; const mixings: Integer = 1): TIntegerArray;');
  AddFunction(@TRange_Shake, 'function TRange_Shake(const range: TRange; const shakes: Integer = 1): TIntegerArray;');
  AddFunction(@TRange_Shuffle, 'function TRange_Shuffle(const range: TRange; const shuffles: Integer = 1): TIntegerArray;');
  AddFunction(@TRange_Any, 'function TRange_Any(const range: TRange): Integer;');
  AddFunction(@TRange_Some1, 'function TRange_Some(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Some2, 'function TRange_Some(const range: TRange; const amount: Integer): TIntegerArray; overload;');
  AddFunction(@TRange_All, 'function TRange_All(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Unzip, 'function TRange_Unzip(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Unpack, 'function TRange_Unpack(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Unwrap, 'function TRange_Unwrap(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Unfold, 'function TRange_Unfold(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_ZigZag, 'function TRange_ZigZag(const range: TRange; const zAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TRange_Normed, 'function TRange_Normed(const range: TRange): TRange;');
  AddFunction(@TRange_Norm, 'function TRange_Norm(const range: TRange): TRange;');
  AddFunction(@TRange_Normal, 'function TRange_Normal(const range: TRange): TRange;');
  AddFunction(@TRange_Normally, 'function TRange_Normally(const range: TRange): TRange;');
  AddFunction(@TRange_Normalize, 'function TRange_Normalize(const range: TRange): TRange;');
  AddFunction(@TRange_Normalized, 'function TRange_Normalized(const range: TRange): TRange;');
  AddFunction(@TRange_Overlapping, 'function TRange_Overlapping(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Overlap, 'function TRange_Overlap(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Intersect1, 'function TRange_Intersection(const range: TRange; const b: TRange): TRange; overload;');
  AddFunction(@TRange_Intersect2, 'function TRange_Intersect(const range: TRange; const b: TRange; var iZone: TRange): Boolean; overload;');
  AddFunction(@TRange_Union1, 'function TRange_Union(const range: TRange; const b: TRange): TRange; overload;');
  AddFunction(@TRange_Union2, 'function TRange_Union(const range: TRange; const val: Integer): TRange; overload;');
  AddFunction(@TRange_Extend, 'function TRange_Extend(var range: TRange; const val: Integer): Boolean;');
  AddFunction(@TRange_Offset, 'function TRange_Offset(const range: TRange; const sDelta: Integer): TRange;');
  AddFunction(@TRange_Contains1, 'function TRange_Contains(const range: TRange; const x: Integer): Boolean; overload;');
  AddFunction(@TRange_Contains2, 'function TRange_Contains(const range: TRange; const x: TRange): Boolean; overload;');
  AddFunction(@TRange_Above1, 'function TRange_Above(const range: TRange; const target: Integer): Boolean; overload;');
  AddFunction(@TRange_Above2, 'function TRange_Above(const range: TRange; const target: TRange): Boolean; overload;');
  AddFunction(@TRange_Below1, 'function TRange_Below(const range: TRange; const target: Integer): Boolean; overload;');
  AddFunction(@TRange_Below2, 'function TRange_Below(const range: TRange; const target: TRange): Boolean; overload;');
  AddFunction(@TRange_Reversed, 'function TRange_Reversed(const range: TRange): TRange;');
  AddFunction(@TRange_Reverse, 'function TRange_Reverse(var range: TRange): Boolean;');
  AddFunction(@TRange_Equals, 'function TRange_Equals(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Differs, 'function TRange_Differs(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Equal, 'function TRange_Equal(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Differ, 'function TRange_Differ(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Clamp, 'function TRange_Clamp(const range: TRange; const zone: TRange): TRange;');
  AddFunction(@TRange_ClampMax, 'function TRange_ClampMax(const range: TRange; const maxValue: Integer): TRange;');
  AddFunction(@TRange_ClampMin, 'function TRange_ClampMin(const range: TRange; const minValue: Integer): TRange;');
  AddFunction(@TRange_Restrict, 'function TRange_Restrict(var range: TRange; const zone: TRange): Boolean;');
  AddFunction(@TRange_RestrictMin, 'function TRange_RestrictMin(var range: TRange; const minValue: Integer): Boolean;');
  AddFunction(@TRange_RestrictMax, 'function TRange_RestrictMax(var range: Trange; const maxValue: Integer): Boolean;');
  AddFunction(@TRange_Clip, 'function TRange_Clip(const range: TRange; const zone: TRange): TRange;');
  AddFunction(@TRange_ClipMin, 'function TRange_ClipMin(const range: TRange; const minValue: Integer): TRange;');
  AddFunction(@TRange_ClipMax, 'function TRange_ClipMax(const range: TRange; const maxValue: Integer): TRange;');
  AddFunction(@TRange_Ensured, 'function TRange_Ensured(const range: TRange; const zone: TRange): TRange;');
  AddFunction(@TRange_Ensure, 'function TRange_Ensure(var range: TRange; const zone: TRange): Boolean;');
  AddFunction(@TRange_Absorb, 'function TRange_Absorb(var range: TRange; const val: Integer): Boolean; overload;');
  AddFunction(@TRange_Include, 'function TRange_Include(const range: TRange; const val: Integer): TRange; overload;');
  AddFunction(@TRange_Distribute, 'function TRange_Distribute(const range: TRange; const parts: Integer): TRangeArray;');
  AddFunction(@TRange_Partition, 'function TRange_Partition(const range: TRange; const size: Integer): TRangeArray;');
  AddFunction(@TRange_Divide, 'function TRange_Divide(const range: TRange; const size: Integer): TRangeArray;');
  AddFunction(@TRange_Neighbor, 'function TRange_Neighbor(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Neighbour, 'function TRange_Neighbour(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Touch, 'function TRange_Touch(const range: TRange; const b: TRange): Boolean;');
  AddFunction(@TRange_Touches, 'function TRange_Touches(const range: TRange; const b: TRange; const maxTouch: Integer = 1; const minTouch: Integer = 1): Boolean;');
  AddFunction(@TRange_Touching, 'function TRange_Touching(const range: TRange; const b: TRange; const maxTouch: Integer = 1; const minTouch: Integer = 1): Boolean;');
  AddFunction(@TRange_Distance, 'function TRange_Distance(const range: TRange; const b: TRange): Integer;');
  AddFunction(@TRange_DistHausdorff, 'function TRange_DistHausdorff(const range: TRange; const b: TRange): Integer;');
  AddFunction(@TRange_Delta, 'function TRange_Delta(const range: TRange): Integer;');
  AddFunction(@TRange_Direction, 'function TRange_Direction(const range: TRange): Integer;');
  AddFunction(@TRange_Magnitude, 'function TRange_Magnitude(const range: TRange): Integer;');
  AddFunction(@TRange_Orientation, 'function TRange_Orientation(const range: TRange): Integer;');
  AddFunction(@TRange_Deficit, 'function TRange_Deficit(const range: TRange): Integer;');
  AddFunction(@TRange_Digit, 'function TRange_Digit(const range: TRange; const x: Integer): Boolean;');
  AddFunction(@TRange_Value, 'function TRange_Value(const range: TRange; const x: Integer): Boolean;');
  AddFunction(@TRange_Item, 'function TRange_Item(const range: TRange; const x: Integer): Boolean;');
  AddFunction(@TRange_Pivot, 'function TRange_Pivot(const range: TRange): Integer;');
  AddFunction(@TRange_Mean, 'function TRange_Mean(const range: TRange): Double;');
  AddFunction(@TRange_Middle, 'function TRange_Middle(const range: TRange): Integer;');
  AddFunction(@TRange_Mid, 'function TRange_Mid(const range: TRange): Double;');
  AddFunction(@TRange_MidVal, 'function TRange_MidVal(const range: TRange): Double;');
  AddFunction(@TRange_MidValue, 'function TRange_MidValue(const range: TRange): Double;');
  AddFunction(@TRange_Midpoint, 'function TRange_Midpoint(const range: TRange; const wStart: Double = 1; const wStop: Double = 1): Double; overload;');
  AddFunction(@TRange_Average, 'function TRange_Average(const range: TRange): Double;');
  AddFunction(@TRange_Center, 'function TRange_Center(const range: TRange): Integer;');
  AddFunction(@TRange_Central, 'function TRange_Central(const range: TRange): Integer;');
  AddFunction(@TRange_Half, 'function TRange_Half(const range: TRange): Integer;');
  AddFunction(@TRange_Halfway, 'function TRange_Halfway(const range: TRange): Integer;');
  AddFunction(@TRange_Radius, 'function TRange_Radius(const range: TRange): Integer;');
  AddFunction(@TRange_Rad, 'function TRange_Rad(const range: TRange): Integer;');
  AddFunction(@TRange_Radiar, 'function TRange_Radiar(const range: TRange): Integer;');
  AddFunction(@TRange_AsStr, 'function TRange_AsStr(const range: TRange; const rReversed: Boolean = False): string; overload;');
  AddFunction(@TRange_Str, 'function TRange_Str(const range: TRange; const openRange: string = ''[''; const closeRange: string = '']''; const glueRange: string = ''..''): string;');  
  AddFunction(@TRange_ToStr, 'function TRange_ToStr(const range: TRange; const glueRange: string = ''..''; const openRange: string = ''[''; const closeRange: string = '']''): string;');
  AddFunction(@TRange_Stringify, 'function TRange_Stringify(const range: TRange; const openRange: string = ''[''; const glueRange: string = ''..''; const closeRange: string = '']''): string;');
  AddFunction(@TRange_Sum, 'function TRange_Sum(const range: TRange): Int64; overload;');
  AddFunction(@TRange_Summation, 'function TRange_Summation(const range: TRange): Int64; overload;');
  AddFunction(@TRange_Total, 'function TRange_Total(const range: TRange): Int64; overload;');
  AddFunction(@TRange_Reserve1, 'function TRange_Reserve(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Reserve2, 'function TRange_Reserve(const range: TRange; var aRange: TIntegerArray): Integer; overload;');
  AddFunction(@TRange_Extract, 'function TRange_Extract(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Extracted, 'function TRange_Extracted(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Steps, 'function TRange_Steps(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Recursed, 'function TRange_Recursed(const range: TRange): TIntegerArray; overload;');
  AddFunction(@TRange_Limit, 'function TRange_Limit(const range: TRange; const val: Integer): Integer; overload;');
  AddFunction(@TRange_MinLimit, 'function TRange_MinLimit(const range: TRange; const val: Integer): Integer; overload;');
  AddFunction(@TRange_MaxLimit, 'function TRange_MaxLimit(const range: TRange; const val: Integer): Integer; overload;');
  AddFunction(@TRange_Lacks, 'function TRange_Lacks(const range: TRange; const x: Integer): Boolean;');
  AddFunction(@TRange_Outside, 'function TRange_Outside(const range: TRange; const x: Integer): Boolean;');
  AddFunction(@TRange_Windows, 'function TRange_Windows(const range: TRange; const target: TRange): TRangeArray; overload;');
  AddFunction(@TRange_Sectioned, 'function TRange_Sectioned(const range: TRange; const target: TRange): TRangeArray; overload;');
  AddFunction(@TRange_Binned, 'function TRange_Binned(const range: TRange; const target: TRange): TRangeArray; overload;');
  AddFunction(@TRange_Sample, 'function TRange_Sample(const range: TRange; const sSize: Integer): TIntegerArray; overload;');
  AddFunction(@TRange_Centered, 'function TRange_Centered(const range: TRange; const rCenter: Integer): TRange; overload;');
  AddFunction(@TRange_Shift, 'function TRange_Shift(var range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Shifted, 'function TRange_Shifted(const range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Back, 'function TRange_Back(var range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Backed, 'function TRange_Backed(const range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Increase, 'function TRange_Increase(var range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Decrease, 'function TRange_Decrease(var range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Increment, 'function TRange_Increment(var range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Decrement, 'function TRange_Decrement(var range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Modify, 'function TRange_Modify(var range: TRange; const mStart, mStop: Integer): TRange; overload;');
  AddFunction(@TRange_Modified, 'function TRange_Modified(const range: TRange; const mStart, mStop: Integer): TRange; overload;');
  AddFunction(@TRange_Contract, 'function TRange_Contract(var range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Contracted, 'function TRange_Contracted(const range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Expand, 'function TRange_Expand(var range: TRange; const N: Integer = 1): TRange; overload;');
  AddFunction(@TRange_Expanded, 'function TRange_Expanded(const range: TRange; const N: Integer = 1): TRange; overload;');

  AddFunction(@TSegment_Create1, 'function TSegment_Create(const sA, sB: TPoint): TSegment; overload;');
  AddFunction(@TSegment_Create2, 'function TSegment_Create(const aX, aY, bX, bY: Integer): TSegment; overload;');
  AddFunction(@TSegment_Construct1, 'function TSegment_Construct(const sA, sB: TPoint): TSegment; overload;');
  AddFunction(@TSegment_Construct2, 'function TSegment_Construct(const aX, aY, bX, bY: Integer): TSegment; overload;');
  AddFunction(@TSegment_Bounds, 'function TSegment_Bounds(const sg: TSegment): TBox;');
  AddFunction(@TSegment_Boundaries, 'function TSegment_Boundaries(const sg: TSegment): TBox;');
  AddFunction(@TSegment_Envelope, 'function TSegment_Envelope(const sg: TSegment): TBox;');
  AddFunction(@TSegment_Points, 'function TSegment_Points(const sg: TSegment): TPointArray;');
  AddFunction(@TSegment_Pixels, 'function TSegment_Pixels(const sg: TSegment; const steps: Integer = 2147483647): TPointArray;');
  
  AddFunction(@TCircle_Create1, 'function TCircle_Create(const cCenter: TPoint; const cRadius: Integer): TCircle2; overload;');
  AddFunction(@TCircle_Create2, 'function TCircle_Create(const centerX, centerY: Integer; const radius: Double): TCircle2; overload;');
  AddFunction(@TCircle_Construct1, 'function TCircle_Construct(const cCenter: TPoint; const radius: Double): TCircle2; overload;');
  AddFunction(@TCircle_Construct2, 'function TCircle_Construct(const centerX, centerY: Integer; const radius: Double): TCircle2; overload;');
  AddFunction(@TCircle_Contains, 'function TCircle_Contains(const ci: TCircle2; const pt: TPoint): Boolean;');
  AddFunction(@TCircle_Item, 'function TCircle_Item(const ci: TCircle2; const pt: TPoint): Boolean;');
  AddFunction(@TCircle_Pixel, 'function TCircle_Pixel(const ci: TCircle2; const pt: TPoint): Boolean;');
  AddFunction(@TCircle_Bounds, 'function TCircle_Bounds(const ci: TCircle2): TBox;');
  AddFunction(@TCircle_Boundaries, 'function TCircle_Boundaries(const ci: TCircle2): TBox;');
  AddFunction(@TCircle_BoundingBox, 'function TCircle_BoundingBox(const ci: TCircle2): TBox;');
  AddFunction(@TCircle_Envelope, 'function TCircle_Envelope(const ci: TCircle2): TBox;');
  AddFunction(@TCircle_Points, 'function TCircle_Points(const ci: TCircle2): TPointArray;');
  AddFunction(@TCircle_TPA, 'function TCircle_TPA(const ci: TCircle2): TPointArray;');
  AddFunction(@TCircle_BorderPoints, 'function TCircle_BorderPoints(const ci: TCircle2; const count: Integer): TPointArray;');
  AddFunction(@TCircle_Border, 'function TCircle_Border(const ci: TCircle2): TPointArray;');

  AddFunction(@TIntegerArray_Bounds1, 'function TIntegerArray_Bounds(const arr: TIntegerArray): TRange; overload;');
  AddFunction(@TIntegerArray_Bounds2, 'function TIntegerArray_Bounds(const arr: TIntegerArray; var aSize: Integer): TRange; overload;');
  AddFunction(@TIntegerArray_BoundingRange, 'function TIntegerArray_BoundingRange(const arr: TIntegerArray): TRange;');
  AddFunction(@TIntegerArray_Boundaries, 'function TIntegerArray_Boundaries(const arr: TIntegerArray): TRange;');
  AddFunction(@TIntegerArray_Range, 'function TIntegerArray_Range(const arr: TIntegerArray): TRange;');
  AddFunction(@TIntegerArray_Coverage, 'function TIntegerArray_Coverage(const arr: TIntegerArray): TRange;');
  AddFunction(@TIntegerArray_MinMax, 'function TIntegerArray_MinMax(const arr: TIntegerArray): TRange;');
  AddFunction(@TIntegerArray_Region, 'function TIntegerArray_Region(const arr: TIntegerArray): TRange; overload;');
  AddFunction(@TIntegerArray_Extent, 'function TIntegerArray_Extent(const arr: TIntegerArray): TRange;');
  AddFunction(@TIntegerArray_Undupe, 'function TIntegerArray_Undupe(const arr: TIntegerArray): TIntegerArray;');
  AddFunction(@TIntegerArray_Unduped, 'function TIntegerArray_Unduped(const arr: TIntegerArray): TIntegerArray;');
  AddFunction(@TIntegerArray_Numberline, 'function TIntegerArray_Numberline(const arr: TIntegerArray): TIntegerArray;');
  AddFunction(@TIntegerArray_Sum, 'function TIntegerArray_Sum(const arr: TIntegerArray): Int64;');
  AddFunction(@TIntegerArray_Density, 'function TIntegerArray_Density(const arr: TIntegerArray): Double;');
  AddFunction(@TIntegerArray_Occupancy, 'function TIntegerArray_Occupancy(const arr: TIntegerArray): Double;');
  AddFunction(@TIntegerArray_Saturated, 'function TIntegerArray_Saturated(const arr: TIntegerArray): Double;');
  AddFunction(@TIntegerArray_Mean, 'function TIntegerArray_Mean(const arr: TIntegerArray): Double;');
  AddFunction(@TIntegerArray_Median, 'function TIntegerArray_Median(const arr: TIntegerArray): Double;');
  AddFunction(@TIntegerArray_Middle, 'function TIntegerArray_Middle(const arr: TIntegerArray): Double;');
  AddFunction(@TIntegerArray_MostFrequent, 'function TIntegerArray_MostFrequent(const arr: TIntegerArray; const null: Integer = -2147483648): Integer;');
  AddFunction(@TIntegerArray_LeastFrequent, 'function TIntegerArray_LeastFrequent(const arr: TIntegerArray; const null: Integer = -2147483648): Integer;');
  AddFunction(@TIntegerArray_RadixSort, 'function TIntegerArray_RadixSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_Split1, 'function TIntegerArray_Split(const arr: TIntegerArray; const minDiff, maxDiff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Split2, 'function TIntegerArray_Split(const arr: TIntegerArray; const diff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Sblit1, 'function TIntegerArray_Sblit(const arr: TIntegerArray; const minDiff, maxDiff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Sblit2, 'function TIntegerArray_Sblit(const arr: TIntegerArray; const diff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Groups, 'function TIntegerArray_Groups(const arr: TIntegerArray; const aSorted: Boolean = False): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Group1, 'function TIntegerArray_Group(const arr: TIntegerArray; const minDiff, maxDiff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Group2, 'function TIntegerArray_Group(const arr: TIntegerArray; const diff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Groub1, 'function TIntegerArray_Groub(const arr: TIntegerArray; const minDiff, maxDiff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Groub2, 'function TIntegerArray_Groub(const arr: TIntegerArray; const diff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Clique1, 'function TIntegerArray_Clique(const arr: TIntegerArray; const minDiff, maxDiff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Clique2, 'function TIntegerArray_Clique(const arr: TIntegerArray; const diff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Knit1, 'function TIntegerArray_Knit(const arr: TIntegerArray; const minDiff, maxDiff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Knit2, 'function TIntegerArray_Knit(const arr: TIntegerArray; const diff: Integer): T2DIntegerArray; overload;');
  AddFunction(@TIntegerArray_Reflect, 'function TIntegerArray_Reflect(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TIntegerArray_Reflected, 'function TIntegerArray_Reflected(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_Invert, 'function TIntegerArray_Invert(const arr: TIntegerArray): TIntegerArray;');
  AddFunction(@TIntegerArray_Inverted1, 'function TIntegerArray_Inverted(const arr: TIntegerArray; const arrBounds: TRange): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_Inverted2, 'function TIntegerArray_Inverted(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_Inverse1, 'function TIntegerArray_Inverse(const arr: TIntegerArray; const arrBounds: TRange): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_Inverse2, 'function TIntegerArray_Inverse(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_Mirror, 'function TIntegerArray_Mirror(var arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TIntegerArray_MinVal, 'function TIntegerArray_MinVal(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TIntegerArray_MaxVal, 'function TIntegerArray_MaxVal(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TIntegerArray_Minimum1, 'function TIntegerArray_Minimum(const arr: TIntegerArray; var index: Integer): Integer; overload;');
  AddFunction(@TIntegerArray_Minimum2, 'function TIntegerArray_Minimum(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TIntegerArray_Maximum1, 'function TIntegerArray_Maximum(const arr: TIntegerArray; var index: Integer): Integer; overload;');
  AddFunction(@TIntegerArray_Maximum2, 'function TIntegerArray_Maximum(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TIntegerArray_Pure, 'function TIntegerArray_Pure(const arr: TIntegerArray; const allowed: TIntegerArray): Boolean;');
  AddFunction(@TIntegerArray_NoneOf, 'function TIntegerArray_NoneOf(const arr: TIntegerArray; const forbidden: TIntegerArray): Boolean;');
  AddFunction(@TIntegerArray_AnyOf, 'function TIntegerArray_AnyOf(const arr: TIntegerArray; const candidates: TIntegerArray): Boolean;');
  AddFunction(@TIntegerArray_AllOf, 'function TIntegerArray_AllOf(const arr: TIntegerArray; const candidates: TIntegerArray): Boolean;');
  AddFunction(@TIntegerArray_Charify1, 'function TIntegerArray_Charify(const arr: TIntegerArray): TCharArray; overload;');
  AddFunction(@TIntegerArray_Charify2, 'function TIntegerArray_Charify(const arr: TIntegerArray; var str: string): TCharArray; overload;');
  AddFunction(@TIntegerArray_Stringify1, 'function TIntegerArray_Stringify(const arr: TIntegerArray): string; overload;');
  AddFunction(@TIntegerArray_Stringify2, 'function TIntegerArray_Stringify(const arr: TIntegerArray; var chars: TCharArray): string; overload;');
  AddFunction(@TIntegerArray_Special, 'function TIntegerArray_Special(const arr: TIntegerArray): Boolean;');
  AddFunction(@TIntegerArray_ExtractEven, 'function TIntegerArray_ExtractEven(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_FilterEven, 'function TIntegerArray_FilterEven(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_ExtractOdd, 'function TIntegerArray_ExtractOdd(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_FilterOdd, 'function TIntegerArray_FilterOdd(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_Reinit, 'function TIntegerArray_Reinit(var arr: TIntegerArray): Integer;');
  AddFunction(@TIntegerArray_Attach, 'function TIntegerArray_Attach(var arr: TIntegerArray; const items: TIntegerArray): Integer; overload;');
  AddFunction(@TIntegerArray_Embed, 'function TIntegerArray_Embed(var arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TIntegerArray_BSort, 'function TIntegerArray_BSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinarySort, 'function TIntegerArray_BinarySort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinarySorted, 'function TIntegerArray_BinarySorted(const arr: TIntegerArray; const aAscending: Boolean = True): TIntegerArray;');
  AddFunction(@TIntegerArray_BinaryBoundL, 'function TIntegerArray_BinaryBoundL(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryBoundR, 'function TIntegerArray_BinaryBoundR(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryPosL, 'function TIntegerArray_BinaryPosL(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryPosR, 'function TIntegerArray_BinaryPosR(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinarySearch, 'function TIntegerArray_BinarySearch(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinarySeek, 'function TIntegerArray_BinarySeek(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryContains, 'function TIntegerArray_BinaryContains(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Boolean;');
  AddFunction(@TIntegerArray_BinaryCount, 'function TIntegerArray_BinaryCount(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryLocate, 'function TIntegerArray_BinaryLocate(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): TRange;');
  AddFunction(@TIntegerArray_BinaryLocation, 'function TIntegerArray_BinaryLocation(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): TRange;');
  AddFunction(@TIntegerArray_BinaryAppend, 'function TIntegerArray_BinaryAppend(var arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryAdd, 'function TIntegerArray_BinaryAdd(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): TIntegerArray;');
  AddFunction(@TIntegerArray_BinarySearchF, 'function TIntegerArray_BinarySearchF(const arr: TIntegerArray; const x: TRange; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinarySearchL, 'function TIntegerArray_BinarySearchL(const arr: TIntegerArray; const x: TRange; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryPrune, 'function TIntegerArray_BinaryPrune(var arr: TIntegerArray; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryPruned, 'function TIntegerArray_BinaryPruned(const arr: TIntegerArray; const aAscending: Boolean = True): TIntegerArray;');
  AddFunction(@TIntegerArray_BinaryUndupe, 'function TIntegerArray_BinaryUndupe(var arr: TIntegerArray): Integer;');
  AddFunction(@TIntegerArray_BinaryUnduped, 'function TIntegerArray_BinaryUnduped(const arr: TIntegerArray): TIntegerArray;');
  AddFunction(@TIntegerArray_BinaryUnified, 'function TIntegerArray_BinaryUnified(const arr: TIntegerArray; const dAscending: Boolean = True): TIntegerArray;');
  AddFunction(@TIntegerArray_BinaryGrow, 'function TIntegerArray_BinaryGrow(var arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Boolean;');
  AddFunction(@TIntegerArray_BinaryShrink, 'function TIntegerArray_BinaryShrink(var arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Boolean;');
  AddFunction(@TIntegerArray_BinaryLowerBound, 'function TIntegerArray_BinaryLowerBound(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryUpperBound, 'function TIntegerArray_BinaryUpperBound(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): Integer;');
  AddFunction(@TIntegerArray_BinaryRange1, 'function TIntegerArray_BinaryRange(const arr: TIntegerArray; const x: TRange; const aAscending: Boolean = True): TRange; overload;');
  AddFunction(@TIntegerArray_BinaryRange2, 'function TIntegerArray_BinaryRange(const arr: TIntegerArray; const x: Integer; const aAscending: Boolean = True): TRange; overload;');
  AddFunction(@TIntegerArray_BinaryMerge, 'function TIntegerArray_BinaryMerge(const arr: TIntegerArray; const items: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_BinaryMerged, 'function TIntegerArray_BinaryMerged(const arr: TIntegerArray; const items: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_BinaryCombine, 'function TIntegerArray_BinaryCombine(const arr: TIntegerArray; const items: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_BMerge, 'function TIntegerArray_BMerge(const arr: TIntegerArray; const items: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TIntegerArray_BMerged, 'function TIntegerArray_BMerged(const arr: TIntegerArray; const items: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');

  AddFunction(@TIA_Init, 'function TIA_Init(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TIA_Unique, 'function TIA_Unique(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TIA_Reverse, 'function TIA_Reverse(var arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TIA_Reversed, 'function TIA_Reversed(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TIA_Combine, 'function TIA_Combine(const A, B: TIntegerArray): TIntegerArray; overload;');
  
  AddFunction(@ATIA_Merge, 'function ATIA_Merge(const arr: T2DIntegerArray): TIntegerArray; overload;');

  AddFunction(@TDoubleArray_Reinit, 'function TDoubleArray_Reinit(var arr: TDoubleArray): Integer;');
  AddFunction(@TDoubleArray_Attach, 'function TDoubleArray_Attach(var arr: TDoubleArray; const items: TDoubleArray): Integer; overload;');
  AddFunction(@TDoubleArray_Embed, 'function TDoubleArray_Embed(var arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TDoubleArray_BSort, 'function TDoubleArray_BSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinarySort, 'function TDoubleArray_BinarySort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinarySorted, 'function TDoubleArray_BinarySorted(const arr: TDoubleArray; const aAscending: Boolean = True): TDoubleArray;');
  AddFunction(@TDoubleArray_BinaryBoundL, 'function TDoubleArray_BinaryBoundL(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryBoundR, 'function TDoubleArray_BinaryBoundR(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryPosL, 'function TDoubleArray_BinaryPosL(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryPosR, 'function TDoubleArray_BinaryPosR(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinarySearch, 'function TDoubleArray_BinarySearch(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinarySeek, 'function TDoubleArray_BinarySeek(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryContains, 'function TDoubleArray_BinaryContains(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Boolean;');
  AddFunction(@TDoubleArray_BinaryCount, 'function TDoubleArray_BinaryCount(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryLocate, 'function TDoubleArray_BinaryLocate(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): TRange;');
  AddFunction(@TDoubleArray_BinaryLocation, 'function TDoubleArray_BinaryLocation(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): TRange;');
  AddFunction(@TDoubleArray_BinaryAppend, 'function TDoubleArray_BinaryAppend(var arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryAdd, 'function TDoubleArray_BinaryAdd(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): TDoubleArray;');
  AddFunction(@TDoubleArray_BinarySearchF, 'function TDoubleArray_BinarySearchF(const arr: TDoubleArray; const x: TRange; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinarySearchL, 'function TDoubleArray_BinarySearchL(const arr: TDoubleArray; const x: TRange; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryPrune, 'function TDoubleArray_BinaryPrune(var arr: TDoubleArray; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryPruned, 'function TDoubleArray_BinaryPruned(const arr: TDoubleArray; const aAscending: Boolean = True): TDoubleArray;');
  AddFunction(@TDoubleArray_BinaryUndupe, 'function TDoubleArray_BinaryUndupe(var arr: TDoubleArray): Integer;');
  AddFunction(@TDoubleArray_BinaryUnduped, 'function TDoubleArray_BinaryUnduped(const arr: TDoubleArray): TDoubleArray;');
  AddFunction(@TDoubleArray_BinaryUnified, 'function TDoubleArray_BinaryUnified(const arr: TDoubleArray; const dAscending: Boolean = True): TDoubleArray;');
  AddFunction(@TDoubleArray_BinaryGrow, 'function TDoubleArray_BinaryGrow(var arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Boolean;');
  AddFunction(@TDoubleArray_BinaryShrink, 'function TDoubleArray_BinaryShrink(var arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Boolean;');
  AddFunction(@TDoubleArray_BinaryLowerBound, 'function TDoubleArray_BinaryLowerBound(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryUpperBound, 'function TDoubleArray_BinaryUpperBound(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): Integer;');
  AddFunction(@TDoubleArray_BinaryRange1, 'function TDoubleArray_BinaryRange(const arr: TDoubleArray; const x: TRange; const aAscending: Boolean = True): TRange; overload;');
  AddFunction(@TDoubleArray_BinaryRange2, 'function TDoubleArray_BinaryRange(const arr: TDoubleArray; const x: Double; const aAscending: Boolean = True): TRange; overload;');
  AddFunction(@TDoubleArray_BinaryMerge, 'function TDoubleArray_BinaryMerge(const arr: TDoubleArray; const items: TDoubleArray; const aAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TDoubleArray_BinaryMerged, 'function TDoubleArray_BinaryMerged(const arr: TDoubleArray; const items: TDoubleArray; const aAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TDoubleArray_BinaryCombine, 'function TDoubleArray_BinaryCombine(const arr: TDoubleArray; const items: TDoubleArray; const aAscending: Boolean = True): TDoubleArray; overload;');

  AddFunction(@TStringArray_Tally, 'function TStringArray_Tally(const arr: TStringArray): Int64;');
  AddFunction(@TStringArray_Concat, 'function TStringArray_Concat(const arr: TStringArray): string;');
  AddFunction(@TStringArray_Concatenate, 'function TStringArray_Concatenate(const arr: TStringArray): string;');
  AddFunction(@TStringArray_Flatten, 'function TStringArray_Flatten(const arr: TStringArray): string;');
  AddFunction(@TStringArray_Glue, 'function TStringArray_Glue(const arr: TStringArray): string;');

  AddFunction(@TCharArray_Str, 'function TCharArray_Str(const arr: TCharArray): string;');
  AddFunction(@TCharArray_ToStr, 'function TCharArray_ToStr(const arr: TCharArray): string;');
  AddFunction(@TCharArray_Join1, 'function TCharArray_Join(const arr: TCharArray): string; overload;');
  AddFunction(@TCharArray_Join2, 'function TCharArray_Join(const arr: TCharArray; const glue: string): string; overload;');
  AddFunction(@TCharArray_Stringify1, 'function TCharArray_Stringify(const arr: TCharArray): string; overload;');
  AddFunction(@TCharArray_Stringify2, 'function TCharArray_Stringify(const arr: TCharArray; const glue: string): string; overload;');
  AddFunction(@TCharArray_Ordinals, 'function TCharArray_Ordinals(const arr: TCharArray): TIntegerArray;');
  AddFunction(@TCharArray_Unduped, 'function TCharArray_Unduped(const arr: TCharArray): TCharArray;');
  AddFunction(@TCharArray_TSA, 'function TCharArray_TSA(const arr: TCharArray): TStringArray;');

  AddFunction(@TBooleanArray_Select1, 'function TBooleanArray_Select(const arr: TBooleanArray; const sTrue, sFalse: Integer): TIntegerArray; overload;');
  AddFunction(@TBooleanArray_Select2, 'function TBooleanArray_Select(const arr: TBooleanArray; const sTrue, sFalse: Double): TDoubleArray; overload;');
  AddFunction(@TBooleanArray_Select3, 'function TBooleanArray_Select(const arr: TBooleanArray; const sTrue, sFalse: string): TStringArray; overload;');
  AddFunction(@TBooleanArray_Select4, 'function TBooleanArray_Select(const arr: TBooleanArray; const sTrue, sFalse: Char): TCharArray; overload;');
  AddFunction(@TBooleanArray_Select5, 'function TBooleanArray_Select(const arr: TBooleanArray; const sTrue, sFalse: Boolean): TBooleanArray; overload;');
  AddFunction(@TBooleanArray_Select6, 'function TBooleanArray_Select(const arr: TBooleanArray; const sTrue, sFalse: TPoint): TPointArray; overload;');
  AddFunction(@TBooleanArray_Select7, 'function TBooleanArray_Select(const arr: TBooleanArray; const sTrue, sFalse: TBox): TBoxArray; overload;');
  AddFunction(@TBooleanArray_Select8, 'function TBooleanArray_Select(const arr: TBooleanArray; const sTrue, sFalse: TRange): TRangeArray; overload;');
  AddFunction(@TBooleanArray_Bits, 'function TBooleanArray_Bits(const arr: TBooleanArray): Integer; overload');
  AddFunction(@TBooleanArray_ToBits, 'function TBooleanArray_ToBits(const arr: TBooleanArray): Integer; overload');
  AddFunction(@TBooleanArray_Bitify, 'function TBooleanArray_Bitify(const arr: TBooleanArray): Integer; overload');
  AddFunction(@TBooleanArray_Digits, 'function TBooleanArray_Digits(const arr: TBooleanArray): TIntegerArray; overload');
  AddFunction(@TBooleanArray_Falsed, 'function TBooleanArray_Falsed(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TBooleanArray_Falseless1, 'function TBooleanArray_Falseless(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TBooleanArray_Falseless2, 'function TBooleanArray_Falseless(const arr: TBooleanArray; const maxFalse: Integer): Boolean; overload;');
  AddFunction(@TBooleanArray_Falseness, 'function TBooleanArray_Falseness(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TBooleanArray_Falses, 'function TBooleanArray_Falses(const arr: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TBooleanArray_Falsesome1, 'function TBooleanArray_Falsesome(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TBooleanArray_Falsesome2, 'function TBooleanArray_Falsesome(const arr: TBooleanArray; const minFalse: Integer): Boolean; overload;');
  AddFunction(@TBooleanArray_Str1, 'function TBooleanArray_Str(const arr: TBooleanArray; const separator: string; const strTrue: string = ''True''; strFalse: string = ''False''): string; overload;');
  AddFunction(@TBooleanArray_Str2, 'function TBooleanArray_Str(const arr: TBooleanArray): string; overload;');
  AddFunction(@TBooleanArray_Text1, 'function TBooleanArray_Text(const arr: TBooleanArray; const strTrue, strFalse, separator: string): string; overload;');
  AddFunction(@TBooleanArray_Text2, 'function TBooleanArray_Text(const arr: TBooleanArray; const strTrue: string = ''True''; strFalse: string = ''False''): string; overload;');
  AddFunction(@TBooleanArray_TIA, 'function TBooleanArray_TIA(const arr: TBooleanArray; const valTrue: Integer = 1; valFalse: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TBooleanArray_Toggle, 'function TBooleanArray_Toggle(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TBooleanArray_Trued, 'function TBooleanArray_Trued(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TBooleanArray_Trueless1, 'function TBooleanArray_Trueless(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TBooleanArray_Trueless2, 'function TBooleanArray_Trueless(const arr: TBooleanArray; const maxTrue: Integer): Boolean; overload;');
  AddFunction(@TBooleanArray_Trueness, 'function TBooleanArray_Trueness(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TBooleanArray_Trues, 'function TBooleanArray_Trues(const arr: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TBooleanArray_Truesome1, 'function TBooleanArray_Truesome(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TBooleanArray_Truesome2, 'function TBooleanArray_Truesome(const arr: TBooleanArray; const minTrue: Integer): Boolean; overload;');
  AddFunction(@TBooleanArray_Opposite, 'function TBooleanArray_Opposite(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TBooleanArray_BinaryStr, 'function TBooleanArray_BinaryStr(const arr: TBooleanArray): string;');
  AddFunction(@TBooleanArray_BinaryDigits, 'function TBooleanArray_BinaryDigits(const arr: TBooleanArray): TIntegerArray;');
  AddFunction(@TBooleanArray_Binary, 'function TBooleanArray_Binary(const arr: TBooleanArray): string;');
  AddFunction(@TBooleanArray_Reinit, 'function TBooleanArray_Reinit(var arr: TBooleanArray): Integer;');
  AddFunction(@TBooleanArray_Occupancy, 'function TBooleanArray_Occupancy(const arr: TBooleanArray; const val: Boolean = True): Double; overload;');
  AddFunction(@TBooleanArray_Attach, 'function TBooleanArray_Attach(var arr: TBooleanArray; const items: TBooleanArray): Integer; overload;');
  AddFunction(@TBooleanArray_Embed, 'function TBooleanArray_Embed(var arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647): Integer; overload;');

  AddFunction(@TPointArray_X1, 'function TPointArray_X(const arr: TPointArray): TIntegerArray; overload;');
  AddFunction(@TPointArray_X2, 'function TPointArray_X(const arr: TPointArray; const val: Integer): TIntegerArray; overload;');
  AddFunction(@TPointArray_X3, 'function TPointArray_X(const arr: TPointArray; const vals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TPointArray_Y1, 'function TPointArray_Y(const arr: TPointArray): TIntegerArray; overload;');
  AddFunction(@TPointArray_Y2, 'function TPointArray_Y(const arr: TPointArray; const val: Integer): TIntegerArray; overload;');
  AddFunction(@TPointArray_Y3, 'function TPointArray_Y(const arr: TPointArray; const vals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TPointArray_Bounds1, 'function TPointArray_Bounds(const arr: TPointArray): TBox; overload;');
  AddFunction(@TPointArray_Bounds2, 'function TPointArray_Bounds(const arr: TPointArray; var width, height: Integer): TBox; overload;');
  AddFunction(@TPointArray_BoundingBox, 'function TPointArray_BoundingBox(const arr: TPointArray): TBox;');
  AddFunction(@TPointArray_Boundaries, 'function TPointArray_Boundaries(const arr: TPointArray): TBox;');
  AddFunction(@TPointArray_Box, 'function TPointArray_Box(const arr: TPointArray): TBox;');
  AddFunction(@TPointArray_Boxed, 'function TPointArray_Boxed(const arr: TPointArray): TBox;');
  AddFunction(@TPointArray_MinMax, 'function TPointArray_MinMax(const arr: TPointArray): TBox;');
  AddFunction(@TPointArray_Region, 'function TPointArray_Region(const arr: TPointArray): TBox; overload;');
  AddFunction(@TPointArray_Coverage, 'function TPointArray_Coverage(const arr: TPointArray): TBox; overload;');
  AddFunction(@TPointArray_Undupe, 'function TPointArray_Undupe(const arr: TPointArray): TPointArray;');
  AddFunction(@TPointArray_Unduped, 'function TPointArray_Unduped(const arr: TPointArray): TPointArray;');
  AddFunction(@TPointArray_Invert, 'function TPointArray_Invert(const arr: TPointArray): TPointArray;');
  AddFunction(@TPointArray_Inverted1, 'function TPointArray_Inverted(const arr: TPointArray; const arrBounds: TBox): TPointArray; overload;');
  AddFunction(@TPointArray_Inverted2, 'function TPointArray_Inverted(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TPointArray_Inverse1, 'function TPointArray_Inverse(const arr: TPointArray; const arrBounds: TBox): TPointArray; overload;');
  AddFunction(@TPointArray_Inverse2, 'function TPointArray_Inverse(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TPointArray_Edge, 'function TPointArray_Edge(const arr: TPointArray; const scan8W: Boolean = False): TPointArray;');
  AddFunction(@TPointArray_FloodFill1, 'function TPointArray_FloodFill(const arr: TPointArray; const start: TPoint; const area: TBox; const scan8W: Boolean = False): TPointArray; overload;');
  AddFunction(@TPointArray_FloodFill2, 'function TPointArray_FloodFill(const arr: TPointArray; const start: TPoint; const scan8W: Boolean = False): TPointArray; overload;');
  AddFunction(@TPointArray_Xs, 'function TPointArray_Xs(const arr: TPointArray): TIntegerArray;');
  AddFunction(@TPointArray_Ys, 'function TPointArray_Ys(const arr: TPointArray): TIntegerArray;');
  AddFunction(@TPointArray_XValues, 'function TPointArray_XValues(const arr: TPointArray): TIntegerArray;');
  AddFunction(@TPointArray_YValues, 'function TPointArray_YValues(const arr: TPointArray): TIntegerArray;');
  AddFunction(@TPointArray_Horizontal, 'function TPointArray_Horizontal(const arr: TPointArray): TRange;');
  AddFunction(@TPointArray_Vertical, 'function TPointArray_Vertical(const arr: TPointArray): TRange;');
  AddFunction(@TPointArray_Unzip, 'function TPointArray_Unzip(const arr: TPointArray; var xArr, yArr: TIntegerArray): Integer;');
  AddFunction(@TPointArray_Zip, 'function TPointArray_Zip(const xArr, yArr: TIntegerArray): TPointArray;');
  AddFunction(@TPointArray_Extent, 'function TPointArray_Extent(const arr: TPointArray): TBox;');
  AddFunction(@TPointArray_Neighborify, 'function TPointArray_Neighborify(const arr: TPointArray; const adjacency8: Boolean = True): T2DPointArray; overload;');
  AddFunction(@TPointArray_Regionize1, 'function TPointArray_Regionize(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_Regionize2, 'function TPointArray_Regionize(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_RSplit1, 'function TPointArray_RSplit(const arr: TPointArray; const xRadius, yRadius: Integer; const sSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_RSplit2, 'function TPointArray_RSplit(const arr: TPointArray; const radius: Double = 1.0; const sSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_CSplit1, 'function TPointArray_CSplit(const arr: TPointArray; const xRadius, yRadius: Integer; const sSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_CSplit2, 'function TPointArray_CSplit(const arr: TPointArray; const radius: Double = 1.0; const sSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_XSplit1, 'function TPointArray_XSplit(const arr: TPointArray; const xRadius, yRadius: Integer; const sSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_XSplit2, 'function TPointArray_XSplit(const arr: TPointArray; const radius: Double = 1.0; const sSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_YSplit1, 'function TPointArray_YSplit(const arr: TPointArray; const xRadius, yRadius: Integer; const sSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_YSplit2, 'function TPointArray_YSplit(const arr: TPointArray; const radius: Double = 1.0; const sSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_Split1, 'function TPointArray_Split(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_Split2, 'function TPointArray_Split(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_SplitEx1, 'function TPointArray_SplitEx(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_SplitEx2, 'function TPointArray_SplitEx(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_Clusters1, 'function TPointArray_Clusters(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_Clusters2, 'function TPointArray_Clusters(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_Cluster1, 'function TPointArray_Cluster(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_Cluster2, 'function TPointArray_Cluster(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_Clustered1, 'function TPointArray_Clustered(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_Clustered2, 'function TPointArray_Clustered(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_Clusterify1, 'function TPointArray_Clusterify(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_Clusterify2, 'function TPointArray_Clusterify(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_Clusterize1, 'function TPointArray_Clusterize(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_Clusterize2, 'function TPointArray_Clusterize(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_Segment1, 'function TPointArray_Segment(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_Segment2, 'function TPointArray_Segment(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_Fragment1, 'function TPointArray_Fragment(const arr: TPointArray; const radius: Double = 1.0): T2DPointArray; overload;');
  AddFunction(@TPointArray_Fragment2, 'function TPointArray_Fragment(const arr: TPointArray; const xRadius, yRadius: Integer): T2DPointArray; overload;');
  AddFunction(@TPointArray_XClassify, 'function TPointArray_XClassify(const arr: TPointArray; const pSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_YClassify, 'function TPointArray_YClassify(const arr: TPointArray; const pSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TPointArray_Axes, 'function TPointArray_Axes(const arr: TPointArray; var X, Y: TIntegerArray): Integer; overload;');
  AddFunction(@TPointArray_Axed1, 'function TPointArray_Axed(const arr: TPointArray): T2DIntegerArray; overload;');
  AddFunction(@TPointArray_Axed2, 'function TPointArray_Axed(const arr: TPointArray; var X, Y: TIntegerArray): Integer; overload;');
  AddFunction(@TPointArray_SortByRow, 'function TPointArray_SortByRow(var arr: TPointArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TPointArray_SortByColumn, 'function TPointArray_SortByColumn(var arr: TPointArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TPointArray_SortedByIndex, 'function TPointArray_SortedByIndex(const arr: TPointArray; const aAscending: Boolean = True): TPointArray; overload;');
  AddFunction(@TPointArray_Reinit, 'function TPointArray_Reinit(var arr: TPointArray): Integer;');
  AddFunction(@TPointArray_Create1, 'function TPointArray_Create(const xRange, yRange: TRange): TPointArray; overload;');
  AddFunction(@TPointArray_Create2, 'function TPointArray_Create(const xRange, yRange: TRange; const offset: TPoint): TPointArray; overload;');
  AddFunction(@TPointArray_Create3, 'function TPointArray_Create(const xValues, yValues: TIntegerArray): TPointArray; overload;');
  AddFunction(@TPointArray_Create4, 'function TPointArray_Create(const xValues, yValues: TIntegerArray; const offset: TPoint): TPointArray; overload;');
  AddFunction(@TPointArray_Attach, 'function TPointArray_Attach(var arr: TPointArray; const items: TPointArray): Integer; overload;');
  AddFunction(@TPointArray_Embed, 'function TPointArray_Embed(var arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TPointArray_FrameLinks1, 'function TPointArray_FrameLinks(const arr: TPointArray; const dist: Integer; const area: TBox): TPointArray; overload;');
  AddFunction(@TPointArray_FrameLinks2, 'function TPointArray_FrameLinks(const arr: TPointArray; const dist: Integer = 1): TPointArray; overload;');
  AddFunction(@TPointArray_XVals, 'function TPointArray_XVals(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray;');
  AddFunction(@TPointArray_YVals, 'function TPointArray_YVals(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray;');
  AddFunction(@TPointArray_XArr, 'function TPointArray_XArr(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray;');
  AddFunction(@TPointArray_YArr, 'function TPointArray_YArr(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray;');

  AddFunction(@TBoxArray_X1_1, 'function TBoxArray_X1(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TBoxArray_X1_2, 'function TBoxArray_X1(const arr: TBoxArray; const val: Integer): TIntegerArray; overload;');
  AddFunction(@TBoxArray_X1_3, 'function TBoxArray_X1(const arr: TBoxArray; const vals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TBoxArray_Y1_1, 'function TBoxArray_Y1(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TBoxArray_Y1_2, 'function TBoxArray_Y1(const arr: TBoxArray; const val: Integer): TIntegerArray; overload;');
  AddFunction(@TBoxArray_Y1_3, 'function TBoxArray_Y1(const arr: TBoxArray; const vals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TBoxArray_X2_1, 'function TBoxArray_X2(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TBoxArray_X2_2, 'function TBoxArray_X2(const arr: TBoxArray; const val: Integer): TIntegerArray; overload;');
  AddFunction(@TBoxArray_X2_3, 'function TBoxArray_X2(const arr: TBoxArray; const vals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TBoxArray_Y2_1, 'function TBoxArray_Y2(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TBoxArray_Y2_2, 'function TBoxArray_Y2(const arr: TBoxArray; const val: Integer): TIntegerArray; overload;');
  AddFunction(@TBoxArray_Y2_3, 'function TBoxArray_Y2(const arr: TBoxArray; const vals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TBoxArray_X1s, 'function TBoxArray_X1s(const arr: TBoxArray): TIntegerArray;');
  AddFunction(@TBoxArray_Y1s, 'function TBoxArray_Y1s(const arr: TBoxArray): TIntegerArray;');
  AddFunction(@TBoxArray_X2s, 'function TBoxArray_X2s(const arr: TBoxArray): TIntegerArray;');
  AddFunction(@TBoxArray_Y2s, 'function TBoxArray_Y2s(const arr: TBoxArray): TIntegerArray;');
  AddFunction(@TBoxArray_X1Values, 'function TBoxArray_X1Values(const arr: TBoxArray): TIntegerArray;');
  AddFunction(@TBoxArray_Y1Values, 'function TBoxArray_Y1Values(const arr: TBoxArray): TIntegerArray;');
  AddFunction(@TBoxArray_X2Values, 'function TBoxArray_X2Values(const arr: TBoxArray): TIntegerArray;');
  AddFunction(@TBoxArray_Y2Values, 'function TBoxArray_Y2Values(const arr: TBoxArray): TIntegerArray;');
  AddFunction(@TBoxArray_Unzip, 'function TBoxArray_Unzip(const arr: TBoxArray; var x1Arr, y1Arr, x2Arr, y2Arr: TIntegerArray): Integer;');
  AddFunction(@TBoxArray_Zip, 'function TBoxArray_Zip(const x1Arr, y1Arr, x2Arr, y2Arr: TIntegerArray): TBoxArray;');
  AddFunction(@TBoxArray_Bounds, 'function TBoxArray_Bounds(const arr: TBoxArray): TBox; overload;');
  AddFunction(@TBoxArray_Boundaries, 'function TBoxArray_Boundaries(const arr: TBoxArray): TBox; overload;');

  AddFunction(@TRangeArray_Start1, 'function TRangeArray_Start(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_Start2, 'function TRangeArray_Start(const arr: TBoxArray; const val: Integer): TIntegerArray; overload;');
  AddFunction(@TRangeArray_Start3, 'function TRangeArray_Start(const arr: TBoxArray; const vals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TRangeArray_Stop1, 'function TRangeArray_Stop(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_Stop2, 'function TRangeArray_Stop(const arr: TBoxArray; const val: Integer): TIntegerArray; overload;');
  AddFunction(@TRangeArray_Stop3, 'function TRangeArray_Stop(const arr: TBoxArray; const vals: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TRangeArray_Bounds, 'function TRangeArray_Bounds(const arr: TRangeArray): TRange;');
  AddFunction(@TRangeArray_Normalized, 'function TRangeArray_Normalized(const arr: TRangeArray): TRangeArray;');
  AddFunction(@TRangeArray_Range, 'function TRangeArray_Range(const arr: TRangeArray): TRange;');
  AddFunction(@TRangeArray_Starting, 'function TRangeArray_Starting(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_Stopping, 'function TRangeArray_Stopping(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_TIA, 'function TRangeArray_TIA(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_T2DIA, 'function TRangeArray_T2DIA(const arr: TRangeArray): T2DIntegerArray;');
  AddFunction(@TRangeArray_Starts, 'function TRangeArray_Starts(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_Stops, 'function TRangeArray_Stops(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_StartValues, 'function TRangeArray_StartValues(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_StopValues, 'function TRangeArray_StopValues(const arr: TRangeArray): TIntegerArray;');
  AddFunction(@TRangeArray_Unzip, 'function TRangeArray_Unzip(const arr: TRangeArray; var startArr, stopArr: TIntegerArray): Integer;');
  AddFunction(@TRangeArray_Zip, 'function TRangeArray_Zip(const startArr, stopArr: TIntegerArray): TRangeArray;');
  AddFunction(@TRangeArray_Gaps, 'function TRangeArray_Gaps(const arr: TRangeArray): TRangeArray; overload;');
  
  AddFunction(@TArray_Add1, 'function TArray_Add(const arr: TIntegerArray; const item: Integer; const duplicates: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Add2, 'function TArray_Add(const arr: TDoubleArray; const item: Double; const duplicates: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Add3, 'function TArray_Add(const arr: TStringArray; const item: string; const duplicates: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Add4, 'function TArray_Add(const arr: TCharArray; const item: Char; const duplicates: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Add5, 'function TArray_Add(const arr: TBooleanArray; const item: Boolean; const duplicates: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Add6, 'function TArray_Add(const arr: TPointArray; const item: TPoint; const duplicates: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Add7, 'function TArray_Add(const arr: TBoxArray; const item: TBox; const duplicates: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Add8, 'function TArray_Add(const arr: TRangeArray; const item: TRange; const duplicates: Boolean = True): TRangeArray; overload;');
  AddFunction(@TArray_Add9, 'function TArray_Add(const arr: TIntegerArray; const items: TIntegerArray; const duplicates: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Add10, 'function TArray_Add(const arr: TDoubleArray; const items: TDoubleArray; const duplicates: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Add11, 'function TArray_Add(const arr: TStringArray; const items: TStringArray; const duplicates: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Add12, 'function TArray_Add(const arr: TCharArray; const items: TCharArray; const duplicates: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Add13, 'function TArray_Add(const arr: TBooleanArray; const items: TBooleanArray; const duplicates: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Add14, 'function TArray_Add(const arr: TPointArray; const items: TPointArray; const duplicates: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Add15, 'function TArray_Add(const arr: TBoxArray; const items: TBoxArray; const duplicates: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Add16, 'function TArray_Add(const arr: TRangeArray; const items: TRangeArray; const duplicates: Boolean = True): TRangeArray; overload;');

  AddFunction(@TArray_AllEqual1, 'function TArray_AllEqual(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual2, 'function TArray_AllEqual(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual3, 'function TArray_AllEqual(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual4, 'function TArray_AllEqual(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual5, 'function TArray_AllEqual(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual6, 'function TArray_AllEqual(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual7, 'function TArray_AllEqual(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual8, 'function TArray_AllEqual(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_AllSame1, 'function TArray_AllSame(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_AllSame2, 'function TArray_AllSame(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_AllSame3, 'function TArray_AllSame(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_AllSame4, 'function TArray_AllSame(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_AllSame5, 'function TArray_AllSame(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_AllSame6, 'function TArray_AllSame(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_AllSame7, 'function TArray_AllSame(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_AllSame8, 'function TArray_AllSame(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_AllUnique1, 'function TArray_AllUnique(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique2, 'function TArray_AllUnique(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique3, 'function TArray_AllUnique(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique4, 'function TArray_AllUnique(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique5, 'function TArray_AllUnique(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique6, 'function TArray_AllUnique(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique7, 'function TArray_AllUnique(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique8, 'function TArray_AllUnique(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Any1, 'function TArray_Any(const arr: TIntegerArray; const null: Integer): Integer; overload;');
  AddFunction(@TArray_Any2, 'function TArray_Any(const arr: TDoubleArray; const null: Double): Double; overload;');
  AddFunction(@TArray_Any3, 'function TArray_Any(const arr: TStringArray; const null: string): string; overload;');
  AddFunction(@TArray_Any4, 'function TArray_Any(const arr: TCharArray; const null: Char): Char; overload;');
  AddFunction(@TArray_Any5, 'function TArray_Any(const arr: TBooleanArray; const null: Boolean): Boolean; overload;');
  AddFunction(@TArray_Any6, 'function TArray_Any(const arr: TPointArray; const null: TPoint): TPoint; overload;');
  AddFunction(@TArray_Any7, 'function TArray_Any(const arr: TBoxArray; const null: TBox): TBox; overload;');
  AddFunction(@TArray_Any8, 'function TArray_Any(const arr: TRangeArray; const null: TRange): TRange; overload;');
  AddFunction(@TArray_Any9, 'function TArray_Any(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Any10, 'function TArray_Any(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Any11, 'function TArray_Any(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_Any12, 'function TArray_Any(const arr: TCharArray): Char; overload;');
  AddFunction(@TArray_Any13, 'function TArray_Any(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Any14, 'function TArray_Any(const arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_Any15, 'function TArray_Any(const arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_Any16, 'function TArray_Any(const arr: TRangeArray): TRange; overload;');

  AddFunction(@TArray_Append1, 'function TArray_Append(const arr: TIntegerArray; const item: Integer; const duplicates: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Append2, 'function TArray_Append(const arr: TDoubleArray; const item: Double; const duplicates: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Append3, 'function TArray_Append(const arr: TStringArray; const item: string; const duplicates: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Append4, 'function TArray_Append(const arr: TCharArray; const item: Char; const duplicates: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Append5, 'function TArray_Append(const arr: TBooleanArray; const item: Boolean; const duplicates: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Append6, 'function TArray_Append(const arr: TPointArray; const item: TPoint; const duplicates: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Append7, 'function TArray_Append(const arr: TBoxArray; const item: TBox; const duplicates: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Append8, 'function TArray_Append(const arr: TRangeArray; const item: TRange; const duplicates: Boolean = True): TRangeArray; overload;');
  AddFunction(@TArray_Append9, 'function TArray_Append(const arr: TIntegerArray; const items: TIntegerArray; const duplicates: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Append10, 'function TArray_Append(const arr: TDoubleArray; const items: TDoubleArray; const duplicates: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Append11, 'function TArray_Append(const arr: TStringArray; const items: TStringArray; const duplicates: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Append12, 'function TArray_Append(const arr: TCharArray; const items: TCharArray; const duplicates: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Append13, 'function TArray_Append(const arr: TBooleanArray; const items: TBooleanArray; const duplicates: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Append14, 'function TArray_Append(const arr: TPointArray; const items: TPointArray; const duplicates: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Append15, 'function TArray_Append(const arr: TBoxArray; const items: TBoxArray; const duplicates: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Append16, 'function TArray_Append(const arr: TRangeArray; const items: TRangeArray; const duplicates: Boolean = True): TRangeArray; overload;');

  AddFunction(@TArray_As2D1, 'function TArray_As2D(const arr: TIntegerArray; const rows, columns: Integer): T2DIntegerArray; overload;');
  AddFunction(@TArray_As2D2, 'function TArray_As2D(const arr: TDoubleArray; const rows, columns: Integer): T2DDoubleArray; overload;');
  AddFunction(@TArray_As2D3, 'function TArray_As2D(const arr: TStringArray; const rows, columns: Integer): T2DStringArray; overload;');
  AddFunction(@TArray_As2D4, 'function TArray_As2D(const arr: TCharArray; const rows, columns: Integer): T2DCharArray; overload;');
  AddFunction(@TArray_As2D5, 'function TArray_As2D(const arr: TBooleanArray; const rows, columns: Integer): T2DBooleanArray; overload;');
  AddFunction(@TArray_As2D6, 'function TArray_As2D(const arr: TPointArray; const rows, columns: Integer): T2DPointArray; overload;');
  AddFunction(@TArray_As2D7, 'function TArray_As2D(const arr: TBoxArray; const rows, columns: Integer): T2DBoxArray; overload;');
  AddFunction(@TArray_As2D8, 'function TArray_As2D(const arr: TRangeArray; const rows, columns: Integer): T2DRangeArray; overload;');
  AddFunction(@TArray_As2D9, 'function TArray_As2D(const arr: TIntegerArray; const width: Integer): T2DIntegerArray; overload;');
  AddFunction(@TArray_As2D10, 'function TArray_As2D(const arr: TDoubleArray; const width: Integer): T2DDoubleArray; overload;');
  AddFunction(@TArray_As2D11, 'function TArray_As2D(const arr: TStringArray; const width: Integer): T2DStringArray; overload;');
  AddFunction(@TArray_As2D12, 'function TArray_As2D(const arr: TCharArray; const width: Integer): T2DCharArray; overload;');
  AddFunction(@TArray_As2D13, 'function TArray_As2D(const arr: TBooleanArray; const width: Integer): T2DBooleanArray; overload;');
  AddFunction(@TArray_As2D14, 'function TArray_As2D(const arr: TPointArray; const width: Integer): T2DPointArray; overload;');
  AddFunction(@TArray_As2D15, 'function TArray_As2D(const arr: TBoxArray; const width: Integer): T2DBoxArray; overload;');
  AddFunction(@TArray_As2D16, 'function TArray_As2D(const arr: TRangeArray; const width: Integer): T2DRangeArray; overload;');

  AddFunction(@TArray_Backwards1, 'function TArray_Backwards(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Backwards2, 'function TArray_Backwards(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Backwards3, 'function TArray_Backwards(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Backwards4, 'function TArray_Backwards(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Backwards5, 'function TArray_Backwards(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Backwards6, 'function TArray_Backwards(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Backwards7, 'function TArray_Backwards(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Backwards8, 'function TArray_Backwards(const arr: TRangeArray): TRangeArray; overload;');
  
  AddFunction(@TArray_Blend1, 'function TArray_Blend(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Blend2, 'function TArray_Blend(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Blend3, 'function TArray_Blend(const arr: TStringArray; const items: TStringArray; const index: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Blend4, 'function TArray_Blend(const arr: TCharArray; const items: TCharArray; const index: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Blend5, 'function TArray_Blend(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Blend6, 'function TArray_Blend(const arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Blend7, 'function TArray_Blend(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Blend8, 'function TArray_Blend(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 2147483647): TRangeArray; overload;');
  
  AddFunction(@TArray_Blit1, 'function TArray_Blit(var arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Blit2, 'function TArray_Blit(var arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Blit3, 'function TArray_Blit(var arr: TStringArray; const items: TStringArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Blit4, 'function TArray_Blit(var arr: TCharArray; const items: TCharArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Blit5, 'function TArray_Blit(var arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Blit6, 'function TArray_Blit(var arr: TPointArray; const items: TPointArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Blit7, 'function TArray_Blit(var arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Blit8, 'function TArray_Blit(var arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): Integer; overload;');

  AddFunction(@TArray_Build1, 'function TArray_Build(const item: Integer; const aSize: Integer = 1): TIntegerArray; overload;');
  AddFunction(@TArray_Build2, 'function TArray_Build(const item: Double; const aSize: Integer = 1): TDoubleArray; overload;');
  AddFunction(@TArray_Build3, 'function TArray_Build(const item: string; const aSize: Integer = 1): TStringArray; overload;');
  AddFunction(@TArray_Build4, 'function TArray_Build(const item: Char; const aSize: Integer = 1): TCharArray; overload;');
  AddFunction(@TArray_Build5, 'function TArray_Build(const item: Boolean; const aSize: Integer = 1): TBooleanArray; overload;');
  AddFunction(@TArray_Build6, 'function TArray_Build(const item: TPoint; const aSize: Integer = 1): TPointArray; overload;');
  AddFunction(@TArray_Build7, 'function TArray_Build(const item: TBox; const aSize: Integer = 1): TBoxArray; overload;');
  AddFunction(@TArray_Build8, 'function TArray_Build(const item: TRange; const aSize: Integer = 1): TRangeArray; overload;');
  
  AddFunction(@TArray_BuiltWith1, 'function TArray_BuiltWith(const arr, blocks: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith2, 'function TArray_BuiltWith(const arr, blocks: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith3, 'function TArray_BuiltWith(const arr, blocks: TStringArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith4, 'function TArray_BuiltWith(const arr, blocks: TCharArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith5, 'function TArray_BuiltWith(const arr, blocks: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith6, 'function TArray_BuiltWith(const arr, blocks: TPointArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith7, 'function TArray_BuiltWith(const arr, blocks: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith8, 'function TArray_BuiltWith(const arr, blocks: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_BuiltWithout1, 'function TArray_BuiltWithout(const arr, forbidden: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout2, 'function TArray_BuiltWithout(const arr, forbidden: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout3, 'function TArray_BuiltWithout(const arr, forbidden: TStringArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout4, 'function TArray_BuiltWithout(const arr, forbidden: TCharArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout5, 'function TArray_BuiltWithout(const arr, forbidden: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout6, 'function TArray_BuiltWithout(const arr, forbidden: TPointArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout7, 'function TArray_BuiltWithout(const arr, forbidden: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout8, 'function TArray_BuiltWithout(const arr, forbidden: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Classes1, 'function TArray_Classes(const arr: TIntegerArray): T2DIntegerArray; overload;');
  AddFunction(@TArray_Classes2, 'function TArray_Classes(const arr: TDoubleArray): T2DDoubleArray; overload;');
  AddFunction(@TArray_Classes3, 'function TArray_Classes(const arr: TStringArray): T2DStringArray; overload;');
  AddFunction(@TArray_Classes4, 'function TArray_Classes(const arr: TCharArray): T2DCharArray; overload;');
  AddFunction(@TArray_Classes5, 'function TArray_Classes(const arr: TBooleanArray): T2DBooleanArray; overload;');
  AddFunction(@TArray_Classes6, 'function TArray_Classes(const arr: TPointArray): T2DPointArray; overload;');
  AddFunction(@TArray_Classes7, 'function TArray_Classes(const arr: TBoxArray): T2DBoxArray; overload;');
  AddFunction(@TArray_Classes8, 'function TArray_Classes(const arr: TRangeArray): T2DRangeArray; overload;');
  AddFunction(@TArray_Classes9, 'function TArray_Classes(const arr: TIntegerArray; const weight: TIntegerArray): T2DIntegerArray; overload;');
  AddFunction(@TArray_Classes10, 'function TArray_Classes(const arr: TDoubleArray; const weight: TIntegerArray): T2DDoubleArray; overload;');
  AddFunction(@TArray_Classes11, 'function TArray_Classes(const arr: TStringArray; const weight: TIntegerArray): T2DStringArray; overload;');
  AddFunction(@TArray_Classes12, 'function TArray_Classes(const arr: TCharArray; const weight: TIntegerArray): T2DCharArray; overload;');
  AddFunction(@TArray_Classes13, 'function TArray_Classes(const arr: TBooleanArray; const weight: TIntegerArray): T2DBooleanArray; overload;');
  AddFunction(@TArray_Classes14, 'function TArray_Classes(const arr: TPointArray; const weight: TIntegerArray): T2DPointArray; overload;');
  AddFunction(@TArray_Classes15, 'function TArray_Classes(const arr: TBoxArray; const weight: TIntegerArray): T2DBoxArray; overload;');
  AddFunction(@TArray_Classes16, 'function TArray_Classes(const arr: TRangeArray; const weight: TIntegerArray): T2DRangeArray; overload;');
  AddFunction(@TArray_Classes17, 'function TArray_Classes(const arr: TIntegerArray; const weight: TDoubleArray): T2DIntegerArray; overload;');
  AddFunction(@TArray_Classes18, 'function TArray_Classes(const arr: TDoubleArray; const weight: TDoubleArray): T2DDoubleArray; overload;');
  AddFunction(@TArray_Classes19, 'function TArray_Classes(const arr: TStringArray; const weight: TDoubleArray): T2DStringArray; overload;');
  AddFunction(@TArray_Classes20, 'function TArray_Classes(const arr: TCharArray; const weight: TDoubleArray): T2DCharArray; overload;');
  AddFunction(@TArray_Classes21, 'function TArray_Classes(const arr: TBooleanArray; const weight: TDoubleArray): T2DBooleanArray; overload;');
  AddFunction(@TArray_Classes22, 'function TArray_Classes(const arr: TPointArray; const weight: TDoubleArray): T2DPointArray; overload;');
  AddFunction(@TArray_Classes23, 'function TArray_Classes(const arr: TBoxArray; const weight: TDoubleArray): T2DBoxArray; overload;');
  AddFunction(@TArray_Classes24, 'function TArray_Classes(const arr: TRangeArray; const weight: TDoubleArray): T2DRangeArray; overload;');

  AddFunction(@TArray_Classify1, 'function TArray_Classify(const arr: TIntegerArray): T2DIntegerArray; overload;');
  AddFunction(@TArray_Classify2, 'function TArray_Classify(const arr: TDoubleArray): T2DDoubleArray; overload;');
  AddFunction(@TArray_Classify3, 'function TArray_Classify(const arr: TStringArray): T2DStringArray; overload;');
  AddFunction(@TArray_Classify4, 'function TArray_Classify(const arr: TCharArray): T2DCharArray; overload;');
  AddFunction(@TArray_Classify5, 'function TArray_Classify(const arr: TBooleanArray): T2DBooleanArray; overload;');
  AddFunction(@TArray_Classify6, 'function TArray_Classify(const arr: TPointArray): T2DPointArray; overload;');
  AddFunction(@TArray_Classify7, 'function TArray_Classify(const arr: TBoxArray): T2DBoxArray; overload;');
  AddFunction(@TArray_Classify8, 'function TArray_Classify(const arr: TRangeArray): T2DRangeArray; overload;'); 
  AddFunction(@TArray_Classify9, 'function TArray_Classify(const arr: TIntegerArray; const weight: TIntegerArray): T2DIntegerArray; overload;');
  AddFunction(@TArray_Classify10, 'function TArray_Classify(const arr: TDoubleArray; const weight: TIntegerArray): T2DDoubleArray; overload;');
  AddFunction(@TArray_Classify11, 'function TArray_Classify(const arr: TStringArray; const weight: TIntegerArray): T2DStringArray; overload;');
  AddFunction(@TArray_Classify12, 'function TArray_Classify(const arr: TCharArray; const weight: TIntegerArray): T2DCharArray; overload;');
  AddFunction(@TArray_Classify13, 'function TArray_Classify(const arr: TBooleanArray; const weight: TIntegerArray): T2DBooleanArray; overload;');
  AddFunction(@TArray_Classify14, 'function TArray_Classify(const arr: TPointArray; const weight: TIntegerArray): T2DPointArray; overload;');
  AddFunction(@TArray_Classify15, 'function TArray_Classify(const arr: TBoxArray; const weight: TIntegerArray): T2DBoxArray; overload;');
  AddFunction(@TArray_Classify16, 'function TArray_Classify(const arr: TRangeArray; const weight: TIntegerArray): T2DRangeArray; overload;');
  AddFunction(@TArray_Classify17, 'function TArray_Classify(const arr: TIntegerArray; const weight: TDoubleArray): T2DIntegerArray; overload;');
  AddFunction(@TArray_Classify18, 'function TArray_Classify(const arr: TDoubleArray; const weight: TDoubleArray): T2DDoubleArray; overload;');
  AddFunction(@TArray_Classify19, 'function TArray_Classify(const arr: TStringArray; const weight: TDoubleArray): T2DStringArray; overload;');
  AddFunction(@TArray_Classify20, 'function TArray_Classify(const arr: TCharArray; const weight: TDoubleArray): T2DCharArray; overload;');
  AddFunction(@TArray_Classify21, 'function TArray_Classify(const arr: TBooleanArray; const weight: TDoubleArray): T2DBooleanArray; overload;');
  AddFunction(@TArray_Classify22, 'function TArray_Classify(const arr: TPointArray; const weight: TDoubleArray): T2DPointArray; overload;');
  AddFunction(@TArray_Classify23, 'function TArray_Classify(const arr: TBoxArray; const weight: TDoubleArray): T2DBoxArray; overload;');
  AddFunction(@TArray_Classify24, 'function TArray_Classify(const arr: TRangeArray; const weight: TDoubleArray): T2DRangeArray; overload;');

  AddFunction(@TArray_Clear1, 'function TArray_Clear(var arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Clear2, 'function TArray_Clear(var arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Clear3, 'function TArray_Clear(var arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Clear4, 'function TArray_Clear(var arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Clear5, 'function TArray_Clear(var arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Clear6, 'function TArray_Clear(var arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Clear7, 'function TArray_Clear(var arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Clear8, 'function TArray_Clear(var arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Clone1, 'function TArray_Clone(const arr: TIntegerArray; const index: Integer = 0; const count: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Clone2, 'function TArray_Clone(const arr: TDoubleArray; const index: Integer = 0; const count: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Clone3, 'function TArray_Clone(const arr: TStringArray; const index: Integer = 0; const count: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Clone4, 'function TArray_Clone(const arr: TCharArray; const index: Integer = 0; const count: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Clone5, 'function TArray_Clone(const arr: TBooleanArray; const index: Integer = 0; const count: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Clone6, 'function TArray_Clone(const arr: TPointArray; const index: Integer = 0; const count: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Clone7, 'function TArray_Clone(const arr: TBoxArray; const index: Integer = 0; const count: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Clone8, 'function TArray_Clone(const arr: TRangeArray; const index: Integer = 0; const count: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Clone9, 'function TArray_Clone(const arr: TIntegerArray; const ID: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Clone10, 'function TArray_Clone(const arr: TDoubleArray; const ID: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_Clone11, 'function TArray_Clone(const arr: TStringArray; const ID: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_Clone12, 'function TArray_Clone(const arr: TCharArray; const ID: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_Clone13, 'function TArray_Clone(const arr: TBooleanArray; const ID: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_Clone14, 'function TArray_Clone(const arr: TPointArray; const ID: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_Clone15, 'function TArray_Clone(const arr: TBoxArray; const ID: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_Clone16, 'function TArray_Clone(const arr: TRangeArray; const ID: TIntegerArray): TRangeArray; overload;');

  AddFunction(@TArray_Cloned1, 'function TArray_Cloned(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Cloned2, 'function TArray_Cloned(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Cloned3, 'function TArray_Cloned(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Cloned4, 'function TArray_Cloned(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Cloned5, 'function TArray_Cloned(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Cloned6, 'function TArray_Cloned(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Cloned7, 'function TArray_Cloned(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Cloned8, 'function TArray_Cloned(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Compact1, 'function TArray_Compact(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Compact2, 'function TArray_Compact(var arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Compact3, 'function TArray_Compact(var arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Compact4, 'function TArray_Compact(var arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Compact5, 'function TArray_Compact(var arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Compact6, 'function TArray_Compact(var arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Compact7, 'function TArray_Compact(var arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Compact8, 'function TArray_Compact(var arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Compacted1, 'function TArray_Compacted(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Compacted2, 'function TArray_Compacted(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Compacted3, 'function TArray_Compacted(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Compacted4, 'function TArray_Compacted(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Compacted5, 'function TArray_Compacted(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Compacted6, 'function TArray_Compacted(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Compacted7, 'function TArray_Compacted(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Compacted8, 'function TArray_Compacted(const arr: TRangeArray): TRangeArray; overload;');
  AddFunction(@TArray_Compacted9, 'function TArray_Compacted(const arr: TIntegerArray; const threshold: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Compacted10, 'function TArray_Compacted(const arr: TDoubleArray; const threshold: Integer): TDoubleArray; overload;');
  AddFunction(@TArray_Compacted11, 'function TArray_Compacted(const arr: TStringArray; const threshold: Integer): TStringArray; overload;');
  AddFunction(@TArray_Compacted12, 'function TArray_Compacted(const arr: TCharArray; const threshold: Integer): TCharArray; overload;');
  AddFunction(@TArray_Compacted13, 'function TArray_Compacted(const arr: TBooleanArray; const threshold: Integer): TBooleanArray; overload;');
  AddFunction(@TArray_Compacted14, 'function TArray_Compacted(const arr: TPointArray; const threshold: Integer): TPointArray; overload;');
  AddFunction(@TArray_Compacted15, 'function TArray_Compacted(const arr: TBoxArray; const threshold: Integer): TBoxArray; overload;');
  AddFunction(@TArray_Compacted16, 'function TArray_Compacted(const arr: TRangeArray; const threshold: Integer): TRangeArray; overload;');

  AddFunction(@TArray_Combine1, 'function TArray_Combine(const arr, b: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Combine2, 'function TArray_Combine(const arr, b: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Combine3, 'function TArray_Combine(const arr, b: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Combine4, 'function TArray_Combine(const arr, b: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Combine5, 'function TArray_Combine(const arr, b: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Combine6, 'function TArray_Combine(const arr, b: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Combine7, 'function TArray_Combine(const arr, b: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Combine8, 'function TArray_Combine(const arr, b: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Compress1, 'function TArray_Compress(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Compress2, 'function TArray_Compress(var arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Compress3, 'function TArray_Compress(var arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Compress4, 'function TArray_Compress(var arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Compress5, 'function TArray_Compress(var arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Compress6, 'function TArray_Compress(var arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Compress7, 'function TArray_Compress(var arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Compress8, 'function TArray_Compress(var arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Compressed1, 'function TArray_Compressed(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Compressed2, 'function TArray_Compressed(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Compressed3, 'function TArray_Compressed(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Compressed4, 'function TArray_Compressed(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Compressed5, 'function TArray_Compressed(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Compressed6, 'function TArray_Compressed(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Compressed7, 'function TArray_Compressed(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Compressed8, 'function TArray_Compressed(const arr: TRangeArray): TRangeArray; overload;');
  AddFunction(@TArray_Compressed9, 'function TArray_Compressed(const arr: TIntegerArray; const threshold: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Compressed10, 'function TArray_Compressed(const arr: TDoubleArray; const threshold: Integer): TDoubleArray; overload;');
  AddFunction(@TArray_Compressed11, 'function TArray_Compressed(const arr: TStringArray; const threshold: Integer): TStringArray; overload;');
  AddFunction(@TArray_Compressed12, 'function TArray_Compressed(const arr: TCharArray; const threshold: Integer): TCharArray; overload;');
  AddFunction(@TArray_Compressed13, 'function TArray_Compressed(const arr: TBooleanArray; const threshold: Integer): TBooleanArray; overload;');
  AddFunction(@TArray_Compressed14, 'function TArray_Compressed(const arr: TPointArray; const threshold: Integer): TPointArray; overload;');
  AddFunction(@TArray_Compressed15, 'function TArray_Compressed(const arr: TBoxArray; const threshold: Integer): TBoxArray; overload;');
  AddFunction(@TArray_Compressed16, 'function TArray_Compressed(const arr: TRangeArray; const threshold: Integer): TRangeArray; overload;');

  AddFunction(@TArray_Comprised1, 'function TArray_Comprised(const arr, items: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Comprised2, 'function TArray_Comprised(const arr, items: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Comprised3, 'function TArray_Comprised(const arr, items: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Comprised4, 'function TArray_Comprised(const arr, items: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Comprised5, 'function TArray_Comprised(const arr, items: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Comprised6, 'function TArray_Comprised(const arr, items: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Comprised7, 'function TArray_Comprised(const arr, items: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Comprised8, 'function TArray_Comprised(const arr, items: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Constant1, 'function TArray_Constant(const arr: TIntegerArray; const item: Integer): Boolean; overload;');
  AddFunction(@TArray_Constant2, 'function TArray_Constant(const arr: TDoubleArray; const item: Double): Boolean; overload;');
  AddFunction(@TArray_Constant3, 'function TArray_Constant(const arr: TStringArray; const item: string): Boolean; overload;');
  AddFunction(@TArray_Constant4, 'function TArray_Constant(const arr: TCharArray; const item: Char): Boolean; overload;');
  AddFunction(@TArray_Constant5, 'function TArray_Constant(const arr: TBooleanArray; const item: Boolean): Boolean; overload;');
  AddFunction(@TArray_Constant6, 'function TArray_Constant(const arr: TPointArray; const item: TPoint): Boolean; overload;');
  AddFunction(@TArray_Constant7, 'function TArray_Constant(const arr: TBoxArray; const item: TBox): Boolean; overload;');
  AddFunction(@TArray_Constant8, 'function TArray_Constant(const arr: TRangeArray; const item: TRange): Boolean; overload;');
  AddFunction(@TArray_Constant9, 'function TArray_Constant(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Constant10, 'function TArray_Constant(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Constant11, 'function TArray_Constant(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Constant12, 'function TArray_Constant(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Constant13, 'function TArray_Constant(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Constant14, 'function TArray_Constant(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Constant15, 'function TArray_Constant(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Constant16, 'function TArray_Constant(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Contains1, 'function TArray_Contains(const arr: TIntegerArray; const item: Integer; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Contains2, 'function TArray_Contains(const arr: TDoubleArray; const item: Double; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Contains3, 'function TArray_Contains(const arr: TStringArray; const item: string; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Contains4, 'function TArray_Contains(const arr: TCharArray; const item: Char; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Contains5, 'function TArray_Contains(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Contains6, 'function TArray_Contains(const arr: TPointArray; const item: TPoint; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Contains7, 'function TArray_Contains(const arr: TBoxArray; const item: TBox; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Contains8, 'function TArray_Contains(const arr: TRangeArray; const item: TRange; const index: Integer = 0): Boolean; overload;');

  AddFunction(@TArray_Copy1, 'function TArray_Copy(const arr: TIntegerArray; const index: Integer = 0; const count: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Copy2, 'function TArray_Copy(const arr: TDoubleArray; const index: Integer = 0; const count: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Copy3, 'function TArray_Copy(const arr: TStringArray; const index: Integer = 0; const count: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Copy4, 'function TArray_Copy(const arr: TCharArray; const index: Integer = 0; const count: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Copy5, 'function TArray_Copy(const arr: TBooleanArray; const index: Integer = 0; const count: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Copy6, 'function TArray_Copy(const arr: TPointArray; const index: Integer = 0; const count: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Copy7, 'function TArray_Copy(const arr: TBoxArray; const index: Integer = 0; const count: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Copy8, 'function TArray_Copy(const arr: TRangeArray; const index: Integer = 0; const count: Integer = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Copied1, 'function TArray_Copied(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Copied2, 'function TArray_Copied(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Copied3, 'function TArray_Copied(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Copied4, 'function TArray_Copied(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Copied5, 'function TArray_Copied(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Copied6, 'function TArray_Copied(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Copied7, 'function TArray_Copied(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Copied8, 'function TArray_Copied(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Create1, 'function TArray_Create(const item: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Create2, 'function TArray_Create(const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Create3, 'function TArray_Create(const item: string): TStringArray; overload;');
  AddFunction(@TArray_Create4, 'function TArray_Create(const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Create5, 'function TArray_Create(const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Create6, 'function TArray_Create(const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Create7, 'function TArray_Create(const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Create8, 'function TArray_Create(const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Create9, 'function TArray_Create(const aSize: Integer; const item: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Create10, 'function TArray_Create(const aSize: Integer; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Create11, 'function TArray_Create(const aSize: Integer; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Create12, 'function TArray_Create(const aSize: Integer; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Create13, 'function TArray_Create(const aSize: Integer; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Create14, 'function TArray_Create(const aSize: Integer; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Create15, 'function TArray_Create(const aSize: Integer; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Create16, 'function TArray_Create(const aSize: Integer; const item: TRange): TRangeArray; overload;');

  AddFunction(@TArray_Deduplicated1, 'function TArray_Deduplicated(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Deduplicated2, 'function TArray_Deduplicated(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Deduplicated3, 'function TArray_Deduplicated(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Deduplicated4, 'function TArray_Deduplicated(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Deduplicated5, 'function TArray_Deduplicated(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Deduplicated6, 'function TArray_Deduplicated(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Deduplicated7, 'function TArray_Deduplicated(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Deduplicated8, 'function TArray_Deduplicated(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Delete1, 'function TArray_Delete(const arr: TIntegerArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Delete2, 'function TArray_Delete(const arr: TDoubleArray; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Delete3, 'function TArray_Delete(const arr: TStringArray; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Delete4, 'function TArray_Delete(const arr: TCharArray; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Delete5, 'function TArray_Delete(const arr: TBooleanArray; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Delete6, 'function TArray_Delete(const arr: TPointArray; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Delete7, 'function TArray_Delete(const arr: TBoxArray; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Delete8, 'function TArray_Delete(const arr: TRangeArray; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Delete9, 'function TArray_Delete(const arr: TIntegerArray; const ID: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Delete10, 'function TArray_Delete(const arr: TDoubleArray; const ID: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_Delete11, 'function TArray_Delete(const arr: TStringArray; const ID: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_Delete12, 'function TArray_Delete(const arr: TCharArray; const ID: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_Delete13, 'function TArray_Delete(const arr: TBooleanArray; const ID: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_Delete14, 'function TArray_Delete(const arr: TPointArray; const ID: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_Delete15, 'function TArray_Delete(const arr: TBoxArray; const ID: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_Delete16, 'function TArray_Delete(const arr: TRangeArray; const ID: TIntegerArray): TRangeArray; overload;');

  AddFunction(@TArray_Differ1, 'function TArray_Differ(const arr, target: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Differ2, 'function TArray_Differ(const arr, target: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Differ3, 'function TArray_Differ(const arr, target: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Differ4, 'function TArray_Differ(const arr, target: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Differ5, 'function TArray_Differ(const arr, target: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Differ6, 'function TArray_Differ(const arr, target: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Differ7, 'function TArray_Differ(const arr, target: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Differ8, 'function TArray_Differ(const arr, target: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Distinct1, 'function TArray_Distinct(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Distinct2, 'function TArray_Distinct(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Distinct3, 'function TArray_Distinct(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Distinct4, 'function TArray_Distinct(const arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Distinct5, 'function TArray_Distinct(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Distinct6, 'function TArray_Distinct(const arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Distinct7, 'function TArray_Distinct(const arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Distinct8, 'function TArray_Distinct(const arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Disordered1, 'function TArray_Disordered(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Disordered2, 'function TArray_Disordered(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Disordered3, 'function TArray_Disordered(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Disordered4, 'function TArray_Disordered(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Disordered5, 'function TArray_Disordered(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Disordered6, 'function TArray_Disordered(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Disordered7, 'function TArray_Disordered(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Disordered8, 'function TArray_Disordered(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Distribute1, 'function TArray_Distribute(const arr: TIntegerArray; const parts: Integer): T2DIntegerArray; overload;');
  AddFunction(@TArray_Distribute2, 'function TArray_Distribute(const arr: TDoubleArray; const parts: Integer): T2DDoubleArray; overload;');
  AddFunction(@TArray_Distribute3, 'function TArray_Distribute(const arr: TStringArray; const parts: Integer): T2DStringArray; overload;');
  AddFunction(@TArray_Distribute4, 'function TArray_Distribute(const arr: TCharArray; const parts: Integer): T2DCharArray; overload;');
  AddFunction(@TArray_Distribute5, 'function TArray_Distribute(const arr: TBooleanArray; const parts: Integer): T2DBooleanArray; overload;');
  AddFunction(@TArray_Distribute6, 'function TArray_Distribute(const arr: TPointArray; const parts: Integer): T2DPointArray; overload;');
  AddFunction(@TArray_Distribute7, 'function TArray_Distribute(const arr: TBoxArray; const parts: Integer): T2DBoxArray; overload;');
  AddFunction(@TArray_Distribute8, 'function TArray_Distribute(const arr: TRangeArray; const parts: Integer): T2DRangeArray; overload;');

  AddFunction(@TArray_Diversified1, 'function TArray_Diversified(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Diversified2, 'function TArray_Diversified(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Diversified3, 'function TArray_Diversified(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Diversified4, 'function TArray_Diversified(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Diversified5, 'function TArray_Diversified(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Diversified6, 'function TArray_Diversified(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Diversified7, 'function TArray_Diversified(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Diversified8, 'function TArray_Diversified(const arr: TRangeArray): TRangeArray; overload;');
  
  AddFunction(@TArray_DiversifiedEx1, 'function TArray_DiversifiedEx(const arr: TIntegerArray; const dAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_DiversifiedEx2, 'function TArray_DiversifiedEx(const arr: TDoubleArray; const dAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_DiversifiedEx3, 'function TArray_DiversifiedEx(const arr: TStringArray; const dAscending: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_DiversifiedEx4, 'function TArray_DiversifiedEx(const arr: TCharArray; const dAscending: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_DiversifiedEx5, 'function TArray_DiversifiedEx(const arr: TBooleanArray; const dAscending: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_DiversifiedEx6, 'function TArray_DiversifiedEx(const arr: TPointArray; const dAscending: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_DiversifiedEx7, 'function TArray_DiversifiedEx(const arr: TBoxArray; const dAscending: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_DiversifiedEx8, 'function TArray_DiversifiedEx(const arr: TRangeArray; const dAscending: Boolean = True): TRangeArray; overload;');

  AddFunction(@TArray_Domain1, 'function TArray_Domain(const arr: TIntegerArray): TRange; overload;');
  AddFunction(@TArray_Domain2, 'function TArray_Domain(const arr: TDoubleArray): TRange; overload;');
  AddFunction(@TArray_Domain3, 'function TArray_Domain(const arr: TStringArray): TRange; overload;');
  AddFunction(@TArray_Domain4, 'function TArray_Domain(const arr: TCharArray): TRange; overload;');
  AddFunction(@TArray_Domain5, 'function TArray_Domain(const arr: TBooleanArray): TRange; overload;');
  AddFunction(@TArray_Domain6, 'function TArray_Domain(const arr: TPointArray): TRange; overload;');
  AddFunction(@TArray_Domain7, 'function TArray_Domain(const arr: TBoxArray): TRange; overload;');
  AddFunction(@TArray_Domain8, 'function TArray_Domain(const arr: TRangeArray): TRange; overload;');

  AddFunction(@TArray_Drop1, 'function TArray_Drop(const arr: TIntegerArray; const item: Integer; const eraseDuplicates: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Drop2, 'function TArray_Drop(const arr: TDoubleArray; const item: Double; const eraseDuplicates: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Drop3, 'function TArray_Drop(const arr: TStringArray; const item: string; const eraseDuplicates: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Drop4, 'function TArray_Drop(const arr: TCharArray; const item: Char; const eraseDuplicates: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Drop5, 'function TArray_Drop(const arr: TBooleanArray; const item: Boolean; const eraseDuplicates: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Drop6, 'function TArray_Drop(const arr: TPointArray; const item: TPoint; const eraseDuplicates: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Drop7, 'function TArray_Drop(const arr: TBoxArray; const item: TBox; const eraseDuplicates: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Drop8, 'function TArray_Drop(const arr: TRangeArray; const item: TRange; const eraseDuplicates: Boolean = True): TRangeArray; overload;');

  AddFunction(@TArray_Dump1, 'function TArray_Dump(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Dump2, 'function TArray_Dump(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Dump3, 'function TArray_Dump(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Dump4, 'function TArray_Dump(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Dump5, 'function TArray_Dump(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Dump6, 'function TArray_Dump(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Dump7, 'function TArray_Dump(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Dump8, 'function TArray_Dump(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_Dupe1, 'function TArray_Dupe(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Dupe2, 'function TArray_Dupe(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Dupe3, 'function TArray_Dupe(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Dupe4, 'function TArray_Dupe(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Dupe5, 'function TArray_Dupe(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Dupe6, 'function TArray_Dupe(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Dupe7, 'function TArray_Dupe(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Dupe8, 'function TArray_Dupe(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Duplicate1, 'function TArray_Duplicate(const arr: TIntegerArray; const xTimes: Integer = 1): TIntegerArray; overload;');
  AddFunction(@TArray_Duplicate2, 'function TArray_Duplicate(const arr: TDoubleArray; const xTimes: Integer = 1): TDoubleArray; overload;');
  AddFunction(@TArray_Duplicate3, 'function TArray_Duplicate(const arr: TStringArray; const xTimes: Integer = 1): TStringArray; overload;');
  AddFunction(@TArray_Duplicate4, 'function TArray_Duplicate(const arr: TCharArray; const xTimes: Integer = 1): TCharArray; overload;');
  AddFunction(@TArray_Duplicate5, 'function TArray_Duplicate(const arr: TBooleanArray; const xTimes: Integer = 1): TBooleanArray; overload;');
  AddFunction(@TArray_Duplicate6, 'function TArray_Duplicate(const arr: TPointArray; const xTimes: Integer = 1): TPointArray; overload;');
  AddFunction(@TArray_Duplicate7, 'function TArray_Duplicate(const arr: TBoxArray; const xTimes: Integer = 1): TBoxArray; overload;');
  AddFunction(@TArray_Duplicate8, 'function TArray_Duplicate(const arr: TRangeArray; const xTimes: Integer = 1): TRangeArray; overload;');

  AddFunction(@TArray_Elements1, 'function TArray_Elements(const arr: TIntegerArray; const returnIDs: TIntegerArray; const returnSort: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Elements2, 'function TArray_Elements(const arr: TDoubleArray; const returnIDs: TIntegerArray; const returnSort: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Elements3, 'function TArray_Elements(const arr: TStringArray; const returnIDs: TIntegerArray; const returnSort: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Elements4, 'function TArray_Elements(const arr: TCharArray; const returnIDs: TIntegerArray; const returnSort: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Elements5, 'function TArray_Elements(const arr: TBooleanArray; const returnIDs: TIntegerArray; const returnSort: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Elements6, 'function TArray_Elements(const arr: TPointArray; const returnIDs: TIntegerArray; const returnSort: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Elements7, 'function TArray_Elements(const arr: TBoxArray; const returnIDs: TIntegerArray; const returnSort: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Elements8, 'function TArray_Elements(const arr: TRangeArray; const returnIDs: TIntegerArray; const returnSort: Boolean = True): TRangeArray; overload;');

  AddFunction(@TArray_Emplace1, 'function TArray_Emplace(const arr: TIntegerArray; const item: Integer; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Emplace2, 'function TArray_Emplace(const arr: TDoubleArray; const item: Double; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Emplace3, 'function TArray_Emplace(const arr: TStringArray; const item: string; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Emplace4, 'function TArray_Emplace(const arr: TCharArray; const item: Char; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Emplace5, 'function TArray_Emplace(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Emplace6, 'function TArray_Emplace(const arr: TPointArray; const item: TPoint; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Emplace7, 'function TArray_Emplace(const arr: TBoxArray; const item: TBox; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Emplace8, 'function TArray_Emplace(const arr: TRangeArray; const item: TRange; const index: Integer = 0): Integer; overload;');

  AddFunction(@TArray_Empty1, 'function TArray_Empty(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Empty2, 'function TArray_Empty(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Empty3, 'function TArray_Empty(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Empty4, 'function TArray_Empty(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Empty5, 'function TArray_Empty(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Empty6, 'function TArray_Empty(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Empty7, 'function TArray_Empty(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Empty8, 'function TArray_Empty(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Equal1, 'function TArray_Equal(const arr, target: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Equal2, 'function TArray_Equal(const arr, target: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Equal3, 'function TArray_Equal(const arr, target: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Equal4, 'function TArray_Equal(const arr, target: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Equal5, 'function TArray_Equal(const arr, target: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Equal6, 'function TArray_Equal(const arr, target: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Equal7, 'function TArray_Equal(const arr, target: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Equal8, 'function TArray_Equal(const arr, target: TRangeArray): Boolean; overload;');
  
  AddFunction(@TArray_Erase1, 'function TArray_Erase(const arr: TIntegerArray; const item: Integer; const index: Integer = 2147483647; const all: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Erase2, 'function TArray_Erase(const arr: TDoubleArray; const item: Double; const index: Integer = 2147483647; const all: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Erase3, 'function TArray_Erase(const arr: TStringArray; const item: string; const index: Integer = 2147483647; const all: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Erase4, 'function TArray_Erase(const arr: TCharArray; const item: Char; const index: Integer = 2147483647; const all: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Erase5, 'function TArray_Erase(const arr: TBooleanArray; const item: Boolean; const index: Integer = 2147483647; const all: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Erase6, 'function TArray_Erase(const arr: TPointArray; const item: TPoint; const index: Integer = 2147483647; const all: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Erase7, 'function TArray_Erase(const arr: TBoxArray; const item: TBox; const index: Integer = 2147483647; const all: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Erase8, 'function TArray_Erase(const arr: TRangeArray; const item: TRange; const index: Integer = 2147483647; const all: Boolean = True): TRangeArray; overload;');
  AddFunction(@TArray_Erase9, 'function TArray_Erase(const arr: TIntegerArray; const item: Integer; const all: Boolean): TIntegerArray; overload;');
  AddFunction(@TArray_Erase10, 'function TArray_Erase(const arr: TDoubleArray; const item: Double; const all: Boolean): TDoubleArray; overload;');
  AddFunction(@TArray_Erase11, 'function TArray_Erase(const arr: TStringArray; const item: string; const all: Boolean): TStringArray; overload;');
  AddFunction(@TArray_Erase12, 'function TArray_Erase(const arr: TCharArray; const item: Char; const all: Boolean): TCharArray; overload;');
  AddFunction(@TArray_Erase13, 'function TArray_Erase(const arr: TBooleanArray; const item: Boolean; const all: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Erase14, 'function TArray_Erase(const arr: TPointArray; const item: TPoint; const all: Boolean): TPointArray; overload;');
  AddFunction(@TArray_Erase15, 'function TArray_Erase(const arr: TBoxArray; const item: TBox; const all: Boolean): TBoxArray; overload;');
  AddFunction(@TArray_Erase16, 'function TArray_Erase(const arr: TRangeArray; const item: TRange; const all: Boolean): TRangeArray; overload;');
  AddFunction(@TArray_Erase17, 'function TArray_Erase(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647; const all: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Erase18, 'function TArray_Erase(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647; const all: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Erase19, 'function TArray_Erase(const arr: TStringArray; const items: TStringArray; const index: Integer = 2147483647; const all: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Erase20, 'function TArray_Erase(const arr: TCharArray; const items: TCharArray; const index: Integer = 2147483647; const all: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Erase21, 'function TArray_Erase(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647; const all: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Erase22, 'function TArray_Erase(const arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647; const all: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Erase23, 'function TArray_Erase(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 2147483647; const all: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Erase24, 'function TArray_Erase(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 2147483647; const all: Boolean = True): TRangeArray; overload;');
  AddFunction(@TArray_Erase25, 'function TArray_Erase(const arr: TIntegerArray; const items: TIntegerArray; const all: Boolean): TIntegerArray; overload;');
  AddFunction(@TArray_Erase26, 'function TArray_Erase(const arr: TDoubleArray; const items: TDoubleArray; const all: Boolean): TDoubleArray; overload;');
  AddFunction(@TArray_Erase27, 'function TArray_Erase(const arr: TStringArray; const items: TStringArray; const all: Boolean): TStringArray; overload;');
  AddFunction(@TArray_Erase28, 'function TArray_Erase(const arr: TCharArray; const items: TCharArray; const all: Boolean): TCharArray; overload;');
  AddFunction(@TArray_Erase29, 'function TArray_Erase(const arr: TBooleanArray; const items: TBooleanArray; const all: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Erase30, 'function TArray_Erase(const arr: TPointArray; const items: TPointArray; const all: Boolean): TPointArray; overload;');
  AddFunction(@TArray_Erase31, 'function TArray_Erase(const arr: TBoxArray; const items: TBoxArray; const all: Boolean): TBoxArray; overload;');
  AddFunction(@TArray_Erase32, 'function TArray_Erase(const arr: TRangeArray; const items: TRangeArray; const all: Boolean): TRangeArray; overload;');

  AddFunction(@TArray_Exact1, 'function TArray_Exact(const arr, items: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Exact2, 'function TArray_Exact(const arr, items: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Exact3, 'function TArray_Exact(const arr, items: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Exact4, 'function TArray_Exact(const arr, items: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Exact5, 'function TArray_Exact(const arr, items: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Exact6, 'function TArray_Exact(const arr, items: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Exact7, 'function TArray_Exact(const arr, items: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Exact8, 'function TArray_Exact(const arr, items: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Excessive1, 'function TArray_Excessive(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Excessive2, 'function TArray_Excessive(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Excessive3, 'function TArray_Excessive(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Excessive4, 'function TArray_Excessive(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Excessive5, 'function TArray_Excessive(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Excessive6, 'function TArray_Excessive(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Excessive7, 'function TArray_Excessive(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Excessive8, 'function TArray_Excessive(const arr: TRangeArray): Boolean; overload;');
  
  AddFunction(@TArray_Exch1, 'function TArray_Exch(var arr: TIntegerArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exch2, 'function TArray_Exch(var arr: TDoubleArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exch3, 'function TArray_Exch(var arr: TStringArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exch4, 'function TArray_Exch(var arr: TCharArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exch5, 'function TArray_Exch(var arr: TBooleanArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exch6, 'function TArray_Exch(var arr: TPointArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exch7, 'function TArray_Exch(var arr: TBoxArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exch8, 'function TArray_Exch(var arr: TRangeArray; const aIndex, bIndex: Integer): Boolean; overload;');

  AddFunction(@TArray_Exchange1, 'function TArray_Exchange(var arr: TIntegerArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exchange2, 'function TArray_Exchange(var arr: TDoubleArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exchange3, 'function TArray_Exchange(var arr: TStringArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exchange4, 'function TArray_Exchange(var arr: TCharArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exchange5, 'function TArray_Exchange(var arr: TBooleanArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exchange6, 'function TArray_Exchange(var arr: TPointArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exchange7, 'function TArray_Exchange(var arr: TBoxArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exchange8, 'function TArray_Exchange(var arr: TRangeArray; const aIndex, bIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Exchange9, 'function TArray_Exchange(var arr, b: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Exchange10, 'function TArray_Exchange(var arr, b: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Exchange11, 'function TArray_Exchange(var arr, b: TStringArray): Integer; overload;');
  AddFunction(@TArray_Exchange12, 'function TArray_Exchange(var arr, b: TCharArray): Integer; overload;');
  AddFunction(@TArray_Exchange13, 'function TArray_Exchange(var arr, b: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Exchange14, 'function TArray_Exchange(var arr, b: TPointArray): Integer; overload;');
  AddFunction(@TArray_Exchange15, 'function TArray_Exchange(var arr, b: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Exchange16, 'function TArray_Exchange(var arr, b: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Exclude1, 'function TArray_Exclude(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Exclude2, 'function TArray_Exclude(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Exclude3, 'function TArray_Exclude(const arr: TStringArray; const items: TStringArray; const index: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Exclude4, 'function TArray_Exclude(const arr: TCharArray; const items: TCharArray; const index: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Exclude5, 'function TArray_Exclude(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Exclude6, 'function TArray_Exclude(const arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Exclude7, 'function TArray_Exclude(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Exclude8, 'function TArray_Exclude(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Exists1, 'function TArray_Exists(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Exists2, 'function TArray_Exists(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Exists3, 'function TArray_Exists(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Exists4, 'function TArray_Exists(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Exists5, 'function TArray_Exists(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Exists6, 'function TArray_Exists(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Exists7, 'function TArray_Exists(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Exists8, 'function TArray_Exists(const arr: TRangeArray): Boolean; overload;');
  
  AddFunction(@TArray_Extend1, 'function TArray_Extend(const arr: TIntegerArray; const item: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Extend2, 'function TArray_Extend(const arr: TDoubleArray; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Extend3, 'function TArray_Extend(const arr: TStringArray; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Extend4, 'function TArray_Extend(const arr: TCharArray; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Extend5, 'function TArray_Extend(const arr: TBooleanArray; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Extend6, 'function TArray_Extend(const arr: TPointArray; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Extend7, 'function TArray_Extend(const arr: TBoxArray; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Extend8, 'function TArray_Extend(const arr: TRangeArray; const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Extend9, 'function TArray_Extend(const arr: TIntegerArray; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Extend10, 'function TArray_Extend(const arr: TDoubleArray; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Extend11, 'function TArray_Extend(const arr: TStringArray; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Extend12, 'function TArray_Extend(const arr: TCharArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Extend13, 'function TArray_Extend(const arr: TBooleanArray; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Extend14, 'function TArray_Extend(const arr: TPointArray; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Extend15, 'function TArray_Extend(const arr: TBoxArray; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Extend16, 'function TArray_Extend(const arr: TRangeArray; const items: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Extract1, 'function TArray_Extract(const arr: TIntegerArray; const item: Integer; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Extract2, 'function TArray_Extract(const arr: TDoubleArray; const item: Double; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Extract3, 'function TArray_Extract(const arr: TStringArray; const item: string; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Extract4, 'function TArray_Extract(const arr: TCharArray; const item: Char; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Extract5, 'function TArray_Extract(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Extract6, 'function TArray_Extract(const arr: TPointArray; const item: TPoint; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Extract7, 'function TArray_Extract(const arr: TBoxArray; const item: TBox; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Extract8, 'function TArray_Extract(const arr: TRangeArray; const item: TRange; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Extract9, 'function TArray_Extract(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Extract10, 'function TArray_Extract(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Extract11, 'function TArray_Extract(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Extract12, 'function TArray_Extract(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Extract13, 'function TArray_Extract(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Extract14, 'function TArray_Extract(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Extract15, 'function TArray_Extract(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Extract16, 'function TArray_Extract(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_ExtractEvery1, 'function TArray_ExtractEvery(const arr: TIntegerArray; const X: Integer = 1; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_ExtractEvery2, 'function TArray_ExtractEvery(const arr: TDoubleArray; const X: Integer = 1; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_ExtractEvery3, 'function TArray_ExtractEvery(const arr: TStringArray; const X: Integer = 1; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_ExtractEvery4, 'function TArray_ExtractEvery(const arr: TCharArray; const X: Integer = 1; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_ExtractEvery5, 'function TArray_ExtractEvery(const arr: TBooleanArray; const X: Integer = 1; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_ExtractEvery6, 'function TArray_ExtractEvery(const arr: TPointArray; const X: Integer = 1; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_ExtractEvery7, 'function TArray_ExtractEvery(const arr: TBoxArray; const X: Integer = 1; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_ExtractEvery8, 'function TArray_ExtractEvery(const arr: TRangeArray; const X: Integer = 1; const index: Integer = 0): TRangeArray; overload;');
  
  AddFunction(@TArray_ExtractIDs1, 'function TArray_ExtractIDs(const arr: TIntegerArray; const allowed: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_ExtractIDs2, 'function TArray_ExtractIDs(const arr: TDoubleArray; const allowed: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_ExtractIDs3, 'function TArray_ExtractIDs(const arr: TStringArray; const allowed: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_ExtractIDs4, 'function TArray_ExtractIDs(const arr: TCharArray; const allowed: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_ExtractIDs5, 'function TArray_ExtractIDs(const arr: TBooleanArray; const allowed: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_ExtractIDs6, 'function TArray_ExtractIDs(const arr: TPointArray; const allowed: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_ExtractIDs7, 'function TArray_ExtractIDs(const arr: TBoxArray; const allowed: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_ExtractIDs8, 'function TArray_ExtractIDs(const arr: TRangeArray; const allowed: TIntegerArray): TRangeArray; overload;');

  AddFunction(@TArray_ExtractIndexes1, 'function TArray_ExtractIndexes(const arr: TIntegerArray; const allowed: TIntegerArray; const aSorted: Boolean = False): TIntegerArray; overload;');
  AddFunction(@TArray_ExtractIndexes2, 'function TArray_ExtractIndexes(const arr: TDoubleArray; const allowed: TIntegerArray; const aSorted: Boolean = False): TDoubleArray; overload;');
  AddFunction(@TArray_ExtractIndexes3, 'function TArray_ExtractIndexes(const arr: TStringArray; const allowed: TIntegerArray; const aSorted: Boolean = False): TStringArray; overload;');
  AddFunction(@TArray_ExtractIndexes4, 'function TArray_ExtractIndexes(const arr: TCharArray; const allowed: TIntegerArray; const aSorted: Boolean = False): TCharArray; overload;');
  AddFunction(@TArray_ExtractIndexes5, 'function TArray_ExtractIndexes(const arr: TBooleanArray; const allowed: TIntegerArray; const aSorted: Boolean = False): TBooleanArray; overload;');
  AddFunction(@TArray_ExtractIndexes6, 'function TArray_ExtractIndexes(const arr: TPointArray; const allowed: TIntegerArray; const aSorted: Boolean = False): TPointArray; overload;');
  AddFunction(@TArray_ExtractIndexes7, 'function TArray_ExtractIndexes(const arr: TBoxArray; const allowed: TIntegerArray; const aSorted: Boolean = False): TBoxArray; overload;');
  AddFunction(@TArray_ExtractIndexes8, 'function TArray_ExtractIndexes(const arr: TRangeArray; const allowed: TIntegerArray; const aSorted: Boolean = False): TRangeArray; overload;');

  AddFunction(@TArray_Feed1, 'function TArray_Feed(const arr: TIntegerArray; const item: Integer; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Feed2, 'function TArray_Feed(const arr: TDoubleArray; const item: Double; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Feed3, 'function TArray_Feed(const arr: TStringArray; const item: string; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Feed4, 'function TArray_Feed(const arr: TCharArray; const item: Char; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Feed5, 'function TArray_Feed(const arr: TBooleanArray; const item: Boolean; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Feed6, 'function TArray_Feed(const arr: TPointArray; const item: TPoint; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Feed7, 'function TArray_Feed(const arr: TBoxArray; const item: TBox; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Feed8, 'function TArray_Feed(const arr: TRangeArray; const item: TRange; const allowDuplicates: Boolean = False): Integer; overload;');

  AddFunction(@TArray_Fill1, 'function TArray_Fill(const arr: TIntegerArray; const item: Integer; const index: Integer = 0; const count: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Fill2, 'function TArray_Fill(const arr: TDoubleArray; const item: Double; const index: Integer = 0; const count: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Fill3, 'function TArray_Fill(const arr: TStringArray; const item: string; const index: Integer = 0; const count: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Fill4, 'function TArray_Fill(const arr: TCharArray; const item: Char; const index: Integer = 0; const count: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Fill5, 'function TArray_Fill(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0; const count: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Fill6, 'function TArray_Fill(const arr: TPointArray; const item: TPoint; const index: Integer = 0; const count: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Fill7, 'function TArray_Fill(const arr: TBoxArray; const item: TBox; const index: Integer = 0; const count: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Fill8, 'function TArray_Fill(const arr: TRangeArray; const item: TRange; const index: Integer = 0; const count: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Fill9, 'function TArray_Fill(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0; const count: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Fill10, 'function TArray_Fill(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0; const count: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Fill11, 'function TArray_Fill(const arr: TStringArray; const items: TStringArray; const index: Integer = 0; const count: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Fill12, 'function TArray_Fill(const arr: TCharArray; const items: TCharArray; const index: Integer = 0; const count: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Fill13, 'function TArray_Fill(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0; const count: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Fill14, 'function TArray_Fill(const arr: TPointArray; const items: TPointArray; const index: Integer = 0; const count: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Fill15, 'function TArray_Fill(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0; const count: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Fill16, 'function TArray_Fill(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0; const count: Integer = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Filter1, 'function TArray_Filter(const arr: TIntegerArray; const item: Integer; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Filter2, 'function TArray_Filter(const arr: TDoubleArray; const item: Double; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Filter3, 'function TArray_Filter(const arr: TStringArray; const item: string; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Filter4, 'function TArray_Filter(const arr: TCharArray; const item: Char; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Filter5, 'function TArray_Filter(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Filter6, 'function TArray_Filter(const arr: TPointArray; const item: TPoint; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Filter7, 'function TArray_Filter(const arr: TBoxArray; const item: TBox; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Filter8, 'function TArray_Filter(const arr: TRangeArray; const item: TRange; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Filter9, 'function TArray_Filter(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Filter10, 'function TArray_Filter(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Filter11, 'function TArray_Filter(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Filter12, 'function TArray_Filter(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Filter13, 'function TArray_Filter(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Filter14, 'function TArray_Filter(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Filter15, 'function TArray_Filter(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Filter16, 'function TArray_Filter(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_FilterEvery1, 'function TArray_FilterEvery(const arr: TIntegerArray; const X: Integer = 1; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_FilterEvery2, 'function TArray_FilterEvery(const arr: TDoubleArray; const X: Integer = 1; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_FilterEvery3, 'function TArray_FilterEvery(const arr: TStringArray; const X: Integer = 1; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_FilterEvery4, 'function TArray_FilterEvery(const arr: TCharArray; const X: Integer = 1; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_FilterEvery5, 'function TArray_FilterEvery(const arr: TBooleanArray; const X: Integer = 1; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_FilterEvery6, 'function TArray_FilterEvery(const arr: TPointArray; const X: Integer = 1; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_FilterEvery7, 'function TArray_FilterEvery(const arr: TBoxArray; const X: Integer = 1; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_FilterEvery8, 'function TArray_FilterEvery(const arr: TRangeArray; const X: Integer = 1; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_FilterIDs1, 'function TArray_FilterIDs(const arr: TIntegerArray; const forbidden: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_FilterIDs2, 'function TArray_FilterIDs(const arr: TDoubleArray; const forbidden: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_FilterIDs3, 'function TArray_FilterIDs(const arr: TStringArray; const forbidden: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_FilterIDs4, 'function TArray_FilterIDs(const arr: TCharArray; const forbidden: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_FilterIDs5, 'function TArray_FilterIDs(const arr: TBooleanArray; const forbidden: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_FilterIDs6, 'function TArray_FilterIDs(const arr: TPointArray; const forbidden: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_FilterIDs7, 'function TArray_FilterIDs(const arr: TBoxArray; const forbidden: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_FilterIDs8, 'function TArray_FilterIDs(const arr: TRangeArray; const forbidden: TIntegerArray): TRangeArray; overload;');
  
  AddFunction(@TArray_FilterIndexes1, 'function TArray_FilterIndexes(const arr: TIntegerArray; const forbidden: TIntegerArray; const fSorted: Boolean = False): TIntegerArray; overload;');
  AddFunction(@TArray_FilterIndexes2, 'function TArray_FilterIndexes(const arr: TDoubleArray; const forbidden: TIntegerArray; const fSorted: Boolean = False): TDoubleArray; overload;');
  AddFunction(@TArray_FilterIndexes3, 'function TArray_FilterIndexes(const arr: TStringArray; const forbidden: TIntegerArray; const fSorted: Boolean = False): TStringArray; overload;');
  AddFunction(@TArray_FilterIndexes4, 'function TArray_FilterIndexes(const arr: TCharArray; const forbidden: TIntegerArray; const fSorted: Boolean = False): TCharArray; overload;');
  AddFunction(@TArray_FilterIndexes5, 'function TArray_FilterIndexes(const arr: TBooleanArray; const forbidden: TIntegerArray; const fSorted: Boolean = False): TBooleanArray; overload;');
  AddFunction(@TArray_FilterIndexes6, 'function TArray_FilterIndexes(const arr: TPointArray; const forbidden: TIntegerArray; const fSorted: Boolean = False): TPointArray; overload;');
  AddFunction(@TArray_FilterIndexes7, 'function TArray_FilterIndexes(const arr: TBoxArray; const forbidden: TIntegerArray; const fSorted: Boolean = False): TBoxArray; overload;');
  AddFunction(@TArray_FilterIndexes8, 'function TArray_FilterIndexes(const arr: TRangeArray; const forbidden: TIntegerArray; const fSorted: Boolean = False): TRangeArray; overload;');

  AddFunction(@TArray_Find1, 'function TArray_Find(const arr: TIntegerArray; const IDs: TRange; const item: Integer): Integer; overload;');
  AddFunction(@TArray_Find2, 'function TArray_Find(const arr: TDoubleArray; const IDs: TRange; const item: Double): Integer; overload;');
  AddFunction(@TArray_Find3, 'function TArray_Find(const arr: TStringArray; const IDs: TRange; const item: string): Integer; overload;');
  AddFunction(@TArray_Find4, 'function TArray_Find(const arr: TCharArray; const IDs: TRange; const item: Char): Integer; overload;');
  AddFunction(@TArray_Find5, 'function TArray_Find(const arr: TBooleanArray; const IDs: TRange; const item: Boolean): Integer; overload;');
  AddFunction(@TArray_Find6, 'function TArray_Find(const arr: TPointArray; const IDs: TRange; const item: TPoint): Integer; overload;');
  AddFunction(@TArray_Find7, 'function TArray_Find(const arr: TBoxArray; const IDs: TRange; const item: TBox): Integer; overload;');
  AddFunction(@TArray_Find8, 'function TArray_Find(const arr: TRangeArray; const IDs: TRange; const item: TRange): Integer; overload;');
  AddFunction(@TArray_Find9, 'function TArray_Find(const arr: TIntegerArray; const IDs: TIntegerArray; const item: Integer): Integer; overload;');
  AddFunction(@TArray_Find10, 'function TArray_Find(const arr: TDoubleArray; const IDs: TIntegerArray; const item: Double): Integer; overload;');
  AddFunction(@TArray_Find11, 'function TArray_Find(const arr: TStringArray; const IDs: TIntegerArray; const item: string): Integer; overload;');
  AddFunction(@TArray_Find12, 'function TArray_Find(const arr: TCharArray; const IDs: TIntegerArray; const item: Char): Integer; overload;');
  AddFunction(@TArray_Find13, 'function TArray_Find(const arr: TBooleanArray; const IDs: TIntegerArray; const item: Boolean): Integer; overload;');
  AddFunction(@TArray_Find14, 'function TArray_Find(const arr: TPointArray; const IDs: TIntegerArray; const item: TPoint): Integer; overload;');
  AddFunction(@TArray_Find15, 'function TArray_Find(const arr: TBoxArray; const IDs: TIntegerArray; const item: TBox): Integer; overload;');
  AddFunction(@TArray_Find16, 'function TArray_Find(const arr: TRangeArray; const IDs: TIntegerArray; const item: TRange): Integer; overload;');
  AddFunction(@TArray_Find17, 'function TArray_Find(const arr: TIntegerArray; const IDs: TRange; const items: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Find18, 'function TArray_Find(const arr: TDoubleArray; const IDs: TRange; const items: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Find19, 'function TArray_Find(const arr: TStringArray; const IDs: TRange; const items: TStringArray): Integer; overload;');
  AddFunction(@TArray_Find20, 'function TArray_Find(const arr: TCharArray; const IDs: TRange; const items: TCharArray): Integer; overload;');
  AddFunction(@TArray_Find21, 'function TArray_Find(const arr: TBooleanArray; const IDs: TRange; const items: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Find22, 'function TArray_Find(const arr: TPointArray; const IDs: TRange; const items: TPointArray): Integer; overload;');
  AddFunction(@TArray_Find23, 'function TArray_Find(const arr: TBoxArray; const IDs: TRange; const items: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Find24, 'function TArray_Find(const arr: TRangeArray; const IDs: TRange; const items: TRangeArray): Integer; overload;');
  AddFunction(@TArray_Find25, 'function TArray_Find(const arr: TIntegerArray; const IDs: TIntegerArray; const items: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Find26, 'function TArray_Find(const arr: TDoubleArray; const IDs: TIntegerArray; const items: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Find27, 'function TArray_Find(const arr: TStringArray; const IDs: TIntegerArray; const items: TStringArray): Integer; overload;');
  AddFunction(@TArray_Find28, 'function TArray_Find(const arr: TCharArray; const IDs: TIntegerArray; const items: TCharArray): Integer; overload;');
  AddFunction(@TArray_Find29, 'function TArray_Find(const arr: TBooleanArray; const IDs: TIntegerArray; const items: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Find30, 'function TArray_Find(const arr: TPointArray; const IDs: TIntegerArray; const items: TPointArray): Integer; overload;');
  AddFunction(@TArray_Find31, 'function TArray_Find(const arr: TBoxArray; const IDs: TIntegerArray; const items: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Find32, 'function TArray_Find(const arr: TRangeArray; const IDs: TIntegerArray; const items: TRangeArray): Integer; overload;');

  AddFunction(@TArray_First1, 'function TArray_First(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_First2, 'function TArray_First(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_First3, 'function TArray_First(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_First4, 'function TArray_First(const arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_First5, 'function TArray_First(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_First6, 'function TArray_First(const arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_First7, 'function TArray_First(const arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_First8, 'function TArray_First(const arr: TRangeArray): Integer; overload;');
  AddFunction(@TArray_First9, 'function TArray_First(const arr: TIntegerArray; const item: Integer): Integer; overload;');
  AddFunction(@TArray_First10, 'function TArray_First(const arr: TDoubleArray; const item: Double): Integer; overload;');
  AddFunction(@TArray_First11, 'function TArray_First(const arr: TStringArray; const item: string): Integer; overload;');
  AddFunction(@TArray_First12, 'function TArray_First(const arr: TCharArray; const item: Char): Integer; overload;');
  AddFunction(@TArray_First13, 'function TArray_First(const arr: TBooleanArray; const item: Boolean): Integer; overload;');
  AddFunction(@TArray_First14, 'function TArray_First(const arr: TPointArray; const item: TPoint): Integer; overload;');
  AddFunction(@TArray_First15, 'function TArray_First(const arr: TBoxArray; const item: TBox): Integer; overload;');
  AddFunction(@TArray_First16, 'function TArray_First(const arr: TRangeArray; const item: TRange): Integer; overload;');
  AddFunction(@TArray_First17, 'function TArray_First(const arr: TIntegerArray; const items: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_First18, 'function TArray_First(const arr: TDoubleArray; const items: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_First19, 'function TArray_First(const arr: TStringArray; const items: TStringArray): Integer; overload;');
  AddFunction(@TArray_First20, 'function TArray_First(const arr: TCharArray; const items: TCharArray): Integer; overload;');
  AddFunction(@TArray_First21, 'function TArray_First(const arr: TBooleanArray; const items: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_First22, 'function TArray_First(const arr: TPointArray; const items: TPointArray): Integer; overload;');
  AddFunction(@TArray_First23, 'function TArray_First(const arr: TBoxArray; const items: TBoxArray): Integer; overload;');
  AddFunction(@TArray_First24, 'function TArray_First(const arr: TRangeArray; const items: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Fit1, 'function TArray_Fit(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Fit2, 'function TArray_Fit(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Fit3, 'function TArray_Fit(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Fit4, 'function TArray_Fit(const arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Fit5, 'function TArray_Fit(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Fit6, 'function TArray_Fit(const arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Fit7, 'function TArray_Fit(const arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Fit8, 'function TArray_Fit(const arr: TRangeArray): Integer; overload;');
  AddFunction(@TArray_Fit9, 'function TArray_Fit(var arr: TIntegerArray; const aSize: Integer): Integer; overload;');
  AddFunction(@TArray_Fit10, 'function TArray_Fit(var arr: TDoubleArray; const aSize: Integer): Integer; overload;');
  AddFunction(@TArray_Fit11, 'function TArray_Fit(var arr: TStringArray; const aSize: Integer): Integer; overload;');
  AddFunction(@TArray_Fit12, 'function TArray_Fit(var arr: TCharArray; const aSize: Integer): Integer; overload;');
  AddFunction(@TArray_Fit13, 'function TArray_Fit(var arr: TBooleanArray; const aSize: Integer): Integer; overload;');
  AddFunction(@TArray_Fit14, 'function TArray_Fit(var arr: TPointArray; const aSize: Integer): Integer; overload;');
  AddFunction(@TArray_Fit15, 'function TArray_Fit(var arr: TBoxArray; const aSize: Integer): Integer; overload;');
  AddFunction(@TArray_Fit16, 'function TArray_Fit(var arr: TRangeArray; const aSize: Integer): Integer; overload;');
  AddFunction(@TArray_Fit17, 'function TArray_Fit(var arr: TIntegerArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@TArray_Fit18, 'function TArray_Fit(var arr: TDoubleArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@TArray_Fit19, 'function TArray_Fit(var arr: TStringArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@TArray_Fit20, 'function TArray_Fit(var arr: TCharArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@TArray_Fit21, 'function TArray_Fit(var arr: TBooleanArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@TArray_Fit22, 'function TArray_Fit(var arr: TPointArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@TArray_Fit23, 'function TArray_Fit(var arr: TBoxArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@TArray_Fit24, 'function TArray_Fit(var arr: TRangeArray; const aBounds: TRange): Integer; overload;');
  
  AddFunction(@TArray_Fits1, 'function TArray_Fits(const arr: TIntegerArray; const maxValue: Integer): Boolean; overload;');
  AddFunction(@TArray_Fits2, 'function TArray_Fits(const arr: TDoubleArray; const maxValue: Integer): Boolean; overload;');
  AddFunction(@TArray_Fits3, 'function TArray_Fits(const arr: TStringArray; const maxValue: Integer): Boolean; overload;');
  AddFunction(@TArray_Fits4, 'function TArray_Fits(const arr: TCharArray; const maxValue: Integer): Boolean; overload;');
  AddFunction(@TArray_Fits5, 'function TArray_Fits(const arr: TBooleanArray; const maxValue: Integer): Boolean; overload;');
  AddFunction(@TArray_Fits6, 'function TArray_Fits(const arr: TPointArray; const maxValue: Integer): Boolean; overload;');
  AddFunction(@TArray_Fits7, 'function TArray_Fits(const arr: TBoxArray; const maxValue: Integer): Boolean; overload;');
  AddFunction(@TArray_Fits8, 'function TArray_Fits(const arr: TRangeArray; const maxValue: Integer): Boolean; overload;');
  AddFunction(@TArray_Fits9, 'function TArray_Fits(const arr: TIntegerArray; const target: TRange): Boolean; overload;');
  AddFunction(@TArray_Fits10, 'function TArray_Fits(const arr: TDoubleArray; const target: TRange): Boolean; overload;');
  AddFunction(@TArray_Fits11, 'function TArray_Fits(const arr: TStringArray; const target: TRange): Boolean; overload;');
  AddFunction(@TArray_Fits12, 'function TArray_Fits(const arr: TCharArray; const target: TRange): Boolean; overload;');
  AddFunction(@TArray_Fits13, 'function TArray_Fits(const arr: TBooleanArray; const target: TRange): Boolean; overload;');
  AddFunction(@TArray_Fits14, 'function TArray_Fits(const arr: TPointArray; const target: TRange): Boolean; overload;');
  AddFunction(@TArray_Fits15, 'function TArray_Fits(const arr: TBoxArray; const target: TRange): Boolean; overload;');
  AddFunction(@TArray_Fits16, 'function TArray_Fits(const arr: TRangeArray; const target: TRange): Boolean; overload;');

  AddFunction(@TArray_Flip1, 'function TArray_Flip(var arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Flip2, 'function TArray_Flip(var arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Flip3, 'function TArray_Flip(var arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Flip4, 'function TArray_Flip(var arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Flip5, 'function TArray_Flip(var arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Flip6, 'function TArray_Flip(var arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Flip7, 'function TArray_Flip(var arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Flip8, 'function TArray_Flip(var arr: TRangeArray): Boolean; overload;');
  
  AddFunction(@TArray_Free1, 'function TArray_Free(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Free2, 'function TArray_Free(var arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Free3, 'function TArray_Free(var arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Free4, 'function TArray_Free(var arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Free5, 'function TArray_Free(var arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Free6, 'function TArray_Free(var arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Free7, 'function TArray_Free(var arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Free8, 'function TArray_Free(var arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_FreeOf1, 'function TArray_FreeOf(const arr, forbidden: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_FreeOf2, 'function TArray_FreeOf(const arr, forbidden: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_FreeOf3, 'function TArray_FreeOf(const arr, forbidden: TStringArray): Boolean; overload;');
  AddFunction(@TArray_FreeOf4, 'function TArray_FreeOf(const arr, forbidden: TCharArray): Boolean; overload;');
  AddFunction(@TArray_FreeOf5, 'function TArray_FreeOf(const arr, forbidden: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_FreeOf6, 'function TArray_FreeOf(const arr, forbidden: TPointArray): Boolean; overload;');
  AddFunction(@TArray_FreeOf7, 'function TArray_FreeOf(const arr, forbidden: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_FreeOf8, 'function TArray_FreeOf(const arr, forbidden: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_FromLeft1, 'function TArray_FromLeft(const arr: TIntegerArray; const count: Integer; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_FromLeft2, 'function TArray_FromLeft(const arr: TDoubleArray; const count: Integer; const index: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_FromLeft3, 'function TArray_FromLeft(const arr: TStringArray; const count: Integer; const index: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_FromLeft4, 'function TArray_FromLeft(const arr: TCharArray; const count: Integer; const index: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_FromLeft5, 'function TArray_FromLeft(const arr: TBooleanArray; const count: Integer; const index: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_FromLeft6, 'function TArray_FromLeft(const arr: TPointArray; const count: Integer; const index: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_FromLeft7, 'function TArray_FromLeft(const arr: TBoxArray; const count: Integer; const index: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_FromLeft8, 'function TArray_FromLeft(const arr: TRangeArray; const count: Integer; const index: Integer = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_FromRight1, 'function TArray_FromRight(const arr: TIntegerArray; const count: Integer; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_FromRight2, 'function TArray_FromRight(const arr: TDoubleArray; const count: Integer; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_FromRight3, 'function TArray_FromRight(const arr: TStringArray; const count: Integer; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_FromRight4, 'function TArray_FromRight(const arr: TCharArray; const count: Integer; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_FromRight5, 'function TArray_FromRight(const arr: TBooleanArray; const count: Integer; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_FromRight6, 'function TArray_FromRight(const arr: TPointArray; const count: Integer; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_FromRight7, 'function TArray_FromRight(const arr: TBoxArray; const count: Integer; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_FromRight8, 'function TArray_FromRight(const arr: TRangeArray; const count: Integer; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_Get1, 'function TArray_Get(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Get2, 'function TArray_Get(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Get3, 'function TArray_Get(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Get4, 'function TArray_Get(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Get5, 'function TArray_Get(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Get6, 'function TArray_Get(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Get7, 'function TArray_Get(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Get8, 'function TArray_Get(const arr: TRangeArray): TRangeArray; overload;');
  AddFunction(@TArray_Get9, 'function TArray_Get(const arr: TIntegerArray; const ID: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Get10, 'function TArray_Get(const arr: TDoubleArray; const ID: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_Get11, 'function TArray_Get(const arr: TStringArray; const ID: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_Get12, 'function TArray_Get(const arr: TCharArray; const ID: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_Get13, 'function TArray_Get(const arr: TBooleanArray; const ID: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_Get14, 'function TArray_Get(const arr: TPointArray; const ID: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_Get15, 'function TArray_Get(const arr: TBoxArray; const ID: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_Get16, 'function TArray_Get(const arr: TRangeArray; const ID: TIntegerArray): TRangeArray; overload;');
  AddFunction(@TArray_Get17, 'function TArray_Get(const arr: TIntegerArray; const ID: TRange): TIntegerArray; overload;');
  AddFunction(@TArray_Get18, 'function TArray_Get(const arr: TDoubleArray; const ID: TRange): TDoubleArray; overload;');
  AddFunction(@TArray_Get19, 'function TArray_Get(const arr: TStringArray; const ID: TRange): TStringArray; overload;');
  AddFunction(@TArray_Get20, 'function TArray_Get(const arr: TCharArray; const ID: TRange): TCharArray; overload;');
  AddFunction(@TArray_Get21, 'function TArray_Get(const arr: TBooleanArray; const ID: TRange): TBooleanArray; overload;');
  AddFunction(@TArray_Get22, 'function TArray_Get(const arr: TPointArray; const ID: TRange): TPointArray; overload;');
  AddFunction(@TArray_Get23, 'function TArray_Get(const arr: TBoxArray; const ID: TRange): TBoxArray; overload;');
  AddFunction(@TArray_Get24, 'function TArray_Get(const arr: TRangeArray; const ID: TRange): TRangeArray; overload;');

  AddFunction(@TArray_Group1, 'function TArray_Group(const arr: TIntegerArray): T2DIntegerArray; overload;');
  AddFunction(@TArray_Group2, 'function TArray_Group(const arr: TDoubleArray): T2DDoubleArray; overload;');
  AddFunction(@TArray_Group3, 'function TArray_Group(const arr: TStringArray): T2DStringArray; overload;');
  AddFunction(@TArray_Group4, 'function TArray_Group(const arr: TCharArray): T2DCharArray; overload;');
  AddFunction(@TArray_Group5, 'function TArray_Group(const arr: TBooleanArray): T2DBooleanArray; overload;');
  AddFunction(@TArray_Group6, 'function TArray_Group(const arr: TPointArray): T2DPointArray; overload;');
  AddFunction(@TArray_Group7, 'function TArray_Group(const arr: TBoxArray): T2DBoxArray; overload;');
  AddFunction(@TArray_Group8, 'function TArray_Group(const arr: TRangeArray): T2DRangeArray; overload;');
  AddFunction(@TArray_Group9, 'function TArray_Group(const arr: TIntegerArray; const weight: TIntegerArray; const wSorted: Boolean = False): T2DIntegerArray; overload;');
  AddFunction(@TArray_Group10, 'function TArray_Group(const arr: TDoubleArray; const weight: TIntegerArray; const wSorted: Boolean = False): T2DDoubleArray; overload;');
  AddFunction(@TArray_Group11, 'function TArray_Group(const arr: TStringArray; const weight: TIntegerArray; const wSorted: Boolean = False): T2DStringArray; overload;');
  AddFunction(@TArray_Group12, 'function TArray_Group(const arr: TCharArray; const weight: TIntegerArray; const wSorted: Boolean = False): T2DCharArray; overload;');
  AddFunction(@TArray_Group13, 'function TArray_Group(const arr: TBooleanArray; const weight: TIntegerArray; const wSorted: Boolean = False): T2DBooleanArray; overload;');
  AddFunction(@TArray_Group14, 'function TArray_Group(const arr: TPointArray; const weight: TIntegerArray; const wSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TArray_Group15, 'function TArray_Group(const arr: TBoxArray; const weight: TIntegerArray; const wSorted: Boolean = False): T2DBoxArray; overload;');
  AddFunction(@TArray_Group16, 'function TArray_Group(const arr: TRangeArray; const weight: TIntegerArray; const wSorted: Boolean = False): T2DRangeArray; overload;');
  AddFunction(@TArray_Group17, 'function TArray_Group(const arr: TIntegerArray; const weight: TDoubleArray; const wSorted: Boolean = False): T2DIntegerArray; overload;');
  AddFunction(@TArray_Group18, 'function TArray_Group(const arr: TDoubleArray; const weight: TDoubleArray; const wSorted: Boolean = False): T2DDoubleArray; overload;');
  AddFunction(@TArray_Group19, 'function TArray_Group(const arr: TStringArray; const weight: TDoubleArray; const wSorted: Boolean = False): T2DStringArray; overload;');
  AddFunction(@TArray_Group20, 'function TArray_Group(const arr: TCharArray; const weight: TDoubleArray; const wSorted: Boolean = False): T2DCharArray; overload;');
  AddFunction(@TArray_Group21, 'function TArray_Group(const arr: TBooleanArray; const weight: TDoubleArray; const wSorted: Boolean = False): T2DBooleanArray; overload;');
  AddFunction(@TArray_Group22, 'function TArray_Group(const arr: TPointArray; const weight: TDoubleArray; const wSorted: Boolean = False): T2DPointArray; overload;');
  AddFunction(@TArray_Group23, 'function TArray_Group(const arr: TBoxArray; const weight: TDoubleArray; const wSorted: Boolean = False): T2DBoxArray; overload;');
  AddFunction(@TArray_Group24, 'function TArray_Group(const arr: TRangeArray; const weight: TDoubleArray; const wSorted: Boolean = False): T2DRangeArray; overload;');

  AddFunction(@TArray_Grow1, 'function TArray_Grow(const arr: TIntegerArray; const item: Integer; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Grow2, 'function TArray_Grow(const arr: TDoubleArray; const item: Double; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Grow3, 'function TArray_Grow(const arr: TStringArray; const item: string; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Grow4, 'function TArray_Grow(const arr: TCharArray; const item: Char; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Grow5, 'function TArray_Grow(const arr: TBooleanArray; const item: Boolean; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Grow6, 'function TArray_Grow(const arr: TPointArray; const item: TPoint; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Grow7, 'function TArray_Grow(const arr: TBoxArray; const item: TBox; const allowDuplicates: Boolean = False): Integer; overload;');
  AddFunction(@TArray_Grow8, 'function TArray_Grow(const arr: TRangeArray; const item: TRange; const allowDuplicates: Boolean = False): Integer; overload;');

  AddFunction(@TArray_Holds1, 'function TArray_Holds(const arr, chain: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Holds2, 'function TArray_Holds(const arr, chain: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Holds3, 'function TArray_Holds(const arr, chain: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Holds4, 'function TArray_Holds(const arr, chain: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Holds5, 'function TArray_Holds(const arr, chain: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Holds6, 'function TArray_Holds(const arr, chain: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Holds7, 'function TArray_Holds(const arr, chain: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Holds8, 'function TArray_Holds(const arr, chain: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Homogeneous1, 'function TArray_Homogeneous(const arr: TIntegerArray; const item: Integer): Boolean; overload;');
  AddFunction(@TArray_Homogeneous2, 'function TArray_Homogeneous(const arr: TDoubleArray; const item: Double): Boolean; overload;');
  AddFunction(@TArray_Homogeneous3, 'function TArray_Homogeneous(const arr: TStringArray; const item: string): Boolean; overload;');
  AddFunction(@TArray_Homogeneous4, 'function TArray_Homogeneous(const arr: TCharArray; const item: Char): Boolean; overload;');
  AddFunction(@TArray_Homogeneous5, 'function TArray_Homogeneous(const arr: TBooleanArray; const item: Boolean): Boolean; overload;');
  AddFunction(@TArray_Homogeneous6, 'function TArray_Homogeneous(const arr: TPointArray; const item: TPoint): Boolean; overload;');
  AddFunction(@TArray_Homogeneous7, 'function TArray_Homogeneous(const arr: TBoxArray; const item: TBox): Boolean; overload;');
  AddFunction(@TArray_Homogeneous8, 'function TArray_Homogeneous(const arr: TRangeArray; const item: TRange): Boolean; overload;');
  AddFunction(@TArray_Homogeneous9, 'function TArray_Homogeneous(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Homogeneous10, 'function TArray_Homogeneous(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Homogeneous11, 'function TArray_Homogeneous(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Homogeneous12, 'function TArray_Homogeneous(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Homogeneous13, 'function TArray_Homogeneous(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Homogeneous14, 'function TArray_Homogeneous(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Homogeneous15, 'function TArray_Homogeneous(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Homogeneous16, 'function TArray_Homogeneous(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_ID1, 'function TArray_ID(const arr: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_ID2, 'function TArray_ID(const arr: TDoubleArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_ID3, 'function TArray_ID(const arr: TStringArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_ID4, 'function TArray_ID(const arr: TCharArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_ID5, 'function TArray_ID(const arr: TBooleanArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_ID6, 'function TArray_ID(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_ID7, 'function TArray_ID(const arr: TBoxArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_ID8, 'function TArray_ID(const arr: TRangeArray; const aAscending: Boolean = True): TIntegerArray; overload;');

  AddFunction(@TArray_IDs1, 'function TArray_IDs(const arr: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_IDs2, 'function TArray_IDs(const arr: TDoubleArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_IDs3, 'function TArray_IDs(const arr: TStringArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_IDs4, 'function TArray_IDs(const arr: TCharArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_IDs5, 'function TArray_IDs(const arr: TBooleanArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_IDs6, 'function TArray_IDs(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_IDs7, 'function TArray_IDs(const arr: TBoxArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_IDs8, 'function TArray_IDs(const arr: TRangeArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_IDs9, 'function TArray_IDs(const arr: TIntegerArray; const ID: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_IDs10, 'function TArray_IDs(const arr: TDoubleArray; const ID: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_IDs11, 'function TArray_IDs(const arr: TStringArray; const ID: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_IDs12, 'function TArray_IDs(const arr: TCharArray; const ID: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_IDs13, 'function TArray_IDs(const arr: TBooleanArray; const ID: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_IDs14, 'function TArray_IDs(const arr: TPointArray; const ID: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_IDs15, 'function TArray_IDs(const arr: TBoxArray; const ID: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_IDs16, 'function TArray_IDs(const arr: TRangeArray; const ID: TIntegerArray): TRangeArray; overload;');
  AddFunction(@TArray_IDs17, 'function TArray_IDs(const arr: TIntegerArray; const ID: TIntegerArray; const item: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_IDs18, 'function TArray_IDs(const arr: TDoubleArray; const ID: TIntegerArray; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_IDs19, 'function TArray_IDs(const arr: TStringArray; const ID: TIntegerArray; const item: string): TStringArray; overload;');
  AddFunction(@TArray_IDs20, 'function TArray_IDs(const arr: TCharArray; const ID: TIntegerArray; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_IDs21, 'function TArray_IDs(const arr: TBooleanArray; const ID: TIntegerArray; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_IDs22, 'function TArray_IDs(const arr: TPointArray; const ID: TIntegerArray; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_IDs23, 'function TArray_IDs(const arr: TBoxArray; const ID: TIntegerArray; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_IDs24, 'function TArray_IDs(const arr: TRangeArray; const ID: TIntegerArray; const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_IDs25, 'function TArray_IDs(const arr: TIntegerArray; const ID: TIntegerArray; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_IDs26, 'function TArray_IDs(const arr: TDoubleArray; const ID: TIntegerArray; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_IDs27, 'function TArray_IDs(const arr: TStringArray; const ID: TIntegerArray; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_IDs28, 'function TArray_IDs(const arr: TCharArray; const ID: TIntegerArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_IDs29, 'function TArray_IDs(const arr: TBooleanArray; const ID: TIntegerArray; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_IDs30, 'function TArray_IDs(const arr: TPointArray; const ID: TIntegerArray; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_IDs31, 'function TArray_IDs(const arr: TBoxArray; const ID: TIntegerArray; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_IDs32, 'function TArray_IDs(const arr: TRangeArray; const ID: TIntegerArray; const items: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Includes1, 'function TArray_Includes(const arr: TIntegerArray; const item: Integer; const index: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes2, 'function TArray_Includes(const arr: TDoubleArray; const item: Double; const index: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes3, 'function TArray_Includes(const arr: TStringArray; const item: string; const index: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes4, 'function TArray_Includes(const arr: TCharArray; const item: Char; const index: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes5, 'function TArray_Includes(const arr: TBooleanArray; const item: Boolean; const index: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes6, 'function TArray_Includes(const arr: TPointArray; const item: TPoint; const index: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes7, 'function TArray_Includes(const arr: TBoxArray; const item: TBox; const index: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes8, 'function TArray_Includes(const arr: TRangeArray; const item: TRange; const index: Integer = 2147483647): Boolean; overload;');

  AddFunction(@TArray_Indexed1, 'function TArray_Indexed(const arr: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexed2, 'function TArray_Indexed(const arr: TDoubleArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexed3, 'function TArray_Indexed(const arr: TStringArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexed4, 'function TArray_Indexed(const arr: TCharArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexed5, 'function TArray_Indexed(const arr: TBooleanArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexed6, 'function TArray_Indexed(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexed7, 'function TArray_Indexed(const arr: TBoxArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexed8, 'function TArray_Indexed(const arr: TRangeArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  
  AddFunction(@TArray_Indexes1, 'function TArray_Indexes(const arr: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexes2, 'function TArray_Indexes(const arr: TDoubleArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexes3, 'function TArray_Indexes(const arr: TStringArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexes4, 'function TArray_Indexes(const arr: TCharArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexes5, 'function TArray_Indexes(const arr: TBooleanArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexes6, 'function TArray_Indexes(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexes7, 'function TArray_Indexes(const arr: TBoxArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indexes8, 'function TArray_Indexes(const arr: TRangeArray; const aAscending: Boolean = True): TIntegerArray; overload;');

  AddFunction(@TArray_Indices1, 'function TArray_Indices(const arr: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indices2, 'function TArray_Indices(const arr: TDoubleArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indices3, 'function TArray_Indices(const arr: TStringArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indices4, 'function TArray_Indices(const arr: TCharArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indices5, 'function TArray_Indices(const arr: TBooleanArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indices6, 'function TArray_Indices(const arr: TPointArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indices7, 'function TArray_Indices(const arr: TBoxArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Indices8, 'function TArray_Indices(const arr: TRangeArray; const aAscending: Boolean = True): TIntegerArray; overload;');  

  AddFunction(@TArray_Inject1, 'function TArray_Inject(var arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Inject2, 'function TArray_Inject(var arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Inject3, 'function TArray_Inject(var arr: TStringArray; const items: TStringArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Inject4, 'function TArray_Inject(var arr: TCharArray; const items: TCharArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Inject5, 'function TArray_Inject(var arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Inject6, 'function TArray_Inject(var arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Inject7, 'function TArray_Inject(var arr: TBoxArray; const items: TBoxArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Inject8, 'function TArray_Inject(var arr: TRangeArray; const items: TRangeArray; const index: Integer = 2147483647): Integer; overload;');

  AddFunction(@TArray_Keep1, 'function TArray_Keep(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Keep2, 'function TArray_Keep(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Keep3, 'function TArray_Keep(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Keep4, 'function TArray_Keep(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Keep5, 'function TArray_Keep(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Keep6, 'function TArray_Keep(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Keep7, 'function TArray_Keep(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Keep8, 'function TArray_Keep(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_Kill1, 'function TArray_Kill(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Kill2, 'function TArray_Kill(var arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Kill3, 'function TArray_Kill(var arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Kill4, 'function TArray_Kill(var arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Kill5, 'function TArray_Kill(var arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Kill6, 'function TArray_Kill(var arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Kill7, 'function TArray_Kill(var arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Kill8, 'function TArray_Kill(var arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Last1, 'function TArray_Last(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Last2, 'function TArray_Last(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Last3, 'function TArray_Last(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Last4, 'function TArray_Last(const arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Last5, 'function TArray_Last(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Last6, 'function TArray_Last(const arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Last7, 'function TArray_Last(const arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Last8, 'function TArray_Last(const arr: TRangeArray): Integer; overload;');
  AddFunction(@TArray_Last9, 'function TArray_Last(const arr: TIntegerArray; const item: Integer): Integer; overload;');
  AddFunction(@TArray_Last10, 'function TArray_Last(const arr: TDoubleArray; const item: Double): Integer; overload;');
  AddFunction(@TArray_Last11, 'function TArray_Last(const arr: TStringArray; const item: string): Integer; overload;');
  AddFunction(@TArray_Last12, 'function TArray_Last(const arr: TCharArray; const item: Char): Integer; overload;');
  AddFunction(@TArray_Last13, 'function TArray_Last(const arr: TBooleanArray; const item: Boolean): Integer; overload;');
  AddFunction(@TArray_Last14, 'function TArray_Last(const arr: TPointArray; const item: TPoint): Integer; overload;');
  AddFunction(@TArray_Last15, 'function TArray_Last(const arr: TBoxArray; const item: TBox): Integer; overload;');
  AddFunction(@TArray_Last16, 'function TArray_Last(const arr: TRangeArray; const item: TRange): Integer; overload;');
  AddFunction(@TArray_Last17, 'function TArray_Last(const arr: TIntegerArray; const items: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Last18, 'function TArray_Last(const arr: TDoubleArray; const items: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Last19, 'function TArray_Last(const arr: TStringArray; const items: TStringArray): Integer; overload;');
  AddFunction(@TArray_Last20, 'function TArray_Last(const arr: TCharArray; const items: TCharArray): Integer; overload;');
  AddFunction(@TArray_Last21, 'function TArray_Last(const arr: TBooleanArray; const items: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Last22, 'function TArray_Last(const arr: TPointArray; const items: TPointArray): Integer; overload;');
  AddFunction(@TArray_Last23, 'function TArray_Last(const arr: TBoxArray; const items: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Last24, 'function TArray_Last(const arr: TRangeArray; const items: TRangeArray): Integer; overload;');

  AddFunction(@TArray_LeastCommon1, 'function TArray_LeastCommon(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_LeastCommon2, 'function TArray_LeastCommon(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_LeastCommon3, 'function TArray_LeastCommon(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_LeastCommon4, 'function TArray_LeastCommon(const arr: TCharArray): Char; overload;');
  AddFunction(@TArray_LeastCommon5, 'function TArray_LeastCommon(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_LeastCommon6, 'function TArray_LeastCommon(const arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_LeastCommon7, 'function TArray_LeastCommon(const arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_LeastCommon8, 'function TArray_LeastCommon(const arr: TRangeArray): TRange; overload;');

  AddFunction(@TArray_LeastFrequent1, 'function TArray_LeastFrequent(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_LeastFrequent2, 'function TArray_LeastFrequent(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_LeastFrequent3, 'function TArray_LeastFrequent(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_LeastFrequent4, 'function TArray_LeastFrequent(const arr: TCharArray): Char; overload;');
  AddFunction(@TArray_LeastFrequent5, 'function TArray_LeastFrequent(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_LeastFrequent6, 'function TArray_LeastFrequent(const arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_LeastFrequent7, 'function TArray_LeastFrequent(const arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_LeastFrequent8, 'function TArray_LeastFrequent(const arr: TRangeArray): TRange; overload;');

  AddFunction(@TArray_Len1, 'function TArray_Len(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Len2, 'function TArray_Len(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Len3, 'function TArray_Len(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Len4, 'function TArray_Len(const arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Len5, 'function TArray_Len(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Len6, 'function TArray_Len(const arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Len7, 'function TArray_Len(const arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Len8, 'function TArray_Len(const arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Loc1, 'function TArray_Loc(const arr: TIntegerArray; const item: Integer; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc2, 'function TArray_Loc(const arr: TDoubleArray; const item: Double; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc3, 'function TArray_Loc(const arr: TStringArray; const item: string; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc4, 'function TArray_Loc(const arr: TCharArray; const item: Char; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc5, 'function TArray_Loc(const arr: TBooleanArray; const item: Boolean; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc6, 'function TArray_Loc(const arr: TPointArray; const item: TPoint; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc7, 'function TArray_Loc(const arr: TBoxArray; const item: TBox; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc8, 'function TArray_Loc(const arr: TRangeArray; const item: TRange; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc9, 'function TArray_Loc(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc10, 'function TArray_Loc(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc11, 'function TArray_Loc(const arr: TStringArray; const items: TStringArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc12, 'function TArray_Loc(const arr: TCharArray; const items: TCharArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc13, 'function TArray_Loc(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc14, 'function TArray_Loc(const arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc15, 'function TArray_Loc(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Loc16, 'function TArray_Loc(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 2147483647): Integer; overload;');

  AddFunction(@TArray_Location1, 'function TArray_Location(const arr: TIntegerArray; const item: Integer; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location2, 'function TArray_Location(const arr: TDoubleArray; const item: Double; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location3, 'function TArray_Location(const arr: TStringArray; const item: string; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location4, 'function TArray_Location(const arr: TCharArray; const item: Char; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location5, 'function TArray_Location(const arr: TBooleanArray; const item: Boolean; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location6, 'function TArray_Location(const arr: TPointArray; const item: TPoint; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location7, 'function TArray_Location(const arr: TBoxArray; const item: TBox; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location8, 'function TArray_Location(const arr: TRangeArray; const item: TRange; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location9, 'function TArray_Location(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location10, 'function TArray_Location(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location11, 'function TArray_Location(const arr: TStringArray; const items: TStringArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location12, 'function TArray_Location(const arr: TCharArray; const items: TCharArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location13, 'function TArray_Location(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location14, 'function TArray_Location(const arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location15, 'function TArray_Location(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 2147483647): Integer; overload;');
  AddFunction(@TArray_Location16, 'function TArray_Location(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 2147483647): Integer; overload;');

  AddFunction(@TArray_Locations1, 'function TArray_Locations(const arr: TIntegerArray; const item: Integer; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations2, 'function TArray_Locations(const arr: TDoubleArray; const item: Double; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations3, 'function TArray_Locations(const arr: TStringArray; const item: string; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations4, 'function TArray_Locations(const arr: TCharArray; const item: Char; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations5, 'function TArray_Locations(const arr: TBooleanArray; const item: Boolean; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations6, 'function TArray_Locations(const arr: TPointArray; const item: TPoint; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations7, 'function TArray_Locations(const arr: TBoxArray; const item: TBox; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations8, 'function TArray_Locations(const arr: TRangeArray; const item: TRange; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations9, 'function TArray_Locations(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations10, 'function TArray_Locations(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations11, 'function TArray_Locations(const arr: TStringArray; const items: TStringArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations12, 'function TArray_Locations(const arr: TCharArray; const items: TCharArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations13, 'function TArray_Locations(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations14, 'function TArray_Locations(const arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations15, 'function TArray_Locations(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations16, 'function TArray_Locations(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Locations17, 'function TArray_Locations(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Locations18, 'function TArray_Locations(const arr: TDoubleArray): TIntegerArray; overload;');
  AddFunction(@TArray_Locations19, 'function TArray_Locations(const arr: TStringArray): TIntegerArray; overload;');
  AddFunction(@TArray_Locations20, 'function TArray_Locations(const arr: TCharArray): TIntegerArray; overload;');
  AddFunction(@TArray_Locations21, 'function TArray_Locations(const arr: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TArray_Locations22, 'function TArray_Locations(const arr: TPointArray): TIntegerArray; overload;');
  AddFunction(@TArray_Locations23, 'function TArray_Locations(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TArray_Locations24, 'function TArray_Locations(const arr: TRangeArray): TIntegerArray; overload;');

  AddFunction(@TArray_MadeOf1, 'function TArray_MadeOf(const arr, allowed: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_MadeOf2, 'function TArray_MadeOf(const arr, allowed: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_MadeOf3, 'function TArray_MadeOf(const arr, allowed: TStringArray): Boolean; overload;');
  AddFunction(@TArray_MadeOf4, 'function TArray_MadeOf(const arr, allowed: TCharArray): Boolean; overload;');
  AddFunction(@TArray_MadeOf5, 'function TArray_MadeOf(const arr, allowed: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_MadeOf6, 'function TArray_MadeOf(const arr, allowed: TPointArray): Boolean; overload;');
  AddFunction(@TArray_MadeOf7, 'function TArray_MadeOf(const arr, allowed: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_MadeOf8, 'function TArray_MadeOf(const arr, allowed: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Mix1, 'function TArray_Mix(var arr: TIntegerArray; const mixings: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Mix2, 'function TArray_Mix(var arr: TDoubleArray; const mixings: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Mix3, 'function TArray_Mix(var arr: TStringArray; const mixings: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Mix4, 'function TArray_Mix(var arr: TCharArray; const mixings: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Mix5, 'function TArray_Mix(var arr: TBooleanArray; const mixings: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Mix6, 'function TArray_Mix(var arr: TPointArray; const mixings: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Mix7, 'function TArray_Mix(var arr: TBoxArray; const mixings: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Mix8, 'function TArray_Mix(var arr: TRangeArray; const mixings: Integer = 1): Boolean; overload;');
  
  AddFunction(@TArray_Mixed1, 'function TArray_Mixed(const arr: TIntegerArray; const mixings: Integer = 1): TIntegerArray; overload;');
  AddFunction(@TArray_Mixed2, 'function TArray_Mixed(const arr: TDoubleArray; const mixings: Integer = 1): TDoubleArray; overload;');
  AddFunction(@TArray_Mixed3, 'function TArray_Mixed(const arr: TStringArray; const mixings: Integer = 1): TStringArray; overload;');
  AddFunction(@TArray_Mixed4, 'function TArray_Mixed(const arr: TCharArray; const mixings: Integer = 1): TCharArray; overload;');
  AddFunction(@TArray_Mixed5, 'function TArray_Mixed(const arr: TBooleanArray; const mixings: Integer = 1): TBooleanArray; overload;');
  AddFunction(@TArray_Mixed6, 'function TArray_Mixed(const arr: TPointArray; const mixings: Integer = 1): TPointArray; overload;');
  AddFunction(@TArray_Mixed7, 'function TArray_Mixed(const arr: TBoxArray; const mixings: Integer = 1): TBoxArray; overload;');
  AddFunction(@TArray_Mixed8, 'function TArray_Mixed(const arr: TRangeArray; const mixings: Integer = 1): TRangeArray; overload;');

  AddFunction(@TArray_MostCommon1, 'function TArray_MostCommon(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_MostCommon2, 'function TArray_MostCommon(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_MostCommon3, 'function TArray_MostCommon(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_MostCommon4, 'function TArray_MostCommon(const arr: TCharArray): Char; overload;');
  AddFunction(@TArray_MostCommon5, 'function TArray_MostCommon(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_MostCommon6, 'function TArray_MostCommon(const arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_MostCommon7, 'function TArray_MostCommon(const arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_MostCommon8, 'function TArray_MostCommon(const arr: TRangeArray): TRange; overload;');

  AddFunction(@TArray_MostFrequent1, 'function TArray_MostFrequent(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_MostFrequent2, 'function TArray_MostFrequent(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_MostFrequent3, 'function TArray_MostFrequent(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_MostFrequent4, 'function TArray_MostFrequent(const arr: TCharArray): Char; overload;');
  AddFunction(@TArray_MostFrequent5, 'function TArray_MostFrequent(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_MostFrequent6, 'function TArray_MostFrequent(const arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_MostFrequent7, 'function TArray_MostFrequent(const arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_MostFrequent8, 'function TArray_MostFrequent(const arr: TRangeArray): TRange; overload;');

  AddFunction(@TArray_Multi1, 'function TArray_Multi(const arr: TIntegerArray; const threshold: Integer = 2): Boolean; overload;');
  AddFunction(@TArray_Multi2, 'function TArray_Multi(const arr: TDoubleArray; const threshold: Integer = 2): Boolean; overload;');
  AddFunction(@TArray_Multi3, 'function TArray_Multi(const arr: TStringArray; const threshold: Integer = 2): Boolean; overload;');
  AddFunction(@TArray_Multi4, 'function TArray_Multi(const arr: TCharArray; const threshold: Integer = 2): Boolean; overload;');
  AddFunction(@TArray_Multi5, 'function TArray_Multi(const arr: TBooleanArray; const threshold: Integer = 2): Boolean; overload;');
  AddFunction(@TArray_Multi6, 'function TArray_Multi(const arr: TPointArray; const threshold: Integer = 2): Boolean; overload;');
  AddFunction(@TArray_Multi7, 'function TArray_Multi(const arr: TBoxArray; const threshold: Integer = 2): Boolean; overload;');
  AddFunction(@TArray_Multi8, 'function TArray_Multi(const arr: TRangeArray; const threshold: Integer = 2): Boolean; overload;');
  AddFunction(@TArray_Multi9, 'function TArray_Multi(const arr: TIntegerArray; const threshold: TRange): Boolean; overload;');
  AddFunction(@TArray_Multi10, 'function TArray_Multi(const arr: TDoubleArray; const threshold: TRange): Boolean; overload;');
  AddFunction(@TArray_Multi11, 'function TArray_Multi(const arr: TStringArray; const threshold: TRange): Boolean; overload;');
  AddFunction(@TArray_Multi12, 'function TArray_Multi(const arr: TCharArray; const threshold: TRange): Boolean; overload;');
  AddFunction(@TArray_Multi13, 'function TArray_Multi(const arr: TBooleanArray; const threshold: TRange): Boolean; overload;');
  AddFunction(@TArray_Multi14, 'function TArray_Multi(const arr: TPointArray; const threshold: TRange): Boolean; overload;');
  AddFunction(@TArray_Multi15, 'function TArray_Multi(const arr: TBoxArray; const threshold: TRange): Boolean; overload;');
  AddFunction(@TArray_Multi16, 'function TArray_Multi(const arr: TRangeArray; const threshold: TRange): Boolean; overload;');

  AddFunction(@TArray_Next1, 'function TArray_Next(const arr: TIntegerArray; const index: Integer; const count: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Next2, 'function TArray_Next(const arr: TDoubleArray; const index: Integer; const count: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Next3, 'function TArray_Next(const arr: TStringArray; const index: Integer; const count: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Next4, 'function TArray_Next(const arr: TCharArray; const index: Integer; const count: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Next5, 'function TArray_Next(const arr: TBooleanArray; const index: Integer; const count: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Next6, 'function TArray_Next(const arr: TPointArray; const index: Integer; const count: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Next7, 'function TArray_Next(const arr: TBoxArray; const index: Integer; const count: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Next8, 'function TArray_Next(const arr: TRangeArray; const index: Integer; const count: Integer = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Occurs1, 'function TArray_Occurs(const arr: TIntegerArray; const Item: Integer; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Occurs2, 'function TArray_Occurs(const arr: TDoubleArray; const Item: Double; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Occurs3, 'function TArray_Occurs(const arr: TStringArray; const Item: string; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Occurs4, 'function TArray_Occurs(const arr: TCharArray; const Item: Char; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Occurs5, 'function TArray_Occurs(const arr: TBooleanArray; const Item: Boolean; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Occurs6, 'function TArray_Occurs(const arr: TPointArray; const Item: TPoint; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Occurs7, 'function TArray_Occurs(const arr: TBoxArray; const Item: TBox; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Occurs8, 'function TArray_Occurs(const arr: TRangeArray; const Item: TRange; const occurrence: Integer = 1): Boolean; overload;');

  AddFunction(@TArray_Overlay1, 'function TArray_Overlay(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer; const init: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Overlay2, 'function TArray_Overlay(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer; const init: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Overlay3, 'function TArray_Overlay(const arr: TStringArray; const items: TStringArray; const index: Integer; const init: string): TStringArray; overload;');
  AddFunction(@TArray_Overlay4, 'function TArray_Overlay(const arr: TCharArray; const items: TCharArray; const index: Integer; const init: Char): TCharArray; overload;');
  AddFunction(@TArray_Overlay5, 'function TArray_Overlay(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer; const init: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Overlay6, 'function TArray_Overlay(const arr: TPointArray; const items: TPointArray; const index: Integer; const init: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Overlay7, 'function TArray_Overlay(const arr: TBoxArray; const items: TBoxArray; const index: Integer; const init: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Overlay8, 'function TArray_Overlay(const arr: TRangeArray; const items: TRangeArray; const index: Integer; const init: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Overlay9, 'function TArray_Overlay(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Overlay10, 'function TArray_Overlay(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Overlay11, 'function TArray_Overlay(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Overlay12, 'function TArray_Overlay(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Overlay13, 'function TArray_Overlay(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Overlay14, 'function TArray_Overlay(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Overlay15, 'function TArray_Overlay(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Overlay16, 'function TArray_Overlay(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_Oversize1, 'function TArray_Oversize(const arr: TIntegerArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Oversize2, 'function TArray_Oversize(const arr: TDoubleArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Oversize3, 'function TArray_Oversize(const arr: TStringArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Oversize4, 'function TArray_Oversize(const arr: TCharArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Oversize5, 'function TArray_Oversize(const arr: TBooleanArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Oversize6, 'function TArray_Oversize(const arr: TPointArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Oversize7, 'function TArray_Oversize(const arr: TBoxArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Oversize8, 'function TArray_Oversize(const arr: TRangeArray; const limit: Integer): Boolean; overload;');

  AddFunction(@TArray_Partition1, 'function TArray_Partition(const arr: TIntegerArray; const pSize: Integer): T2DIntegerArray; overload;');
  AddFunction(@TArray_Partition2, 'function TArray_Partition(const arr: TDoubleArray; const pSize: Integer): T2DDoubleArray; overload;');
  AddFunction(@TArray_Partition3, 'function TArray_Partition(const arr: TStringArray; const pSize: Integer): T2DStringArray; overload;');
  AddFunction(@TArray_Partition4, 'function TArray_Partition(const arr: TCharArray; const pSize: Integer): T2DCharArray; overload;');
  AddFunction(@TArray_Partition5, 'function TArray_Partition(const arr: TBooleanArray; const pSize: Integer): T2DBooleanArray; overload;');
  AddFunction(@TArray_Partition6, 'function TArray_Partition(const arr: TPointArray; const pSize: Integer): T2DPointArray; overload;');
  AddFunction(@TArray_Partition7, 'function TArray_Partition(const arr: TBoxArray; const pSize: Integer): T2DBoxArray; overload;');
  AddFunction(@TArray_Partition8, 'function TArray_Partition(const arr: TRangeArray; const pSize: Integer): T2DRangeArray; overload;');
  
  AddFunction(@TArray_Patch1, 'function TArray_Patch(var arr: TIntegerArray; const index: Integer; const items: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Patch2, 'function TArray_Patch(var arr: TDoubleArray; const index: Integer; const items: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Patch3, 'function TArray_Patch(var arr: TStringArray; const index: Integer; const items: TStringArray): Integer; overload;');
  AddFunction(@TArray_Patch4, 'function TArray_Patch(var arr: TCharArray; const index: Integer; const items: TCharArray): Integer; overload;');
  AddFunction(@TArray_Patch5, 'function TArray_Patch(var arr: TBooleanArray; const index: Integer; const items: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Patch6, 'function TArray_Patch(var arr: TPointArray; const index: Integer; const items: TPointArray): Integer; overload;');
  AddFunction(@TArray_Patch7, 'function TArray_Patch(var arr: TBoxArray; const index: Integer; const items: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Patch8, 'function TArray_Patch(var arr: TRangeArray; const index: Integer; const items: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Pick1, 'function TArray_Pick(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Pick2, 'function TArray_Pick(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Pick3, 'function TArray_Pick(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): TStringArray; overload;');
  AddFunction(@TArray_Pick4, 'function TArray_Pick(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): TCharArray; overload;');
  AddFunction(@TArray_Pick5, 'function TArray_Pick(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Pick6, 'function TArray_Pick(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): TPointArray; overload;');
  AddFunction(@TArray_Pick7, 'function TArray_Pick(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): TBoxArray; overload;');
  AddFunction(@TArray_Pick8, 'function TArray_Pick(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_Plain1, 'function TArray_Plain(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Plain2, 'function TArray_Plain(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Plain3, 'function TArray_Plain(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Plain4, 'function TArray_Plain(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Plain5, 'function TArray_Plain(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Plain6, 'function TArray_Plain(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Plain7, 'function TArray_Plain(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Plain8, 'function TArray_Plain(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Pop1, 'function TArray_Pop(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Pop2, 'function TArray_Pop(var arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Pop3, 'function TArray_Pop(var arr: TStringArray): string; overload;');
  AddFunction(@TArray_Pop4, 'function TArray_Pop(var arr: TCharArray): Char; overload;');
  AddFunction(@TArray_Pop5, 'function TArray_Pop(var arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Pop6, 'function TArray_Pop(var arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_Pop7, 'function TArray_Pop(var arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_Pop8, 'function TArray_Pop(var arr: TRangeArray): TRange; overload;');
  AddFunction(@TArray_Pop9, 'function TArray_Pop(var arr: TIntegerArray; const null: Integer): Integer; overload;');
  AddFunction(@TArray_Pop10, 'function TArray_Pop(var arr: TDoubleArray; const null: Double): Double; overload;');
  AddFunction(@TArray_Pop11, 'function TArray_Pop(var arr: TStringArray; const null: string): string; overload;');
  AddFunction(@TArray_Pop12, 'function TArray_Pop(var arr: TCharArray; const null: Char): Char; overload;');
  AddFunction(@TArray_Pop13, 'function TArray_Pop(var arr: TBooleanArray; const null: Boolean): Boolean; overload;');
  AddFunction(@TArray_Pop14, 'function TArray_Pop(var arr: TPointArray; const null: TPoint): TPoint; overload;');
  AddFunction(@TArray_Pop15, 'function TArray_Pop(var arr: TBoxArray; const null: TBox): TBox; overload;');
  AddFunction(@TArray_Pop16, 'function TArray_Pop(var arr: TRangeArray; const null: TRange): TRange; overload;');

  AddFunction(@TArray_Populate1, 'function TArray_Populate(var arr: TIntegerArray; const items: TIntegerArray; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate2, 'function TArray_Populate(var arr: TDoubleArray; const items: TDoubleArray; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate3, 'function TArray_Populate(var arr: TStringArray; const items: TStringArray; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate4, 'function TArray_Populate(var arr: TCharArray; const items: TCharArray; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate5, 'function TArray_Populate(var arr: TBooleanArray; const items: TBooleanArray; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate6, 'function TArray_Populate(var arr: TPointArray; const items: TPointArray; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate7, 'function TArray_Populate(var arr: TBoxArray; const items: TBoxArray; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate8, 'function TArray_Populate(var arr: TRangeArray; const items: TRangeArray; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate9, 'function TArray_Populate(var arr: TIntegerArray; const item: Integer; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate10, 'function TArray_Populate(var arr: TDoubleArray; const item: Double; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate11, 'function TArray_Populate(var arr: TStringArray; const item: string; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate12, 'function TArray_Populate(var arr: TCharArray; const item: Char; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate13, 'function TArray_Populate(var arr: TBooleanArray; const item: Boolean; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate14, 'function TArray_Populate(var arr: TPointArray; const item: TPoint; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate15, 'function TArray_Populate(var arr: TBoxArray; const item: TBox; const times: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Populate16, 'function TArray_Populate(var arr: TRangeArray; const item: TRange; const times: Integer = 1): Boolean; overload;');

  AddFunction(@TArray_Populated1, 'function TArray_Populated(const arr: TIntegerArray; const population: TRange): Boolean; overload;');
  AddFunction(@TArray_Populated2, 'function TArray_Populated(const arr: TDoubleArray; const population: TRange): Boolean; overload;');
  AddFunction(@TArray_Populated3, 'function TArray_Populated(const arr: TStringArray; const population: TRange): Boolean; overload;');
  AddFunction(@TArray_Populated4, 'function TArray_Populated(const arr: TCharArray; const population: TRange): Boolean; overload;');
  AddFunction(@TArray_Populated5, 'function TArray_Populated(const arr: TBooleanArray; const population: TRange): Boolean; overload;');
  AddFunction(@TArray_Populated6, 'function TArray_Populated(const arr: TPointArray; const population: TRange): Boolean; overload;');
  AddFunction(@TArray_Populated7, 'function TArray_Populated(const arr: TBoxArray; const population: TRange): Boolean; overload;');
  AddFunction(@TArray_Populated8, 'function TArray_Populated(const arr: TRangeArray; const population: TRange): Boolean; overload;');
  AddFunction(@TArray_Populated9, 'function TArray_Populated(const arr: TIntegerArray; const populationMin: Integer = 1; const populationMax: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Populated10, 'function TArray_Populated(const arr: TDoubleArray; const populationMin: Integer = 1; const populationMax: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Populated11, 'function TArray_Populated(const arr: TStringArray; const populationMin: Integer = 1; const populationMax: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Populated12, 'function TArray_Populated(const arr: TCharArray; const populationMin: Integer = 1; const populationMax: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Populated13, 'function TArray_Populated(const arr: TBooleanArray; const populationMin: Integer = 1; const populationMax: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Populated14, 'function TArray_Populated(const arr: TPointArray; const populationMin: Integer = 1; const populationMax: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Populated15, 'function TArray_Populated(const arr: TBoxArray; const populationMin: Integer = 1; const populationMax: Integer = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Populated16, 'function TArray_Populated(const arr: TRangeArray; const populationMin: Integer = 1; const populationMax: Integer = 2147483647): Boolean; overload;');

  AddFunction(@TArray_Pos1, 'function TArray_Pos(const arr: TIntegerArray; const item: Integer; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos2, 'function TArray_Pos(const arr: TDoubleArray; const item: Double; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos3, 'function TArray_Pos(const arr: TStringArray; const item: string; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos4, 'function TArray_Pos(const arr: TCharArray; const item: Char; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos5, 'function TArray_Pos(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos6, 'function TArray_Pos(const arr: TPointArray; const item: TPoint; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos7, 'function TArray_Pos(const arr: TBoxArray; const item: TBox; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos8, 'function TArray_Pos(const arr: TRangeArray; const item: TRange; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos9, 'function TArray_Pos(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos10, 'function TArray_Pos(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos11, 'function TArray_Pos(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos12, 'function TArray_Pos(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos13, 'function TArray_Pos(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos14, 'function TArray_Pos(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos15, 'function TArray_Pos(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Pos16, 'function TArray_Pos(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): Integer; overload;');

  AddFunction(@TArray_Position1, 'function TArray_Position(const arr: TIntegerArray; const item: Integer; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position2, 'function TArray_Position(const arr: TDoubleArray; const item: Double; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position3, 'function TArray_Position(const arr: TStringArray; const item: string; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position4, 'function TArray_Position(const arr: TCharArray; const item: Char; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position5, 'function TArray_Position(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position6, 'function TArray_Position(const arr: TPointArray; const item: TPoint; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position7, 'function TArray_Position(const arr: TBoxArray; const item: TBox; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position8, 'function TArray_Position(const arr: TRangeArray; const item: TRange; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position9, 'function TArray_Position(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position10, 'function TArray_Position(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position11, 'function TArray_Position(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position12, 'function TArray_Position(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position13, 'function TArray_Position(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position14, 'function TArray_Position(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position15, 'function TArray_Position(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Position16, 'function TArray_Position(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): Integer; overload;');

  AddFunction(@TArray_Positions1, 'function TArray_Positions(const arr: TIntegerArray; const item: Integer; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions2, 'function TArray_Positions(const arr: TDoubleArray; const item: Double; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions3, 'function TArray_Positions(const arr: TStringArray; const item: string; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions4, 'function TArray_Positions(const arr: TCharArray; const item: Char; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions5, 'function TArray_Positions(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions6, 'function TArray_Positions(const arr: TPointArray; const item: TPoint; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions7, 'function TArray_Positions(const arr: TBoxArray; const item: TBox; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions8, 'function TArray_Positions(const arr: TRangeArray; const item: TRange; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions9, 'function TArray_Positions(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions10, 'function TArray_Positions(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions11, 'function TArray_Positions(const arr: TStringArray; const items: TStringArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions12, 'function TArray_Positions(const arr: TCharArray; const items: TCharArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions13, 'function TArray_Positions(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions14, 'function TArray_Positions(const arr: TPointArray; const items: TPointArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions15, 'function TArray_Positions(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions16, 'function TArray_Positions(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions17, 'function TArray_Positions(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Positions18, 'function TArray_Positions(const arr: TDoubleArray): TIntegerArray; overload;');
  AddFunction(@TArray_Positions19, 'function TArray_Positions(const arr: TStringArray): TIntegerArray; overload;');
  AddFunction(@TArray_Positions20, 'function TArray_Positions(const arr: TCharArray): TIntegerArray; overload;');
  AddFunction(@TArray_Positions21, 'function TArray_Positions(const arr: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TArray_Positions22, 'function TArray_Positions(const arr: TPointArray): TIntegerArray; overload;');
  AddFunction(@TArray_Positions23, 'function TArray_Positions(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TArray_Positions24, 'function TArray_Positions(const arr: TRangeArray): TIntegerArray; overload;');

  AddFunction(@TArray_Prepend1, 'function TArray_Prepend(var arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Prepend2, 'function TArray_Prepend(var arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Prepend3, 'function TArray_Prepend(var arr: TStringArray; const items: TStringArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Prepend4, 'function TArray_Prepend(var arr: TCharArray; const items: TCharArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Prepend5, 'function TArray_Prepend(var arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Prepend6, 'function TArray_Prepend(var arr: TPointArray; const items: TPointArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Prepend7, 'function TArray_Prepend(var arr: TBoxArray; const items: TBoxArray; const index: Integer = 0): Integer; overload;');
  AddFunction(@TArray_Prepend8, 'function TArray_Prepend(var arr: TRangeArray; const items: TRangeArray; const index: Integer = 0): Integer; overload;');

  AddFunction(@TArray_Presence1, 'function TArray_Presence(const arr: TIntegerArray; const Item: Integer; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Presence2, 'function TArray_Presence(const arr: TDoubleArray; const Item: Double; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Presence3, 'function TArray_Presence(const arr: TStringArray; const Item: string; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Presence4, 'function TArray_Presence(const arr: TCharArray; const Item: Char; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Presence5, 'function TArray_Presence(const arr: TBooleanArray; const Item: Boolean; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Presence6, 'function TArray_Presence(const arr: TPointArray; const Item: TPoint; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Presence7, 'function TArray_Presence(const arr: TBoxArray; const Item: TBox; const occurrence: Integer = 1): Boolean; overload;');
  AddFunction(@TArray_Presence8, 'function TArray_Presence(const arr: TRangeArray; const Item: TRange; const occurrence: Integer = 1): Boolean; overload;');

  AddFunction(@TArray_Previous1, 'function TArray_Previous(const arr: TIntegerArray; const index: Integer; const count: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Previous2, 'function TArray_Previous(const arr: TDoubleArray; const index: Integer; const count: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Previous3, 'function TArray_Previous(const arr: TStringArray; const index: Integer; const count: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Previous4, 'function TArray_Previous(const arr: TCharArray; const index: Integer; const count: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Previous5, 'function TArray_Previous(const arr: TBooleanArray; const index: Integer; const count: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Previous6, 'function TArray_Previous(const arr: TPointArray; const index: Integer; const count: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Previous7, 'function TArray_Previous(const arr: TBoxArray; const index: Integer; const count: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Previous8, 'function TArray_Previous(const arr: TRangeArray; const index: Integer; const count: Integer = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Prune1, 'function TArray_Prune(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Prune2, 'function TArray_Prune(var arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Prune3, 'function TArray_Prune(var arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Prune4, 'function TArray_Prune(var arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Prune5, 'function TArray_Prune(var arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Prune6, 'function TArray_Prune(var arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Prune7, 'function TArray_Prune(var arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Prune8, 'function TArray_Prune(var arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Pruned1, 'function TArray_Pruned(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Pruned2, 'function TArray_Pruned(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Pruned3, 'function TArray_Pruned(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Pruned4, 'function TArray_Pruned(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Pruned5, 'function TArray_Pruned(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Pruned6, 'function TArray_Pruned(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Pruned7, 'function TArray_Pruned(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Pruned8, 'function TArray_Pruned(const arr: TRangeArray): TRangeArray; overload;');
  AddFunction(@TArray_Pruned9, 'function TArray_Pruned(const arr: TIntegerArray; const threshold: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Pruned10, 'function TArray_Pruned(const arr: TDoubleArray; const threshold: Integer): TDoubleArray; overload;');
  AddFunction(@TArray_Pruned11, 'function TArray_Pruned(const arr: TStringArray; const threshold: Integer): TStringArray; overload;');
  AddFunction(@TArray_Pruned12, 'function TArray_Pruned(const arr: TCharArray; const threshold: Integer): TCharArray; overload;');
  AddFunction(@TArray_Pruned13, 'function TArray_Pruned(const arr: TBooleanArray; const threshold: Integer): TBooleanArray; overload;');
  AddFunction(@TArray_Pruned14, 'function TArray_Pruned(const arr: TPointArray; const threshold: Integer): TPointArray; overload;');
  AddFunction(@TArray_Pruned15, 'function TArray_Pruned(const arr: TBoxArray; const threshold: Integer): TBoxArray; overload;');
  AddFunction(@TArray_Pruned16, 'function TArray_Pruned(const arr: TRangeArray; const threshold: Integer): TRangeArray; overload;');

  AddFunction(@TArray_Pull1, 'function TArray_Pull(var arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Pull2, 'function TArray_Pull(var arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Pull3, 'function TArray_Pull(var arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Pull4, 'function TArray_Pull(var arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Pull5, 'function TArray_Pull(var arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Pull6, 'function TArray_Pull(var arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Pull7, 'function TArray_Pull(var arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Pull8, 'function TArray_Pull(var arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Purified1, 'function TArray_Purified(const arr: TIntegerArray; const dAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Purified2, 'function TArray_Purified(const arr: TDoubleArray; const dAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Purified3, 'function TArray_Purified(const arr: TStringArray; const dAscending: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Purified4, 'function TArray_Purified(const arr: TCharArray; const dAscending: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Purified5, 'function TArray_Purified(const arr: TBooleanArray; const dAscending: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Purified6, 'function TArray_Purified(const arr: TPointArray; const dAscending: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Purified7, 'function TArray_Purified(const arr: TBoxArray; const dAscending: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Purified8, 'function TArray_Purified(const arr: TRangeArray; const dAscending: Boolean = True): TRangeArray; overload;');
  
  AddFunction(@TArray_Purify1, 'function TArray_Purify(var arr: TIntegerArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Purify2, 'function TArray_Purify(var arr: TDoubleArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Purify3, 'function TArray_Purify(var arr: TStringArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Purify4, 'function TArray_Purify(var arr: TCharArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Purify5, 'function TArray_Purify(var arr: TBooleanArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Purify6, 'function TArray_Purify(var arr: TPointArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Purify7, 'function TArray_Purify(var arr: TBoxArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Purify8, 'function TArray_Purify(var arr: TRangeArray; const dAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_Put1, 'function TArray_Put(const arr: TIntegerArray; const ID: TIntegerArray; const item: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Put2, 'function TArray_Put(const arr: TDoubleArray; const ID: TIntegerArray; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Put3, 'function TArray_Put(const arr: TStringArray; const ID: TIntegerArray; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Put4, 'function TArray_Put(const arr: TCharArray; const ID: TIntegerArray; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Put5, 'function TArray_Put(const arr: TBooleanArray; const ID: TIntegerArray; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Put6, 'function TArray_Put(const arr: TPointArray; const ID: TIntegerArray; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Put7, 'function TArray_Put(const arr: TBoxArray; const ID: TIntegerArray; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Put8, 'function TArray_Put(const arr: TRangeArray; const ID: TIntegerArray; const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Put9, 'function TArray_Put(const arr: TIntegerArray; const ID: TIntegerArray; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Put10, 'function TArray_Put(const arr: TDoubleArray; const ID: TIntegerArray; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Put11, 'function TArray_Put(const arr: TStringArray; const ID: TIntegerArray; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Put12, 'function TArray_Put(const arr: TCharArray; const ID: TIntegerArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Put13, 'function TArray_Put(const arr: TBooleanArray; const ID: TIntegerArray; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Put14, 'function TArray_Put(const arr: TPointArray; const ID: TIntegerArray; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Put15, 'function TArray_Put(const arr: TBoxArray; const ID: TIntegerArray; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Put16, 'function TArray_Put(const arr: TRangeArray; const ID: TIntegerArray; const items: TRangeArray): TRangeArray; overload;');
  AddFunction(@TArray_Put17, 'function TArray_Put(const arr: TIntegerArray; const index: Integer; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Put18, 'function TArray_Put(const arr: TDoubleArray; const index: Integer; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Put19, 'function TArray_Put(const arr: TStringArray; const index: Integer; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Put20, 'function TArray_Put(const arr: TCharArray; const index: Integer; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Put21, 'function TArray_Put(const arr: TBooleanArray; const index: Integer; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Put22, 'function TArray_Put(const arr: TPointArray; const index: Integer; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Put23, 'function TArray_Put(const arr: TBoxArray; const index: Integer; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Put24, 'function TArray_Put(const arr: TRangeArray; const index: Integer; const items: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Push1, 'function TArray_Push(const arr: TIntegerArray; const item: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Push2, 'function TArray_Push(const arr: TDoubleArray; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Push3, 'function TArray_Push(const arr: TStringArray; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Push4, 'function TArray_Push(const arr: TCharArray; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Push5, 'function TArray_Push(const arr: TBooleanArray; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Push6, 'function TArray_Push(const arr: TPointArray; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Push7, 'function TArray_Push(const arr: TBoxArray; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Push8, 'function TArray_Push(const arr: TRangeArray; const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Push9, 'function TArray_Push(const arr: TIntegerArray; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Push10, 'function TArray_Push(const arr: TDoubleArray; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Push11, 'function TArray_Push(const arr: TStringArray; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Push12, 'function TArray_Push(const arr: TCharArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Push13, 'function TArray_Push(const arr: TBooleanArray; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Push14, 'function TArray_Push(const arr: TPointArray; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Push15, 'function TArray_Push(const arr: TBoxArray; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Push16, 'function TArray_Push(const arr: TRangeArray; const items: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Randomized1, 'function TArray_Randomized(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Randomized2, 'function TArray_Randomized(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Randomized3, 'function TArray_Randomized(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Randomized4, 'function TArray_Randomized(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Randomized5, 'function TArray_Randomized(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Randomized6, 'function TArray_Randomized(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Randomized7, 'function TArray_Randomized(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Randomized8, 'function TArray_Randomized(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Range1, 'function TArray_Range(const arr: TIntegerArray; const subArray: TIntegerArray; const index: Integer = 0): TRange; overload;');
  AddFunction(@TArray_Range2, 'function TArray_Range(const arr: TDoubleArray; const subArray: TDoubleArray; const index: Integer = 0): TRange; overload;');
  AddFunction(@TArray_Range3, 'function TArray_Range(const arr: TStringArray; const subArray: TStringArray; const index: Integer = 0): TRange; overload;');
  AddFunction(@TArray_Range4, 'function TArray_Range(const arr: TCharArray; const subArray: TCharArray; const index: Integer = 0): TRange; overload;');
  AddFunction(@TArray_Range5, 'function TArray_Range(const arr: TBooleanArray; const subArray: TBooleanArray; const index: Integer = 0): TRange; overload;');
  AddFunction(@TArray_Range6, 'function TArray_Range(const arr: TPointArray; const subArray: TPointArray; const index: Integer = 0): TRange; overload;');
  AddFunction(@TArray_Range7, 'function TArray_Range(const arr: TBoxArray; const subArray: TBoxArray; const index: Integer = 0): TRange; overload;');
  AddFunction(@TArray_Range8, 'function TArray_Range(const arr: TRangeArray; const subArray: TRangeArray; const index: Integer = 0): TRange; overload;');
  
  AddFunction(@TArray_Ranges1, 'function TArray_Ranges(const arr: TIntegerArray; const subArray: TIntegerArray; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Ranges2, 'function TArray_Ranges(const arr: TDoubleArray; const subArray: TDoubleArray; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Ranges3, 'function TArray_Ranges(const arr: TStringArray; const subArray: TStringArray; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Ranges4, 'function TArray_Ranges(const arr: TCharArray; const subArray: TCharArray; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Ranges5, 'function TArray_Ranges(const arr: TBooleanArray; const subArray: TBooleanArray; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Ranges6, 'function TArray_Ranges(const arr: TPointArray; const subArray: TPointArray; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Ranges7, 'function TArray_Ranges(const arr: TBoxArray; const subArray: TBoxArray; const index: Integer = 0): TRangeArray; overload;');
  AddFunction(@TArray_Ranges8, 'function TArray_Ranges(const arr: TRangeArray; const subArray: TRangeArray; const index: Integer = 0): TRangeArray; overload;');

  AddFunction(@TArray_Recreate1, 'function TArray_Recreate(var arr: TIntegerArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@TArray_Recreate2, 'function TArray_Recreate(var arr: TDoubleArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@TArray_Recreate3, 'function TArray_Recreate(var arr: TStringArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@TArray_Recreate4, 'function TArray_Recreate(var arr: TCharArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@TArray_Recreate5, 'function TArray_Recreate(var arr: TBooleanArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@TArray_Recreate6, 'function TArray_Recreate(var arr: TPointArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@TArray_Recreate7, 'function TArray_Recreate(var arr: TBoxArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@TArray_Recreate8, 'function TArray_Recreate(var arr: TRangeArray; const arrSize: Integer): Boolean; overload;');

  AddFunction(@TArray_Reject1, 'function TArray_Reject(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Reject2, 'function TArray_Reject(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Reject3, 'function TArray_Reject(const arr: TStringArray; const items: TStringArray; const index: Integer = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Reject4, 'function TArray_Reject(const arr: TCharArray; const items: TCharArray; const index: Integer = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Reject5, 'function TArray_Reject(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Reject6, 'function TArray_Reject(const arr: TPointArray; const items: TPointArray; const index: Integer = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Reject7, 'function TArray_Reject(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Reject8, 'function TArray_Reject(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Remove1, 'function TArray_Remove(const arr: TIntegerArray; const item: Integer; const index: Integer = 0; const all: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Remove2, 'function TArray_Remove(const arr: TDoubleArray; const item: Double; const index: Integer = 0; const all: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Remove3, 'function TArray_Remove(const arr: TStringArray; const item: string; const index: Integer = 0; const all: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Remove4, 'function TArray_Remove(const arr: TCharArray; const item: Char; const index: Integer = 0; const all: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Remove5, 'function TArray_Remove(const arr: TBooleanArray; const item: Boolean; const index: Integer = 0; const all: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Remove6, 'function TArray_Remove(const arr: TPointArray; const item: TPoint; const index: Integer = 0; const all: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Remove7, 'function TArray_Remove(const arr: TBoxArray; const item: TBox; const index: Integer = 0; const all: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Remove8, 'function TArray_Remove(const arr: TRangeArray; const item: TRange; const index: Integer = 0; const all: Boolean = True): TRangeArray; overload;');
  AddFunction(@TArray_Remove9, 'function TArray_Remove(const arr: TIntegerArray; const item: Integer; const all: Boolean): TIntegerArray; overload;');
  AddFunction(@TArray_Remove10, 'function TArray_Remove(const arr: TDoubleArray; const item: Double; const all: Boolean): TDoubleArray; overload;');
  AddFunction(@TArray_Remove11, 'function TArray_Remove(const arr: TStringArray; const item: string; const all: Boolean): TStringArray; overload;');
  AddFunction(@TArray_Remove12, 'function TArray_Remove(const arr: TCharArray; const item: Char; const all: Boolean): TCharArray; overload;');
  AddFunction(@TArray_Remove13, 'function TArray_Remove(const arr: TBooleanArray; const item: Boolean; const all: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Remove14, 'function TArray_Remove(const arr: TPointArray; const item: TPoint; const all: Boolean): TPointArray; overload;');
  AddFunction(@TArray_Remove15, 'function TArray_Remove(const arr: TBoxArray; const item: TBox; const all: Boolean): TBoxArray; overload;');
  AddFunction(@TArray_Remove16, 'function TArray_Remove(const arr: TRangeArray; const item: TRange; const all: Boolean): TRangeArray; overload;');
  AddFunction(@TArray_Remove17, 'function TArray_Remove(const arr: TIntegerArray; const items: TIntegerArray; const index: Integer = 0; const all: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Remove18, 'function TArray_Remove(const arr: TDoubleArray; const items: TDoubleArray; const index: Integer = 0; const all: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Remove19, 'function TArray_Remove(const arr: TStringArray; const items: TStringArray; const index: Integer = 0; const all: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Remove20, 'function TArray_Remove(const arr: TCharArray; const items: TCharArray; const index: Integer = 0; const all: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Remove21, 'function TArray_Remove(const arr: TBooleanArray; const items: TBooleanArray; const index: Integer = 0; const all: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Remove22, 'function TArray_Remove(const arr: TPointArray; const items: TPointArray; const index: Integer = 0; const all: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Remove23, 'function TArray_Remove(const arr: TBoxArray; const items: TBoxArray; const index: Integer = 0; const all: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Remove24, 'function TArray_Remove(const arr: TRangeArray; const items: TRangeArray; const index: Integer = 0; const all: Boolean = True): TRangeArray; overload;');
  AddFunction(@TArray_Remove25, 'function TArray_Remove(const arr: TIntegerArray; const items: TIntegerArray; const all: Boolean): TIntegerArray; overload;');
  AddFunction(@TArray_Remove26, 'function TArray_Remove(const arr: TDoubleArray; const items: TDoubleArray; const all: Boolean): TDoubleArray; overload;');
  AddFunction(@TArray_Remove27, 'function TArray_Remove(const arr: TStringArray; const items: TStringArray; const all: Boolean): TStringArray; overload;');
  AddFunction(@TArray_Remove28, 'function TArray_Remove(const arr: TCharArray; const items: TCharArray; const all: Boolean): TCharArray; overload;');
  AddFunction(@TArray_Remove29, 'function TArray_Remove(const arr: TBooleanArray; const items: TBooleanArray; const all: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Remove30, 'function TArray_Remove(const arr: TPointArray; const items: TPointArray; const all: Boolean): TPointArray; overload;');
  AddFunction(@TArray_Remove31, 'function TArray_Remove(const arr: TBoxArray; const items: TBoxArray; const all: Boolean): TBoxArray; overload;');
  AddFunction(@TArray_Remove32, 'function TArray_Remove(const arr: TRangeArray; const items: TRangeArray; const all: Boolean): TRangeArray; overload;');

  AddFunction(@TArray_Reposition1, 'function TArray_Reposition(var arr: TIntegerArray; oldIndex, newIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Reposition2, 'function TArray_Reposition(var arr: TDoubleArray; oldIndex, newIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Reposition3, 'function TArray_Reposition(var arr: TStringArray; oldIndex, newIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Reposition4, 'function TArray_Reposition(var arr: TCharArray; oldIndex, newIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Reposition5, 'function TArray_Reposition(var arr: TBooleanArray; oldIndex, newIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Reposition6, 'function TArray_Reposition(var arr: TPointArray; oldIndex, newIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Reposition7, 'function TArray_Reposition(var arr: TBoxArray; oldIndex, newIndex: Integer): Boolean; overload;');
  AddFunction(@TArray_Reposition8, 'function TArray_Reposition(var arr: TRangeArray; oldIndex, newIndex: Integer): Boolean; overload;');

  AddFunction(@TArray_Reset1, 'function TArray_Reset(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Reset2, 'function TArray_Reset(var arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Reset3, 'function TArray_Reset(var arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Reset4, 'function TArray_Reset(var arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Reset5, 'function TArray_Reset(var arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Reset6, 'function TArray_Reset(var arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Reset7, 'function TArray_Reset(var arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Reset8, 'function TArray_Reset(var arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Resize1, 'function TArray_Resize(var arr: TIntegerArray; const aChange: Integer): Integer; overload;');
  AddFunction(@TArray_Resize2, 'function TArray_Resize(var arr: TDoubleArray; const aChange: Integer): Integer; overload;');
  AddFunction(@TArray_Resize3, 'function TArray_Resize(var arr: TStringArray; const aChange: Integer): Integer; overload;');
  AddFunction(@TArray_Resize4, 'function TArray_Resize(var arr: TCharArray; const aChange: Integer): Integer; overload;');
  AddFunction(@TArray_Resize5, 'function TArray_Resize(var arr: TBooleanArray; const aChange: Integer): Integer; overload;');
  AddFunction(@TArray_Resize6, 'function TArray_Resize(var arr: TPointArray; const aChange: Integer): Integer; overload;');
  AddFunction(@TArray_Resize7, 'function TArray_Resize(var arr: TBoxArray; const aChange: Integer): Integer; overload;');
  AddFunction(@TArray_Resize8, 'function TArray_Resize(var arr: TRangeArray; const aChange: Integer): Integer; overload;');
  AddFunction(@TArray_Resize9, 'function TArray_Resize(var arr: TIntegerArray; const aChange: Integer; const null: Integer): Integer; overload;');
  AddFunction(@TArray_Resize10, 'function TArray_Resize(var arr: TDoubleArray; const aChange: Integer; const null: Double): Integer; overload;');
  AddFunction(@TArray_Resize11, 'function TArray_Resize(var arr: TStringArray; const aChange: Integer; const null: string): Integer; overload;');
  AddFunction(@TArray_Resize12, 'function TArray_Resize(var arr: TCharArray; const aChange: Integer; const null: Char): Integer; overload;');
  AddFunction(@TArray_Resize13, 'function TArray_Resize(var arr: TBooleanArray; const aChange: Integer; const null: Boolean): Integer; overload;');
  AddFunction(@TArray_Resize14, 'function TArray_Resize(var arr: TPointArray; const aChange: Integer; const null: TPoint): Integer; overload;');
  AddFunction(@TArray_Resize15, 'function TArray_Resize(var arr: TBoxArray; const aChange: Integer; const null: TBox): Integer; overload;');
  AddFunction(@TArray_Resize16, 'function TArray_Resize(var arr: TRangeArray; const aChange: Integer; const null: TRange): Integer; overload;');

  AddFunction(@TArray_Reversal1, 'function TArray_Reversal(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Reversal2, 'function TArray_Reversal(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Reversal3, 'function TArray_Reversal(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Reversal4, 'function TArray_Reversal(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Reversal5, 'function TArray_Reversal(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Reversal6, 'function TArray_Reversal(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Reversal7, 'function TArray_Reversal(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Reversal8, 'function TArray_Reversal(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Reverse1, 'function TArray_Reverse(var arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Reverse2, 'function TArray_Reverse(var arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Reverse3, 'function TArray_Reverse(var arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Reverse4, 'function TArray_Reverse(var arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Reverse5, 'function TArray_Reverse(var arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Reverse6, 'function TArray_Reverse(var arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Reverse7, 'function TArray_Reverse(var arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Reverse8, 'function TArray_Reverse(var arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Reversed1, 'function TArray_Reversed(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Reversed2, 'function TArray_Reversed(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Reversed3, 'function TArray_Reversed(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Reversed4, 'function TArray_Reversed(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Reversed5, 'function TArray_Reversed(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Reversed6, 'function TArray_Reversed(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Reversed7, 'function TArray_Reversed(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Reversed8, 'function TArray_Reversed(const arr: TRangeArray): TRangeArray; overload;');
  
  AddFunction(@TArray_Reversion1, 'function TArray_Reversion(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Reversion2, 'function TArray_Reversion(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Reversion3, 'function TArray_Reversion(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Reversion4, 'function TArray_Reversion(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Reversion5, 'function TArray_Reversion(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Reversion6, 'function TArray_Reversion(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Reversion7, 'function TArray_Reversion(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Reversion8, 'function TArray_Reversion(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Sample1, 'function TArray_Sample(const arr: TIntegerArray; const sSize: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Sample2, 'function TArray_Sample(const arr: TDoubleArray; const sSize: Integer): TDoubleArray; overload;');
  AddFunction(@TArray_Sample3, 'function TArray_Sample(const arr: TStringArray; const sSize: Integer): TStringArray; overload;');
  AddFunction(@TArray_Sample4, 'function TArray_Sample(const arr: TCharArray; const sSize: Integer): TCharArray; overload;');
  AddFunction(@TArray_Sample5, 'function TArray_Sample(const arr: TBooleanArray; const sSize: Integer): TBooleanArray; overload;');
  AddFunction(@TArray_Sample6, 'function TArray_Sample(const arr: TPointArray; const sSize: Integer): TPointArray; overload;');
  AddFunction(@TArray_Sample7, 'function TArray_Sample(const arr: TBoxArray; const sSize: Integer): TBoxArray; overload;');
  AddFunction(@TArray_Sample8, 'function TArray_Sample(const arr: TRangeArray; const sSize: Integer): TRangeArray; overload;');

  AddFunction(@TArray_Scan1, 'function TArray_Scan(const arr: TIntegerArray; const ID: TRange; const item: Integer; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan2, 'function TArray_Scan(const arr: TDoubleArray; const ID: TRange; const item: Double; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan3, 'function TArray_Scan(const arr: TStringArray; const ID: TRange; const item: string; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan4, 'function TArray_Scan(const arr: TCharArray; const ID: TRange; const item: Char; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan5, 'function TArray_Scan(const arr: TBooleanArray; const ID: TRange; const item: Boolean; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan6, 'function TArray_Scan(const arr: TPointArray; const ID: TRange; const item: TPoint; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan7, 'function TArray_Scan(const arr: TBoxArray; const ID: TRange; const item: TBox; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan8, 'function TArray_Scan(const arr: TRangeArray; const ID: TRange; const item: TRange; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan9, 'function TArray_Scan(const arr: TIntegerArray; const ID: TIntegerArray; const item: Integer; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan10, 'function TArray_Scan(const arr: TDoubleArray; const ID: TIntegerArray; const item: Double; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan11, 'function TArray_Scan(const arr: TStringArray; const ID: TIntegerArray; const item: string; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan12, 'function TArray_Scan(const arr: TCharArray; const ID: TIntegerArray; const item: Char; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan13, 'function TArray_Scan(const arr: TBooleanArray; const ID: TIntegerArray; const item: Boolean; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan14, 'function TArray_Scan(const arr: TPointArray; const ID: TIntegerArray; const item: TPoint; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan15, 'function TArray_Scan(const arr: TBoxArray; const ID: TIntegerArray; const item: TBox; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan16, 'function TArray_Scan(const arr: TRangeArray; const ID: TIntegerArray; const item: TRange; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan17, 'function TArray_Scan(const arr: TIntegerArray; const ID: TRange; const items: TIntegerArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan18, 'function TArray_Scan(const arr: TDoubleArray; const ID: TRange; const items: TDoubleArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan19, 'function TArray_Scan(const arr: TStringArray; const ID: TRange; const items: TStringArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan20, 'function TArray_Scan(const arr: TCharArray; const ID: TRange; const items: TCharArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan21, 'function TArray_Scan(const arr: TBooleanArray; const ID: TRange; const items: TBooleanArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan22, 'function TArray_Scan(const arr: TPointArray; const ID: TRange; const items: TPointArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan23, 'function TArray_Scan(const arr: TBoxArray; const ID: TRange; const items: TBoxArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan24, 'function TArray_Scan(const arr: TRangeArray; const ID: TRange; const items: TRangeArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan25, 'function TArray_Scan(const arr: TIntegerArray; const ID: TIntegerArray; const items: TIntegerArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan26, 'function TArray_Scan(const arr: TDoubleArray; const ID: TIntegerArray; const items: TDoubleArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan27, 'function TArray_Scan(const arr: TStringArray; const ID: TIntegerArray; const items: TStringArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan28, 'function TArray_Scan(const arr: TCharArray; const ID: TIntegerArray; const items: TCharArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan29, 'function TArray_Scan(const arr: TBooleanArray; const ID: TIntegerArray; const items: TBooleanArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan30, 'function TArray_Scan(const arr: TPointArray; const ID: TIntegerArray; const items: TPointArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan31, 'function TArray_Scan(const arr: TBoxArray; const ID: TIntegerArray; const items: TBoxArray; const limit: Integer = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Scan32, 'function TArray_Scan(const arr: TRangeArray; const ID: TIntegerArray; const items: TRangeArray; const limit: Integer = 2147483647): TIntegerArray; overload;');

  AddFunction(@TArray_Scramble1, 'function TArray_Scramble(const arr: TIntegerArray; const Swaps: Integer = -1): TIntegerArray; overload;');
  AddFunction(@TArray_Scramble2, 'function TArray_Scramble(const arr: TDoubleArray; const Swaps: Integer = -1): TDoubleArray; overload;');
  AddFunction(@TArray_Scramble3, 'function TArray_Scramble(const arr: TStringArray; const Swaps: Integer = -1): TStringArray; overload;');
  AddFunction(@TArray_Scramble4, 'function TArray_Scramble(const arr: TCharArray; const Swaps: Integer = -1): TCharArray; overload;');
  AddFunction(@TArray_Scramble5, 'function TArray_Scramble(const arr: TBooleanArray; const Swaps: Integer = -1): TBooleanArray; overload;');
  AddFunction(@TArray_Scramble6, 'function TArray_Scramble(const arr: TPointArray; const Swaps: Integer = -1): TPointArray; overload;');
  AddFunction(@TArray_Scramble7, 'function TArray_Scramble(const arr: TBoxArray; const Swaps: Integer = -1): TBoxArray; overload;');
  AddFunction(@TArray_Scramble8, 'function TArray_Scramble(const arr: TRangeArray; const Swaps: Integer = -1): TRangeArray; overload;');

  AddFunction(@TArray_Shake1, 'function TArray_Shake(const arr: TIntegerArray; const shakes: Integer = 1): TIntegerArray; overload;');
  AddFunction(@TArray_Shake2, 'function TArray_Shake(const arr: TDoubleArray; const shakes: Integer = 1): TDoubleArray; overload;');
  AddFunction(@TArray_Shake3, 'function TArray_Shake(const arr: TStringArray; const shakes: Integer = 1): TStringArray; overload;');
  AddFunction(@TArray_Shake4, 'function TArray_Shake(const arr: TCharArray; const shakes: Integer = 1): TCharArray; overload;');
  AddFunction(@TArray_Shake5, 'function TArray_Shake(const arr: TBooleanArray; const shakes: Integer = 1): TBooleanArray; overload;');
  AddFunction(@TArray_Shake6, 'function TArray_Shake(const arr: TPointArray; const shakes: Integer = 1): TPointArray; overload;');
  AddFunction(@TArray_Shake7, 'function TArray_Shake(const arr: TBoxArray; const shakes: Integer = 1): TBoxArray; overload;');
  AddFunction(@TArray_Shake8, 'function TArray_Shake(const arr: TRangeArray; const shakes: Integer = 1): TRangeArray; overload;');

  AddFunction(@TArray_Shift1, 'function TArray_Shift(var arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Shift2, 'function TArray_Shift(var arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Shift3, 'function TArray_Shift(var arr: TStringArray): string; overload;');
  AddFunction(@TArray_Shift4, 'function TArray_Shift(var arr: TCharArray): Char; overload;');
  AddFunction(@TArray_Shift5, 'function TArray_Shift(var arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Shift6, 'function TArray_Shift(var arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_Shift7, 'function TArray_Shift(var arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_Shift8, 'function TArray_Shift(var arr: TRangeArray): TRange; overload;');
  AddFunction(@TArray_Shift9, 'function TArray_Shift(var arr: TIntegerArray; const sCount: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Shift10, 'function TArray_Shift(var arr: TDoubleArray; const sCount: Integer): TDoubleArray; overload;');
  AddFunction(@TArray_Shift11, 'function TArray_Shift(var arr: TStringArray; const sCount: Integer): TStringArray; overload;');
  AddFunction(@TArray_Shift12, 'function TArray_Shift(var arr: TCharArray; const sCount: Integer): TCharArray; overload;');
  AddFunction(@TArray_Shift13, 'function TArray_Shift(var arr: TBooleanArray; const sCount: Integer): TBooleanArray; overload;');
  AddFunction(@TArray_Shift14, 'function TArray_Shift(var arr: TPointArray; const sCount: Integer): TPointArray; overload;');
  AddFunction(@TArray_Shift15, 'function TArray_Shift(var arr: TBoxArray; const sCount: Integer): TBoxArray; overload;');
  AddFunction(@TArray_Shift16, 'function TArray_Shift(var arr: TRangeArray; const sCount: Integer): TRangeArray; overload;');
  
  AddFunction(@TArray_Shuffle1, 'function TArray_Shuffle(const arr: TIntegerArray; const shuffles: Integer = 1): TIntegerArray; overload;');
  AddFunction(@TArray_Shuffle2, 'function TArray_Shuffle(const arr: TDoubleArray; const shuffles: Integer = 1): TDoubleArray; overload;');
  AddFunction(@TArray_Shuffle3, 'function TArray_Shuffle(const arr: TStringArray; const shuffles: Integer = 1): TStringArray; overload;');
  AddFunction(@TArray_Shuffle4, 'function TArray_Shuffle(const arr: TCharArray; const shuffles: Integer = 1): TCharArray; overload;');
  AddFunction(@TArray_Shuffle5, 'function TArray_Shuffle(const arr: TBooleanArray; const shuffles: Integer = 1): TBooleanArray; overload;');
  AddFunction(@TArray_Shuffle6, 'function TArray_Shuffle(const arr: TPointArray; const shuffles: Integer = 1): TPointArray; overload;');
  AddFunction(@TArray_Shuffle7, 'function TArray_Shuffle(const arr: TBoxArray; const shuffles: Integer = 1): TBoxArray; overload;');
  AddFunction(@TArray_Shuffle8, 'function TArray_Shuffle(const arr: TRangeArray; const shuffles: Integer = 1): TRangeArray; overload;');

  AddFunction(@TArray_Singular1, 'function TArray_Singular(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Singular2, 'function TArray_Singular(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Singular3, 'function TArray_Singular(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Singular4, 'function TArray_Singular(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Singular5, 'function TArray_Singular(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Singular6, 'function TArray_Singular(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Singular7, 'function TArray_Singular(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Singular8, 'function TArray_Singular(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Size1, 'function TArray_Size(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Size2, 'function TArray_Size(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Size3, 'function TArray_Size(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Size4, 'function TArray_Size(const arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Size5, 'function TArray_Size(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Size6, 'function TArray_Size(const arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Size7, 'function TArray_Size(const arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Size8, 'function TArray_Size(const arr: TRangeArray): Integer; overload;');
  AddFunction(@TArray_Size9, 'function TArray_Size(const arr: TIntegerArray; const aSize: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Size10, 'function TArray_Size(const arr: TDoubleArray; const aSize: Integer): TDoubleArray; overload;');
  AddFunction(@TArray_Size11, 'function TArray_Size(const arr: TStringArray; const aSize: Integer): TStringArray; overload;');
  AddFunction(@TArray_Size12, 'function TArray_Size(const arr: TCharArray; const aSize: Integer): TCharArray; overload;');
  AddFunction(@TArray_Size13, 'function TArray_Size(const arr: TBooleanArray; const aSize: Integer): TBooleanArray; overload;');
  AddFunction(@TArray_Size14, 'function TArray_Size(const arr: TPointArray; const aSize: Integer): TPointArray; overload;');
  AddFunction(@TArray_Size15, 'function TArray_Size(const arr: TBoxArray; const aSize: Integer): TBoxArray; overload;');
  AddFunction(@TArray_Size16, 'function TArray_Size(const arr: TRangeArray; const aSize: Integer): TRangeArray; overload;');
  AddFunction(@TArray_Size17, 'function TArray_Size(const arr: TIntegerArray; const aSize: Integer; const null: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Size18, 'function TArray_Size(const arr: TDoubleArray; const aSize: Integer; const null: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Size19, 'function TArray_Size(const arr: TStringArray; const aSize: Integer; const null: string): TStringArray; overload;');
  AddFunction(@TArray_Size20, 'function TArray_Size(const arr: TCharArray; const aSize: Integer; const null: Char): TCharArray; overload;');
  AddFunction(@TArray_Size21, 'function TArray_Size(const arr: TBooleanArray; const aSize: Integer; const null: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Size22, 'function TArray_Size(const arr: TPointArray; const aSize: Integer; const null: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Size23, 'function TArray_Size(const arr: TBoxArray; const aSize: Integer; const null: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Size24, 'function TArray_Size(const arr: TRangeArray; const aSize: Integer; const null: TRange): TRangeArray; overload;');
  
  AddFunction(@TArray_SizeBetween1, 'function TArray_SizeBetween(const arr: TIntegerArray; const sMin, sMax: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeBetween2, 'function TArray_SizeBetween(const arr: TDoubleArray; const sMin, sMax: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeBetween3, 'function TArray_SizeBetween(const arr: TStringArray; const sMin, sMax: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeBetween4, 'function TArray_SizeBetween(const arr: TCharArray; const sMin, sMax: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeBetween5, 'function TArray_SizeBetween(const arr: TBooleanArray; const sMin, sMax: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeBetween6, 'function TArray_SizeBetween(const arr: TPointArray; const sMin, sMax: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeBetween7, 'function TArray_SizeBetween(const arr: TBoxArray; const sMin, sMax: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeBetween8, 'function TArray_SizeBetween(const arr: TRangeArray; const sMin, sMax: Integer): Boolean; overload;');

  AddFunction(@TArray_SizeMax1, 'function TArray_SizeMax(const arr: TIntegerArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMax2, 'function TArray_SizeMax(const arr: TDoubleArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMax3, 'function TArray_SizeMax(const arr: TStringArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMax4, 'function TArray_SizeMax(const arr: TCharArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMax5, 'function TArray_SizeMax(const arr: TBooleanArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMax6, 'function TArray_SizeMax(const arr: TPointArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMax7, 'function TArray_SizeMax(const arr: TBoxArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMax8, 'function TArray_SizeMax(const arr: TRangeArray; const target: Integer): Boolean; overload;');

  AddFunction(@TArray_SizeMin1, 'function TArray_SizeMin(const arr: TIntegerArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMin2, 'function TArray_SizeMin(const arr: TDoubleArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMin3, 'function TArray_SizeMin(const arr: TStringArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMin4, 'function TArray_SizeMin(const arr: TCharArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMin5, 'function TArray_SizeMin(const arr: TBooleanArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMin6, 'function TArray_SizeMin(const arr: TPointArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMin7, 'function TArray_SizeMin(const arr: TBoxArray; const target: Integer): Boolean; overload;');
  AddFunction(@TArray_SizeMin8, 'function TArray_SizeMin(const arr: TRangeArray; const target: Integer): Boolean; overload;');
  
  AddFunction(@TArray_Slice1, 'function TArray_Slice(const arr: TIntegerArray; const r: TRange): TIntegerArray; overload;');
  AddFunction(@TArray_Slice2, 'function TArray_Slice(const arr: TDoubleArray; const r: TRange): TDoubleArray; overload;');
  AddFunction(@TArray_Slice3, 'function TArray_Slice(const arr: TStringArray; const r: TRange): TStringArray; overload;');
  AddFunction(@TArray_Slice4, 'function TArray_Slice(const arr: TCharArray; const r: TRange): TCharArray; overload;');
  AddFunction(@TArray_Slice5, 'function TArray_Slice(const arr: TBooleanArray; const r: TRange): TBooleanArray; overload;');
  AddFunction(@TArray_Slice6, 'function TArray_Slice(const arr: TPointArray; const r: TRange): TPointArray; overload;');
  AddFunction(@TArray_Slice7, 'function TArray_Slice(const arr: TBoxArray; const r: TRange): TBoxArray; overload;');
  AddFunction(@TArray_Slice8, 'function TArray_Slice(const arr: TRangeArray; const r: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Slice9, 'function TArray_Slice(const arr: TIntegerArray; const r: TRangeArray): TIntegerArray; overload;');
  AddFunction(@TArray_Slice10, 'function TArray_Slice(const arr: TDoubleArray; const r: TRangeArray): TDoubleArray; overload;');
  AddFunction(@TArray_Slice11, 'function TArray_Slice(const arr: TStringArray; const r: TRangeArray): TStringArray; overload;');
  AddFunction(@TArray_Slice12, 'function TArray_Slice(const arr: TCharArray; const r: TRangeArray): TCharArray; overload;');
  AddFunction(@TArray_Slice13, 'function TArray_Slice(const arr: TBooleanArray; const r: TRangeArray): TBooleanArray; overload;');
  AddFunction(@TArray_Slice14, 'function TArray_Slice(const arr: TPointArray; const r: TRangeArray): TPointArray; overload;');
  AddFunction(@TArray_Slice15, 'function TArray_Slice(const arr: TBoxArray; const r: TRangeArray): TBoxArray; overload;');
  AddFunction(@TArray_Slice16, 'function TArray_Slice(const arr: TRangeArray; const r: TRangeArray): TRangeArray; overload;');
  
  AddFunction(@TArray_Slots1, 'function TArray_Slots(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Slots2, 'function TArray_Slots(const arr: TDoubleArray): TIntegerArray; overload;');
  AddFunction(@TArray_Slots3, 'function TArray_Slots(const arr: TStringArray): TIntegerArray; overload;');
  AddFunction(@TArray_Slots4, 'function TArray_Slots(const arr: TCharArray): TIntegerArray; overload;');
  AddFunction(@TArray_Slots5, 'function TArray_Slots(const arr: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TArray_Slots6, 'function TArray_Slots(const arr: TPointArray): TIntegerArray; overload;');
  AddFunction(@TArray_Slots7, 'function TArray_Slots(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TArray_Slots8, 'function TArray_Slots(const arr: TRangeArray): TIntegerArray; overload;');
  
  AddFunction(@TArray_Some1, 'function TArray_Some(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Some2, 'function TArray_Some(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Some3, 'function TArray_Some(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Some4, 'function TArray_Some(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Some5, 'function TArray_Some(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Some6, 'function TArray_Some(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Some7, 'function TArray_Some(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Some8, 'function TArray_Some(const arr: TRangeArray): TRangeArray; overload;');
  AddFunction(@TArray_Some9, 'function TArray_Some(const arr: TIntegerArray; const amount: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Some10, 'function TArray_Some(const arr: TDoubleArray; const amount: Integer): TDoubleArray; overload;');
  AddFunction(@TArray_Some11, 'function TArray_Some(const arr: TStringArray; const amount: Integer): TStringArray; overload;');
  AddFunction(@TArray_Some12, 'function TArray_Some(const arr: TCharArray; const amount: Integer): TCharArray; overload;');
  AddFunction(@TArray_Some13, 'function TArray_Some(const arr: TBooleanArray; const amount: Integer): TBooleanArray; overload;');
  AddFunction(@TArray_Some14, 'function TArray_Some(const arr: TPointArray; const amount: Integer): TPointArray; overload;');
  AddFunction(@TArray_Some15, 'function TArray_Some(const arr: TBoxArray; const amount: Integer): TBoxArray; overload;');
  AddFunction(@TArray_Some16, 'function TArray_Some(const arr: TRangeArray; const amount: Integer): TRangeArray; overload;');

  AddFunction(@TArray_Span1, 'function TArray_Span(const arr: TIntegerArray; const subArray: TIntegerArray; const index: Integer = 2147483647): TRange; overload;');
  AddFunction(@TArray_Span2, 'function TArray_Span(const arr: TDoubleArray; const subArray: TDoubleArray; const index: Integer = 2147483647): TRange; overload;');
  AddFunction(@TArray_Span3, 'function TArray_Span(const arr: TStringArray; const subArray: TStringArray; const index: Integer = 2147483647): TRange; overload;');
  AddFunction(@TArray_Span4, 'function TArray_Span(const arr: TCharArray; const subArray: TCharArray; const index: Integer = 2147483647): TRange; overload;');
  AddFunction(@TArray_Span5, 'function TArray_Span(const arr: TBooleanArray; const subArray: TBooleanArray; const index: Integer = 2147483647): TRange; overload;');
  AddFunction(@TArray_Span6, 'function TArray_Span(const arr: TPointArray; const subArray: TPointArray; const index: Integer = 2147483647): TRange; overload;');
  AddFunction(@TArray_Span7, 'function TArray_Span(const arr: TBoxArray; const subArray: TBoxArray; const index: Integer = 2147483647): TRange; overload;');
  AddFunction(@TArray_Span8, 'function TArray_Span(const arr: TRangeArray; const subArray: TRangeArray; const index: Integer = 2147483647): TRange; overload;');
  AddFunction(@TArray_Span9, 'function TArray_Span(const arr: TIntegerArray): TRange; overload;');
  AddFunction(@TArray_Span10, 'function TArray_Span(const arr: TDoubleArray): TRange; overload;');
  AddFunction(@TArray_Span11, 'function TArray_Span(const arr: TStringArray): TRange; overload;');
  AddFunction(@TArray_Span12, 'function TArray_Span(const arr: TCharArray): TRange; overload;');
  AddFunction(@TArray_Span13, 'function TArray_Span(const arr: TBooleanArray): TRange; overload;');
  AddFunction(@TArray_Span14, 'function TArray_Span(const arr: TPointArray): TRange; overload;');
  AddFunction(@TArray_Span15, 'function TArray_Span(const arr: TBoxArray): TRange; overload;');
  AddFunction(@TArray_Span16, 'function TArray_Span(const arr: TRangeArray): TRange; overload;');
  
  AddFunction(@TArray_Spans1, 'function TArray_Spans(const arr: TIntegerArray; const subArray: TIntegerArray; const index: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Spans2, 'function TArray_Spans(const arr: TDoubleArray; const subArray: TDoubleArray; const index: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Spans3, 'function TArray_Spans(const arr: TStringArray; const subArray: TStringArray; const index: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Spans4, 'function TArray_Spans(const arr: TCharArray; const subArray: TCharArray; const index: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Spans5, 'function TArray_Spans(const arr: TBooleanArray; const subArray: TBooleanArray; const index: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Spans6, 'function TArray_Spans(const arr: TPointArray; const subArray: TPointArray; const index: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Spans7, 'function TArray_Spans(const arr: TBoxArray; const subArray: TBoxArray; const index: Integer = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Spans8, 'function TArray_Spans(const arr: TRangeArray; const subArray: TRangeArray; const index: Integer = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Strip1, 'function TArray_Strip(const arr: TIntegerArray; const item: Integer; const eraseDuplicates: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Strip2, 'function TArray_Strip(const arr: TDoubleArray; const item: Double; const eraseDuplicates: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Strip3, 'function TArray_Strip(const arr: TStringArray; const item: string; const eraseDuplicates: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Strip4, 'function TArray_Strip(const arr: TCharArray; const item: Char; const eraseDuplicates: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Strip5, 'function TArray_Strip(const arr: TBooleanArray; const item: Boolean; const eraseDuplicates: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Strip6, 'function TArray_Strip(const arr: TPointArray; const item: TPoint; const eraseDuplicates: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Strip7, 'function TArray_Strip(const arr: TBoxArray; const item: TBox; const eraseDuplicates: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Strip8, 'function TArray_Strip(const arr: TRangeArray; const item: TRange; const eraseDuplicates: Boolean = True): TRangeArray; overload;');

  AddFunction(@TArray_SubarrayLocation1, 'function TArray_SubarrayLocation(const arr: TIntegerArray; const pattern: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_SubarrayLocation2, 'function TArray_SubarrayLocation(const arr: TDoubleArray; const pattern: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_SubarrayLocation3, 'function TArray_SubarrayLocation(const arr: TStringArray; const pattern: TStringArray): Integer; overload;');
  AddFunction(@TArray_SubarrayLocation4, 'function TArray_SubarrayLocation(const arr: TCharArray; const pattern: TCharArray): Integer; overload;');
  AddFunction(@TArray_SubarrayLocation5, 'function TArray_SubarrayLocation(const arr: TBooleanArray; const pattern: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_SubarrayLocation6, 'function TArray_SubarrayLocation(const arr: TPointArray; const pattern: TPointArray): Integer; overload;');
  AddFunction(@TArray_SubarrayLocation7, 'function TArray_SubarrayLocation(const arr: TBoxArray; const pattern: TBoxArray): Integer; overload;');
  AddFunction(@TArray_SubarrayLocation8, 'function TArray_SubarrayLocation(const arr: TRangeArray; const pattern: TRangeArray): Integer; overload;');
  
  AddFunction(@TArray_SubarrayLocations1, 'function TArray_SubarrayLocations(const arr: TIntegerArray; const pattern: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayLocations2, 'function TArray_SubarrayLocations(const arr: TDoubleArray; const pattern: TDoubleArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayLocations3, 'function TArray_SubarrayLocations(const arr: TStringArray; const pattern: TStringArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayLocations4, 'function TArray_SubarrayLocations(const arr: TCharArray; const pattern: TCharArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayLocations5, 'function TArray_SubarrayLocations(const arr: TBooleanArray; const pattern: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayLocations6, 'function TArray_SubarrayLocations(const arr: TPointArray; const pattern: TPointArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayLocations7, 'function TArray_SubarrayLocations(const arr: TBoxArray; const pattern: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayLocations8, 'function TArray_SubarrayLocations(const arr: TRangeArray; const pattern: TRangeArray): TIntegerArray; overload;');

  AddFunction(@TArray_SubarrayPosition1, 'function TArray_SubarrayPosition(const arr: TIntegerArray; const pattern: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_SubarrayPosition2, 'function TArray_SubarrayPosition(const arr: TDoubleArray; const pattern: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_SubarrayPosition3, 'function TArray_SubarrayPosition(const arr: TStringArray; const pattern: TStringArray): Integer; overload;');
  AddFunction(@TArray_SubarrayPosition4, 'function TArray_SubarrayPosition(const arr: TCharArray; const pattern: TCharArray): Integer; overload;');
  AddFunction(@TArray_SubarrayPosition5, 'function TArray_SubarrayPosition(const arr: TBooleanArray; const pattern: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_SubarrayPosition6, 'function TArray_SubarrayPosition(const arr: TPointArray; const pattern: TPointArray): Integer; overload;');
  AddFunction(@TArray_SubarrayPosition7, 'function TArray_SubarrayPosition(const arr: TBoxArray; const pattern: TBoxArray): Integer; overload;');
  AddFunction(@TArray_SubarrayPosition8, 'function TArray_SubarrayPosition(const arr: TRangeArray; const pattern: TRangeArray): Integer; overload;');

  AddFunction(@TArray_SubarrayPositions1, 'function TArray_SubarrayPositions(const arr: TIntegerArray; const pattern: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayPositions2, 'function TArray_SubarrayPositions(const arr: TDoubleArray; const pattern: TDoubleArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayPositions3, 'function TArray_SubarrayPositions(const arr: TStringArray; const pattern: TStringArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayPositions4, 'function TArray_SubarrayPositions(const arr: TCharArray; const pattern: TCharArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayPositions5, 'function TArray_SubarrayPositions(const arr: TBooleanArray; const pattern: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayPositions6, 'function TArray_SubarrayPositions(const arr: TPointArray; const pattern: TPointArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayPositions7, 'function TArray_SubarrayPositions(const arr: TBoxArray; const pattern: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TArray_SubarrayPositions8, 'function TArray_SubarrayPositions(const arr: TRangeArray; const pattern: TRangeArray): TIntegerArray; overload;');

  AddFunction(@TArray_Subset1, 'function TArray_Subset(const arr, items: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Subset2, 'function TArray_Subset(const arr, items: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Subset3, 'function TArray_Subset(const arr, items: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Subset4, 'function TArray_Subset(const arr, items: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Subset5, 'function TArray_Subset(const arr, items: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Subset6, 'function TArray_Subset(const arr, items: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Subset7, 'function TArray_Subset(const arr, items: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Subset8, 'function TArray_Subset(const arr, items: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Supply1, 'function TArray_Supply(var arr: TIntegerArray; const item: Integer): Integer; overload;');
  AddFunction(@TArray_Supply2, 'function TArray_Supply(var arr: TDoubleArray; const item: Double): Integer; overload;');
  AddFunction(@TArray_Supply3, 'function TArray_Supply(var arr: TStringArray; const item: string): Integer; overload;');
  AddFunction(@TArray_Supply4, 'function TArray_Supply(var arr: TCharArray; const item: Char): Integer; overload;');
  AddFunction(@TArray_Supply5, 'function TArray_Supply(var arr: TBooleanArray; const item: Boolean): Integer; overload;');
  AddFunction(@TArray_Supply6, 'function TArray_Supply(var arr: TPointArray; const item: TPoint): Integer; overload;');
  AddFunction(@TArray_Supply7, 'function TArray_Supply(var arr: TBoxArray; const item: TBox): Integer; overload;');
  AddFunction(@TArray_Supply8, 'function TArray_Supply(var arr: TRangeArray; const item: TRange): Integer; overload;');
  AddFunction(@TArray_Supply9, 'function TArray_Supply(var arr: TIntegerArray; const items: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Supply10, 'function TArray_Supply(var arr: TDoubleArray; const items: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Supply11, 'function TArray_Supply(var arr: TStringArray; const items: TStringArray): Integer; overload;');
  AddFunction(@TArray_Supply12, 'function TArray_Supply(var arr: TCharArray; const items: TCharArray): Integer; overload;');
  AddFunction(@TArray_Supply13, 'function TArray_Supply(var arr: TBooleanArray; const items: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Supply14, 'function TArray_Supply(var arr: TPointArray; const items: TPointArray): Integer; overload;');
  AddFunction(@TArray_Supply15, 'function TArray_Supply(var arr: TBoxArray; const items: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Supply16, 'function TArray_Supply(var arr: TRangeArray; const items: TRangeArray): Integer; overload;');

  AddFunction(@TArray_To2D1, 'function TArray_To2D(const arr: TIntegerArray; const rows, columns: Integer): T2DIntegerArray; overload;');
  AddFunction(@TArray_To2D2, 'function TArray_To2D(const arr: TDoubleArray; const rows, columns: Integer): T2DDoubleArray; overload;');
  AddFunction(@TArray_To2D3, 'function TArray_To2D(const arr: TStringArray; const rows, columns: Integer): T2DStringArray; overload;');
  AddFunction(@TArray_To2D4, 'function TArray_To2D(const arr: TCharArray; const rows, columns: Integer): T2DCharArray; overload;');
  AddFunction(@TArray_To2D5, 'function TArray_To2D(const arr: TBooleanArray; const rows, columns: Integer): T2DBooleanArray; overload;');
  AddFunction(@TArray_To2D6, 'function TArray_To2D(const arr: TPointArray; const rows, columns: Integer): T2DPointArray; overload;');
  AddFunction(@TArray_To2D7, 'function TArray_To2D(const arr: TBoxArray; const rows, columns: Integer): T2DBoxArray; overload;');
  AddFunction(@TArray_To2D8, 'function TArray_To2D(const arr: TRangeArray; const rows, columns: Integer): T2DRangeArray; overload;');
  AddFunction(@TArray_To2D9, 'function TArray_To2D(const arr: TIntegerArray; const height: Integer): T2DIntegerArray; overload;');
  AddFunction(@TArray_To2D10, 'function TArray_To2D(const arr: TDoubleArray; const height: Integer): T2DDoubleArray; overload;');
  AddFunction(@TArray_To2D11, 'function TArray_To2D(const arr: TStringArray; const height: Integer): T2DStringArray; overload;');
  AddFunction(@TArray_To2D12, 'function TArray_To2D(const arr: TCharArray; const height: Integer): T2DCharArray; overload;');
  AddFunction(@TArray_To2D13, 'function TArray_To2D(const arr: TBooleanArray; const height: Integer): T2DBooleanArray; overload;');
  AddFunction(@TArray_To2D14, 'function TArray_To2D(const arr: TPointArray; const height: Integer): T2DPointArray; overload;');
  AddFunction(@TArray_To2D15, 'function TArray_To2D(const arr: TBoxArray; const height: Integer): T2DBoxArray; overload;');
  AddFunction(@TArray_To2D16, 'function TArray_To2D(const arr: TRangeArray; const height: Integer): T2DRangeArray; overload;');

  AddFunction(@TArray_ToIndexes1, 'function TArray_ToIndexes(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_ToIndexes2, 'function TArray_ToIndexes(const arr: TDoubleArray): TIntegerArray; overload;');
  AddFunction(@TArray_ToIndexes3, 'function TArray_ToIndexes(const arr: TStringArray): TIntegerArray; overload;');
  AddFunction(@TArray_ToIndexes4, 'function TArray_ToIndexes(const arr: TCharArray): TIntegerArray; overload;');
  AddFunction(@TArray_ToIndexes5, 'function TArray_ToIndexes(const arr: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TArray_ToIndexes6, 'function TArray_ToIndexes(const arr: TPointArray): TIntegerArray; overload;');
  AddFunction(@TArray_ToIndexes7, 'function TArray_ToIndexes(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TArray_ToIndexes8, 'function TArray_ToIndexes(const arr: TRangeArray): TIntegerArray; overload;');

  AddFunction(@TArray_Trade1, 'function TArray_Trade(var arr, b: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Trade2, 'function TArray_Trade(var arr, b: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Trade3, 'function TArray_Trade(var arr, b: TStringArray): Integer; overload;');
  AddFunction(@TArray_Trade4, 'function TArray_Trade(var arr, b: TCharArray): Integer; overload;');
  AddFunction(@TArray_Trade5, 'function TArray_Trade(var arr, b: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Trade6, 'function TArray_Trade(var arr, b: TPointArray): Integer; overload;');
  AddFunction(@TArray_Trade7, 'function TArray_Trade(var arr, b: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Trade8, 'function TArray_Trade(var arr, b: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Undersize1, 'function TArray_Undersize(const arr: TIntegerArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Undersize2, 'function TArray_Undersize(const arr: TDoubleArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Undersize3, 'function TArray_Undersize(const arr: TStringArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Undersize4, 'function TArray_Undersize(const arr: TCharArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Undersize5, 'function TArray_Undersize(const arr: TBooleanArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Undersize6, 'function TArray_Undersize(const arr: TPointArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Undersize7, 'function TArray_Undersize(const arr: TBoxArray; const limit: Integer): Boolean; overload;');
  AddFunction(@TArray_Undersize8, 'function TArray_Undersize(const arr: TRangeArray; const limit: Integer): Boolean; overload;');

  AddFunction(@TArray_Uncluttered1, 'function TArray_Uncluttered(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uncluttered2, 'function TArray_Uncluttered(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Uncluttered3, 'function TArray_Uncluttered(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Uncluttered4, 'function TArray_Uncluttered(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Uncluttered5, 'function TArray_Uncluttered(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Uncluttered6, 'function TArray_Uncluttered(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Uncluttered7, 'function TArray_Uncluttered(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Uncluttered8, 'function TArray_Uncluttered(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Uniform1, 'function TArray_Uniform(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Uniform2, 'function TArray_Uniform(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Uniform3, 'function TArray_Uniform(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Uniform4, 'function TArray_Uniform(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Uniform5, 'function TArray_Uniform(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Uniform6, 'function TArray_Uniform(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Uniform7, 'function TArray_Uniform(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Uniform8, 'function TArray_Uniform(const arr: TRangeArray): Boolean; overload;');
  AddFunction(@TArray_Uniform9, 'function TArray_Uniform(const arr: TIntegerArray; const item: Integer): Boolean; overload;');
  AddFunction(@TArray_Uniform10, 'function TArray_Uniform(const arr: TDoubleArray; const item: Double): Boolean; overload;');
  AddFunction(@TArray_Uniform11, 'function TArray_Uniform(const arr: TStringArray; const item: string): Boolean; overload;');
  AddFunction(@TArray_Uniform12, 'function TArray_Uniform(const arr: TCharArray; const item: Char): Boolean; overload;');
  AddFunction(@TArray_Uniform13, 'function TArray_Uniform(const arr: TBooleanArray; const item: Boolean): Boolean; overload;');
  AddFunction(@TArray_Uniform14, 'function TArray_Uniform(const arr: TPointArray; const item: TPoint): Boolean; overload;');
  AddFunction(@TArray_Uniform15, 'function TArray_Uniform(const arr: TBoxArray; const item: TBox): Boolean; overload;');
  AddFunction(@TArray_Uniform16, 'function TArray_Uniform(const arr: TRangeArray; const item: TRange): Boolean; overload;');

  AddFunction(@TArray_Uniformity1, 'function TArray_Uniformity(const arr: TIntegerArray): Double; overload;');
  AddFunction(@TArray_Uniformity2, 'function TArray_Uniformity(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Uniformity3, 'function TArray_Uniformity(const arr: TStringArray): Double; overload;');
  AddFunction(@TArray_Uniformity4, 'function TArray_Uniformity(const arr: TCharArray): Double; overload;');
  AddFunction(@TArray_Uniformity5, 'function TArray_Uniformity(const arr: TBooleanArray): Double; overload;');
  AddFunction(@TArray_Uniformity6, 'function TArray_Uniformity(const arr: TPointArray): Double; overload;');
  AddFunction(@TArray_Uniformity7, 'function TArray_Uniformity(const arr: TBoxArray): Double; overload;');
  AddFunction(@TArray_Uniformity8, 'function TArray_Uniformity(const arr: TRangeArray): Double; overload;');
  
  AddFunction(@TArray_Unified1, 'function TArray_Unified(const arr: TIntegerArray; const dAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Unified2, 'function TArray_Unified(const arr: TDoubleArray; const dAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Unified3, 'function TArray_Unified(const arr: TStringArray; const dAscending: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Unified4, 'function TArray_Unified(const arr: TCharArray; const dAscending: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Unified5, 'function TArray_Unified(const arr: TBooleanArray; const dAscending: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Unified6, 'function TArray_Unified(const arr: TPointArray; const dAscending: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Unified7, 'function TArray_Unified(const arr: TBoxArray; const dAscending: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Unified8, 'function TArray_Unified(const arr: TRangeArray; const dAscending: Boolean = True): TRangeArray; overload;');

  AddFunction(@TArray_Unify1, 'function TArray_Unify(var arr: TIntegerArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Unify2, 'function TArray_Unify(var arr: TDoubleArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Unify3, 'function TArray_Unify(var arr: TStringArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Unify4, 'function TArray_Unify(var arr: TCharArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Unify5, 'function TArray_Unify(var arr: TBooleanArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Unify6, 'function TArray_Unify(var arr: TPointArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Unify7, 'function TArray_Unify(var arr: TBoxArray; const dAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Unify8, 'function TArray_Unify(var arr: TRangeArray; const dAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_Unduplicated1, 'function TArray_Unduplicated(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Unduplicated2, 'function TArray_Unduplicated(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Unduplicated3, 'function TArray_Unduplicated(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Unduplicated4, 'function TArray_Unduplicated(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Unduplicated5, 'function TArray_Unduplicated(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Unduplicated6, 'function TArray_Unduplicated(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Unduplicated7, 'function TArray_Unduplicated(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Unduplicated8, 'function TArray_Unduplicated(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Uniqued1, 'function TArray_Uniqued(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniqued2, 'function TArray_Uniqued(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Uniqued3, 'function TArray_Uniqued(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Uniqued4, 'function TArray_Uniqued(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Uniqued5, 'function TArray_Uniqued(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Uniqued6, 'function TArray_Uniqued(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Uniqued7, 'function TArray_Uniqued(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Uniqued8, 'function TArray_Uniqued(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Uniques1, 'function TArray_Uniques(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques2, 'function TArray_Uniques(const arr: TDoubleArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques3, 'function TArray_Uniques(const arr: TStringArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques4, 'function TArray_Uniques(const arr: TCharArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques5, 'function TArray_Uniques(const arr: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques6, 'function TArray_Uniques(const arr: TPointArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques7, 'function TArray_Uniques(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques8, 'function TArray_Uniques(const arr: TRangeArray): TIntegerArray; overload;');
  
  AddFunction(@TArray_Unshift1, 'function TArray_Unshift(const arr: TIntegerArray; const item: Integer): TIntegerArray; overload;');
  AddFunction(@TArray_Unshift2, 'function TArray_Unshift(const arr: TDoubleArray; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Unshift3, 'function TArray_Unshift(const arr: TStringArray; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Unshift4, 'function TArray_Unshift(const arr: TCharArray; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Unshift5, 'function TArray_Unshift(const arr: TBooleanArray; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Unshift6, 'function TArray_Unshift(const arr: TPointArray; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Unshift7, 'function TArray_Unshift(const arr: TBoxArray; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Unshift8, 'function TArray_Unshift(const arr: TRangeArray; const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Unshift9, 'function TArray_Unshift(const arr: TIntegerArray; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Unshift10, 'function TArray_Unshift(const arr: TDoubleArray; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Unshift11, 'function TArray_Unshift(const arr: TStringArray; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Unshift12, 'function TArray_Unshift(const arr: TCharArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Unshift13, 'function TArray_Unshift(const arr: TBooleanArray; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Unshift14, 'function TArray_Unshift(const arr: TPointArray; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Unshift15, 'function TArray_Unshift(const arr: TBoxArray; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Unshift16, 'function TArray_Unshift(const arr: TRangeArray; const items: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Void1, 'function TArray_Void(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Void2, 'function TArray_Void(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Void3, 'function TArray_Void(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Void4, 'function TArray_Void(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Void5, 'function TArray_Void(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Void6, 'function TArray_Void(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Void7, 'function TArray_Void(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Void8, 'function TArray_Void(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Waste1, 'function TArray_Waste(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Waste2, 'function TArray_Waste(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Waste3, 'function TArray_Waste(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Waste4, 'function TArray_Waste(const arr: TCharArray): Integer; overload;');
  AddFunction(@TArray_Waste5, 'function TArray_Waste(const arr: TBooleanArray): Integer; overload;');
  AddFunction(@TArray_Waste6, 'function TArray_Waste(const arr: TPointArray): Integer; overload;');
  AddFunction(@TArray_Waste7, 'function TArray_Waste(const arr: TBoxArray): Integer; overload;');
  AddFunction(@TArray_Waste8, 'function TArray_Waste(const arr: TRangeArray): Integer; overload;');

  AddFunction(@TArray_Zigzag1, 'function TArray_Zigzag(const arr: TIntegerArray; const zAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_Zigzag2, 'function TArray_Zigzag(const arr: TDoubleArray; const zAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_Zigzag3, 'function TArray_Zigzag(const arr: TStringArray; const zAscending: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_Zigzag4, 'function TArray_Zigzag(const arr: TCharArray; const zAscending: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_Zigzag5, 'function TArray_Zigzag(const arr: TBooleanArray; const zAscending: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_Zigzag6, 'function TArray_Zigzag(const arr: TPointArray; const zAscending: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_Zigzag7, 'function TArray_Zigzag(const arr: TBoxArray; const zAscending: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_Zigzag8, 'function TArray_Zigzag(const arr: TRangeArray; const zAscending: Boolean = True): TRangeArray; overload;');

  AddFunction(@TArray_Sortable1, 'function TArray_Sortable(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Sortable2, 'function TArray_Sortable(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Sortable3, 'function TArray_Sortable(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Sortable4, 'function TArray_Sortable(const arr: TCharArray): Boolean; overload;');

  AddFunction(@TArray_Sorted1, 'function TArray_Sorted(const arr: TIntegerArray; const aAscending: Boolean = True): Boolean; overload;');
  AddFunction(@TArray_Sorted2, 'function TArray_Sorted(const arr: TDoubleArray; const aAscending: Boolean = True): Boolean; overload;');
  AddFunction(@TArray_Sorted3, 'function TArray_Sorted(const arr: TStringArray; const aAscending: Boolean = True): Boolean; overload;');
  AddFunction(@TArray_Sorted4, 'function TArray_Sorted(const arr: TCharArray; const aAscending: Boolean = True): Boolean; overload;');

  AddFunction(@TArray_InOrder1, 'function TArray_InOrder(const arr: TIntegerArray; const aAscending: Boolean = True): Boolean; overload;');
  AddFunction(@TArray_InOrder2, 'function TArray_InOrder(const arr: TDoubleArray; const aAscending: Boolean = True): Boolean; overload;');
  AddFunction(@TArray_InOrder3, 'function TArray_InOrder(const arr: TStringArray; const aAscending: Boolean = True): Boolean; overload;');
  AddFunction(@TArray_InOrder4, 'function TArray_InOrder(const arr: TCharArray; const aAscending: Boolean = True): Boolean; overload;');

  AddFunction(@TArray_Ordered1, 'function TArray_Ordered(const arr: TIntegerArray; const aAscending: Boolean = True; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Ordered2, 'function TArray_Ordered(const arr: TDoubleArray; const aAscending: Boolean = True; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Ordered3, 'function TArray_Ordered(const arr: TStringArray; const aAscending: Boolean = True; const index: Integer = 0): Boolean; overload;');
  AddFunction(@TArray_Ordered4, 'function TArray_Ordered(const arr: TCharArray; const aAscending: Boolean = True; const index: Integer = 0): Boolean; overload;');
  
  AddFunction(@TArray_Orderly1, 'function TArray_Orderly(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Orderly2, 'function TArray_Orderly(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Orderly3, 'function TArray_Orderly(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Orderly4, 'function TArray_Orderly(const arr: TCharArray): Boolean; overload;');

  AddFunction(@TArray_Order1, 'function TArray_Order(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Order2, 'function TArray_Order(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Order3, 'function TArray_Order(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Order4, 'function TArray_Order(const arr: TCharArray): Integer; overload;');

  AddFunction(@TArray_Orientation1, 'function TArray_Orientation(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Orientation2, 'function TArray_Orientation(const arr: TDoubleArray): Integer; overload;');
  AddFunction(@TArray_Orientation3, 'function TArray_Orientation(const arr: TStringArray): Integer; overload;');
  AddFunction(@TArray_Orientation4, 'function TArray_Orientation(const arr: TCharArray): Integer; overload;');

  AddFunction(@TArray_Ascend1, 'function TArray_Ascend(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Ascend2, 'function TArray_Ascend(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Ascend3, 'function TArray_Ascend(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Ascend4, 'function TArray_Ascend(const arr: TCharArray): TCharArray; overload;');
  
  AddFunction(@TArray_Descend1, 'function TArray_Descend(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Descend2, 'function TArray_Descend(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Descend3, 'function TArray_Descend(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Descend4, 'function TArray_Descend(const arr: TCharArray): TCharArray; overload;');
  
  AddFunction(@TArray_Ascending1, 'function TArray_Ascending(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Ascending2, 'function TArray_Ascending(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Ascending3, 'function TArray_Ascending(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Ascending4, 'function TArray_Ascending(const arr: TCharArray): Boolean; overload;');
  
  AddFunction(@TArray_Descending1, 'function TArray_Descending(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Descending2, 'function TArray_Descending(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Descending3, 'function TArray_Descending(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Descending4, 'function TArray_Descending(const arr: TCharArray): Boolean; overload;');
  
  AddFunction(@TArray_Decreasing1, 'function TArray_Decreasing(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Decreasing2, 'function TArray_Decreasing(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Decreasing3, 'function TArray_Decreasing(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Decreasing4, 'function TArray_Decreasing(const arr: TCharArray): Boolean; overload;');
  
  AddFunction(@TArray_Increasing1, 'function TArray_Increasing(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Increasing2, 'function TArray_Increasing(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Increasing3, 'function TArray_Increasing(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Increasing4, 'function TArray_Increasing(const arr: TCharArray): Boolean; overload;');
  
  AddFunction(@TArray_Downward1, 'function TArray_Downward(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Downward2, 'function TArray_Downward(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Downward3, 'function TArray_Downward(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Downward4, 'function TArray_Downward(const arr: TCharArray): Boolean; overload;');
  
  AddFunction(@TArray_Upward1, 'function TArray_Upward(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Upward2, 'function TArray_Upward(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Upward3, 'function TArray_Upward(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Upward4, 'function TArray_Upward(const arr: TCharArray): Boolean; overload;');
  
  AddFunction(@TArray_Lowest1, 'function TArray_Lowest(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Lowest2, 'function TArray_Lowest(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Lowest3, 'function TArray_Lowest(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_Lowest4, 'function TArray_Lowest(const arr: TCharArray): Char; overload;');
  
  AddFunction(@TArray_Highest1, 'function TArray_Highest(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Highest2, 'function TArray_Highest(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Highest3, 'function TArray_Highest(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_Highest4, 'function TArray_Highest(const arr: TCharArray): Char; overload;');
  
  AddFunction(@TArray_Mini1, 'function TArray_Mini(const arr: TIntegerArray; const aAscending: Boolean = True; const start: Integer = -1): Integer; overload;');
  AddFunction(@TArray_Mini2, 'function TArray_Mini(const arr: TDoubleArray; const aAscending: Boolean = True; const start: Integer = -1): Integer; overload;');
  AddFunction(@TArray_Mini3, 'function TArray_Mini(const arr: TStringArray; const aAscending: Boolean = True; const start: Integer = -1): Integer; overload;');
  AddFunction(@TArray_Mini4, 'function TArray_Mini(const arr: TCharArray; const aAscending: Boolean = True; const start: Integer = -1): Integer; overload;');
  AddFunction(@TArray_Mini5, 'function TArray_Mini(const arr: TIntegerArray; const start: Integer; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Mini6, 'function TArray_Mini(const arr: TDoubleArray; const start: Integer; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Mini7, 'function TArray_Mini(const arr: TStringArray; const start: Integer; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Mini8, 'function TArray_Mini(const arr: TCharArray; const start: Integer; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_Maxi1, 'function TArray_Maxi(const arr: TIntegerArray; const aAscending: Boolean = True; const start: Integer = -1): Integer; overload;');
  AddFunction(@TArray_Maxi2, 'function TArray_Maxi(const arr: TDoubleArray; const aAscending: Boolean = True; const start: Integer = -1): Integer; overload;');
  AddFunction(@TArray_Maxi3, 'function TArray_Maxi(const arr: TStringArray; const aAscending: Boolean = True; const start: Integer = -1): Integer; overload;');
  AddFunction(@TArray_Maxi4, 'function TArray_Maxi(const arr: TCharArray; const aAscending: Boolean = True; const start: Integer = -1): Integer; overload;');
  AddFunction(@TArray_Maxi5, 'function TArray_Maxi(const arr: TIntegerArray; const start: Integer; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Maxi6, 'function TArray_Maxi(const arr: TDoubleArray; const start: Integer; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Maxi7, 'function TArray_Maxi(const arr: TStringArray; const start: Integer; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_Maxi8, 'function TArray_Maxi(const arr: TCharArray; const start: Integer; const aAscending: Boolean = True): Integer; overload;');
  
  AddFunction(@TArray_Mode1, 'function TArray_Mode(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Mode2, 'function TArray_Mode(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Mode3, 'function TArray_Mode(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_Mode4, 'function TArray_Mode(const arr: TCharArray): Char; overload;');
  
  AddFunction(@TArray_Center1, 'function TArray_Center(const arr: TIntegerArray): Integer; overload;');
  AddFunction(@TArray_Center2, 'function TArray_Center(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Center3, 'function TArray_Center(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_Center4, 'function TArray_Center(const arr: TCharArray): Char; overload;');

  AddFunction(@TArray_QuickSorted1, 'function TArray_QuickSorted(const arr: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_QuickSorted2, 'function TArray_QuickSorted(const arr: TDoubleArray; const aAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_QuickSorted3, 'function TArray_QuickSorted(const arr: TStringArray; const aAscending: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_QuickSorted4, 'function TArray_QuickSorted(const arr: TCharArray; const aAscending: Boolean = True): TCharArray; overload;');

  AddFunction(@TArray_QuickSort1, 'function TArray_QuickSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QuickSort2, 'function TArray_QuickSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QuickSort3, 'function TArray_QuickSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QuickSort4, 'function TArray_QuickSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');
  
  AddFunction(@TArray_QuickSort3W1, 'function TArray_QuickSort3W(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QuickSort3W2, 'function TArray_QuickSort3W(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QuickSort3W3, 'function TArray_QuickSort3W(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QuickSort3W4, 'function TArray_QuickSort3W(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');
  
  AddFunction(@TArray_QSort1, 'function TArray_QSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QSort2, 'function TArray_QSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QSort3, 'function TArray_QSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_QSort4, 'function TArray_QSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_CoctailSort1, 'function TArray_CoctailSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CoctailSort2, 'function TArray_CoctailSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CoctailSort3, 'function TArray_CoctailSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CoctailSort4, 'function TArray_CoctailSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_CoctailSort21, 'function TArray_CoctailSort2(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CoctailSort22, 'function TArray_CoctailSort2(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CoctailSort23, 'function TArray_CoctailSort2(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CoctailSort24, 'function TArray_CoctailSort2(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_GnomeSort1, 'function TArray_GnomeSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_GnomeSort2, 'function TArray_GnomeSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_GnomeSort3, 'function TArray_GnomeSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_GnomeSort4, 'function TArray_GnomeSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_GnomeSortOptimized1, 'function TArray_GnomeSortOptimized(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_GnomeSortOptimized2, 'function TArray_GnomeSortOptimized(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_GnomeSortOptimized3, 'function TArray_GnomeSortOptimized(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_GnomeSortOptimized4, 'function TArray_GnomeSortOptimized(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_PancakeSort1, 'function TArray_PancakeSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_PancakeSort2, 'function TArray_PancakeSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_PancakeSort3, 'function TArray_PancakeSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_PancakeSort4, 'function TArray_PancakeSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_BubbleSort1, 'function TArray_BubbleSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSort2, 'function TArray_BubbleSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSort3, 'function TArray_BubbleSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSort4, 'function TArray_BubbleSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_BubbleSort21, 'function TArray_BubbleSort2(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSort22, 'function TArray_BubbleSort2(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSort23, 'function TArray_BubbleSort2(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSort24, 'function TArray_BubbleSort2(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_BubbleSortOptimized1, 'function TArray_BubbleSortOptimized(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSortOptimized2, 'function TArray_BubbleSortOptimized(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSortOptimized3, 'function TArray_BubbleSortOptimized(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_BubbleSortOptimized4, 'function TArray_BubbleSortOptimized(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');
  
  AddFunction(@TArray_CombSort1, 'function TArray_CombSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CombSort2, 'function TArray_CombSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CombSort3, 'function TArray_CombSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_CombSort4, 'function TArray_CombSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_HeapSort1, 'function TArray_HeapSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_HeapSort2, 'function TArray_HeapSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_HeapSort3, 'function TArray_HeapSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_HeapSort4, 'function TArray_HeapSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');
  
  AddFunction(@TArray_InsertionSort1, 'function TArray_InsertionSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_InsertionSort2, 'function TArray_InsertionSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_InsertionSort3, 'function TArray_InsertionSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_InsertionSort4, 'function TArray_InsertionSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_SelectionSort1, 'function TArray_SelectionSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSort2, 'function TArray_SelectionSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSort3, 'function TArray_SelectionSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSort4, 'function TArray_SelectionSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_SelectionSortBidirectional1, 'function TArray_SelectionSortBidirectional(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSortBidirectional2, 'function TArray_SelectionSortBidirectional(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSortBidirectional3, 'function TArray_SelectionSortBidirectional(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSortBidirectional4, 'function TArray_SelectionSortBidirectional(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_SelectionSortBidirectional21, 'function TArray_SelectionSortBidirectional2(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSortBidirectional22, 'function TArray_SelectionSortBidirectional2(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSortBidirectional23, 'function TArray_SelectionSortBidirectional2(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_SelectionSortBidirectional24, 'function TArray_SelectionSortBidirectional2(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_ShellSort1, 'function TArray_ShellSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_ShellSort2, 'function TArray_ShellSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_ShellSort3, 'function TArray_ShellSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_ShellSort4, 'function TArray_ShellSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_MergeSort1, 'function TArray_MergeSort(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_MergeSort2, 'function TArray_MergeSort(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_MergeSort3, 'function TArray_MergeSort(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_MergeSort4, 'function TArray_MergeSort(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');
  
  AddFunction(@TArray_MergeSortBU1, 'function TArray_MergeSortBU(var arr: TIntegerArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_MergeSortBU2, 'function TArray_MergeSortBU(var arr: TDoubleArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_MergeSortBU3, 'function TArray_MergeSortBU(var arr: TStringArray; const aAscending: Boolean = True): Integer; overload;');
  AddFunction(@TArray_MergeSortBU4, 'function TArray_MergeSortBU(var arr: TCharArray; const aAscending: Boolean = True): Integer; overload;');

  AddFunction(@TArray_Uniq1, 'function TArray_Uniq(const arr: TIntegerArray; const sSorted: Boolean = False): TIntegerArray; overload;');
  AddFunction(@TArray_Uniq2, 'function TArray_Uniq(const arr: TDoubleArray; const sSorted: Boolean = False): TDoubleArray; overload;');
  AddFunction(@TArray_Uniq3, 'function TArray_Uniq(const arr: TStringArray; const sSorted: Boolean = False): TStringArray; overload;');
  AddFunction(@TArray_Uniq4, 'function TArray_Uniq(const arr: TCharArray; const sSorted: Boolean = False): TCharArray; overload;');

  AddFunction(@TArray_QuickSorted5, 'function TArray_QuickSorted(const arr: TIntegerArray; const weight: TIntegerArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_QuickSorted6, 'function TArray_QuickSorted(const arr: TDoubleArray; const weight: TIntegerArray; const aAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_QuickSorted7, 'function TArray_QuickSorted(const arr: TStringArray; const weight: TIntegerArray; const aAscending: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_QuickSorted8, 'function TArray_QuickSorted(const arr: TCharArray; const weight: TIntegerArray; const aAscending: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_QuickSorted9, 'function TArray_QuickSorted(const arr: TBooleanArray; const weight: TIntegerArray; const aAscending: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_QuickSorted10, 'function TArray_QuickSorted(const arr: TPointArray; const weight: TIntegerArray; const aAscending: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_QuickSorted11, 'function TArray_QuickSorted(const arr: TBoxArray; const weight: TIntegerArray; const aAscending: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_QuickSorted12, 'function TArray_QuickSorted(const arr: TRangeArray; const weight: TIntegerArray; const aAscending: Boolean = True): TRangeArray; overload;');
  
  AddFunction(@TArray_QuickSorted13, 'function TArray_QuickSorted(const arr: TIntegerArray; const weight: TDoubleArray; const aAscending: Boolean = True): TIntegerArray; overload;');
  AddFunction(@TArray_QuickSorted14, 'function TArray_QuickSorted(const arr: TDoubleArray; const weight: TDoubleArray; const aAscending: Boolean = True): TDoubleArray; overload;');
  AddFunction(@TArray_QuickSorted15, 'function TArray_QuickSorted(const arr: TStringArray; const weight: TDoubleArray; const aAscending: Boolean = True): TStringArray; overload;');
  AddFunction(@TArray_QuickSorted16, 'function TArray_QuickSorted(const arr: TCharArray; const weight: TDoubleArray; const aAscending: Boolean = True): TCharArray; overload;');
  AddFunction(@TArray_QuickSorted17, 'function TArray_QuickSorted(const arr: TBooleanArray; const weight: TDoubleArray; const aAscending: Boolean = True): TBooleanArray; overload;');
  AddFunction(@TArray_QuickSorted18, 'function TArray_QuickSorted(const arr: TPointArray; const weight: TDoubleArray; const aAscending: Boolean = True): TPointArray; overload;');
  AddFunction(@TArray_QuickSorted19, 'function TArray_QuickSorted(const arr: TBoxArray; const weight: TDoubleArray; const aAscending: Boolean = True): TBoxArray; overload;');
  AddFunction(@TArray_QuickSorted20, 'function TArray_QuickSorted(const arr: TRangeArray; const weight: TDoubleArray; const aAscending: Boolean = True): TRangeArray; overload;');
 
  AddFunction(@T2DArray_Blank1, 'function T2DArray_Blank(const arr: T2DIntegerArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank2, 'function T2DArray_Blank(const arr: T2DDoubleArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank3, 'function T2DArray_Blank(const arr: T2DStringArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank4, 'function T2DArray_Blank(const arr: T2DCharArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank5, 'function T2DArray_Blank(const arr: T2DBooleanArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank6, 'function T2DArray_Blank(const arr: T2DPointArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank7, 'function T2DArray_Blank(const arr: T2DBoxArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank8, 'function T2DArray_Blank(const arr: T2DRangeArray): Boolean; overload;');

  AddFunction(@T1D_Create1, 'function T1D_Create(const item: Integer; const aSize: Integer = 1): TIntegerArray; overload;');
  AddFunction(@T1D_Create2, 'function T1D_Create(const item: Double; const aSize: Integer = 1): TDoubleArray; overload;');
  AddFunction(@T1D_Create3, 'function T1D_Create(const item: string; const aSize: Integer = 1): TStringArray; overload;');
  AddFunction(@T1D_Create4, 'function T1D_Create(const item: Char; const aSize: Integer = 1): TCharArray; overload;');
  AddFunction(@T1D_Create5, 'function T1D_Create(const item: Boolean; const aSize: Integer = 1): TBooleanArray; overload;');
  AddFunction(@T1D_Create6, 'function T1D_Create(const item: TPoint; const aSize: Integer = 1): TPointArray; overload;');
  AddFunction(@T1D_Create7, 'function T1D_Create(const item: TBox; const aSize: Integer = 1): TBoxArray; overload;');
  AddFunction(@T1D_Create8, 'function T1D_Create(const item: TRange; const aSize: Integer = 1): TRangeArray; overload;');

  AddFunction(@T2D_Create1, 'function T2D_Create(const item: Integer; const size1D: Integer = 1; const size2D: Integer = 1): T2DIntegerArray; overload;');
  AddFunction(@T2D_Create2, 'function T2D_Create(const item: Double; const size1D: Integer = 1; const size2D: Integer = 1): T2DDoubleArray; overload;');
  AddFunction(@T2D_Create3, 'function T2D_Create(const item: string; const size1D: Integer = 1; const size2D: Integer = 1): T2DStringArray; overload;');
  AddFunction(@T2D_Create4, 'function T2D_Create(const item: Char; const size1D: Integer = 1; const size2D: Integer = 1): T2DCharArray; overload;');
  AddFunction(@T2D_Create5, 'function T2D_Create(const item: Boolean; const size1D: Integer = 1; const size2D: Integer = 1): T2DBooleanArray; overload;');
  AddFunction(@T2D_Create6, 'function T2D_Create(const item: TPoint; const size1D: Integer = 1; const size2D: Integer = 1): T2DPointArray; overload;');
  AddFunction(@T2D_Create7, 'function T2D_Create(const item: TBox; const size1D: Integer = 1; const size2D: Integer = 1): T2DBoxArray; overload;');
  AddFunction(@T2D_Create8, 'function T2D_Create(const item: TRange; const size1D: Integer = 1; const size2D: Integer = 1): T2DRangeArray; overload;');

  AddFunction(@T2DArray_Empty1, 'function T2DArray_Empty(const arr: T2DIntegerArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty2, 'function T2DArray_Empty(const arr: T2DDoubleArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty3, 'function T2DArray_Empty(const arr: T2DStringArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty4, 'function T2DArray_Empty(const arr: T2DCharArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty5, 'function T2DArray_Empty(const arr: T2DBooleanArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty6, 'function T2DArray_Empty(const arr: T2DPointArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty7, 'function T2DArray_Empty(const arr: T2DBoxArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty8, 'function T2DArray_Empty(const arr: T2DRangeArray): Boolean; overload;');

  AddFunction(@T2DArray_Flat1, 'function T2DArray_Flat(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_Flat2, 'function T2DArray_Flat(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_Flat3, 'function T2DArray_Flat(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_Flat4, 'function T2DArray_Flat(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_Flat5, 'function T2DArray_Flat(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_Flat6, 'function T2DArray_Flat(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_Flat7, 'function T2DArray_Flat(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_Flat8, 'function T2DArray_Flat(const arr: T2DRangeArray): TRangeArray; overload;');
  
  AddFunction(@T2DArray_Flatten1, 'function T2DArray_Flatten(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_Flatten2, 'function T2DArray_Flatten(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_Flatten3, 'function T2DArray_Flatten(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_Flatten4, 'function T2DArray_Flatten(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_Flatten5, 'function T2DArray_Flatten(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_Flatten6, 'function T2DArray_Flatten(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_Flatten7, 'function T2DArray_Flatten(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_Flatten8, 'function T2DArray_Flatten(const arr: T2DRangeArray): TRangeArray; overload;');
  
  AddFunction(@T2DArray_To1D1, 'function T2DArray_To1D(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_To1D2, 'function T2DArray_To1D(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_To1D3, 'function T2DArray_To1D(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_To1D4, 'function T2DArray_To1D(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_To1D5, 'function T2DArray_To1D(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_To1D6, 'function T2DArray_To1D(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_To1D7, 'function T2DArray_To1D(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_To1D8, 'function T2DArray_To1D(const arr: T2DRangeArray): TRangeArray; overload;');
  
  AddFunction(@T2DArray_Linearize1, 'function T2DArray_Linearize(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_Linearize2, 'function T2DArray_Linearize(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_Linearize3, 'function T2DArray_Linearize(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_Linearize4, 'function T2DArray_Linearize(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_Linearize5, 'function T2DArray_Linearize(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_Linearize6, 'function T2DArray_Linearize(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_Linearize7, 'function T2DArray_Linearize(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_Linearize8, 'function T2DArray_Linearize(const arr: T2DRangeArray): TRangeArray; overload;');
  
  AddFunction(@T2DArray_Irregular1, 'function T2DArray_Irregular(const arr: T2DIntegerArray): Boolean; overload;');
  AddFunction(@T2DArray_Irregular2, 'function T2DArray_Irregular(const arr: T2DDoubleArray): Boolean; overload;');
  AddFunction(@T2DArray_Irregular3, 'function T2DArray_Irregular(const arr: T2DStringArray): Boolean; overload;');
  AddFunction(@T2DArray_Irregular4, 'function T2DArray_Irregular(const arr: T2DCharArray): Boolean; overload;');
  AddFunction(@T2DArray_Irregular5, 'function T2DArray_Irregular(const arr: T2DBooleanArray): Boolean; overload;');
  AddFunction(@T2DArray_Irregular6, 'function T2DArray_Irregular(const arr: T2DPointArray): Boolean; overload;');
  AddFunction(@T2DArray_Irregular7, 'function T2DArray_Irregular(const arr: T2DBoxArray): Boolean; overload;');
  AddFunction(@T2DArray_Irregular8, 'function T2DArray_Irregular(const arr: T2DRangeArray): Boolean; overload;');
  
  AddFunction(@T2DArray_Jagged1, 'function T2DArray_Jagged(const arr: T2DIntegerArray): Boolean; overload;');
  AddFunction(@T2DArray_Jagged2, 'function T2DArray_Jagged(const arr: T2DDoubleArray): Boolean; overload;');
  AddFunction(@T2DArray_Jagged3, 'function T2DArray_Jagged(const arr: T2DStringArray): Boolean; overload;');
  AddFunction(@T2DArray_Jagged4, 'function T2DArray_Jagged(const arr: T2DCharArray): Boolean; overload;');
  AddFunction(@T2DArray_Jagged5, 'function T2DArray_Jagged(const arr: T2DBooleanArray): Boolean; overload;');
  AddFunction(@T2DArray_Jagged6, 'function T2DArray_Jagged(const arr: T2DPointArray): Boolean; overload;');
  AddFunction(@T2DArray_Jagged7, 'function T2DArray_Jagged(const arr: T2DBoxArray): Boolean; overload;');
  AddFunction(@T2DArray_Jagged8, 'function T2DArray_Jagged(const arr: T2DRangeArray): Boolean; overload;');
  
  AddFunction(@T2DArray_Merge1, 'function T2DArray_Merge(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_Merge2, 'function T2DArray_Merge(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_Merge3, 'function T2DArray_Merge(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_Merge4, 'function T2DArray_Merge(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_Merge5, 'function T2DArray_Merge(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_Merge6, 'function T2DArray_Merge(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_Merge7, 'function T2DArray_Merge(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_Merge8, 'function T2DArray_Merge(const arr: T2DRangeArray): TRangeArray; overload;');
  
  AddFunction(@T2DArray_Merged1, 'function T2DArray_Merged(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_Merged2, 'function T2DArray_Merged(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_Merged3, 'function T2DArray_Merged(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_Merged4, 'function T2DArray_Merged(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_Merged5, 'function T2DArray_Merged(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_Merged6, 'function T2DArray_Merged(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_Merged7, 'function T2DArray_Merged(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_Merged8, 'function T2DArray_Merged(const arr: T2DRangeArray): TRangeArray; overload;');
  
  AddFunction(@T2DArray_Ragged1, 'function T2DArray_Ragged(const arr: T2DIntegerArray): Boolean; overload;');
  AddFunction(@T2DArray_Ragged2, 'function T2DArray_Ragged(const arr: T2DDoubleArray): Boolean; overload;');
  AddFunction(@T2DArray_Ragged3, 'function T2DArray_Ragged(const arr: T2DStringArray): Boolean; overload;');
  AddFunction(@T2DArray_Ragged4, 'function T2DArray_Ragged(const arr: T2DCharArray): Boolean; overload;');
  AddFunction(@T2DArray_Ragged5, 'function T2DArray_Ragged(const arr: T2DBooleanArray): Boolean; overload;');
  AddFunction(@T2DArray_Ragged6, 'function T2DArray_Ragged(const arr: T2DPointArray): Boolean; overload;');
  AddFunction(@T2DArray_Ragged7, 'function T2DArray_Ragged(const arr: T2DBoxArray): Boolean; overload;');
  AddFunction(@T2DArray_Ragged8, 'function T2DArray_Ragged(const arr: T2DRangeArray): Boolean; overload;');

  AddFunction(@T2DArray_Fit1, 'function T2DArray_Fit(const arr: T2DIntegerArray): Integer; overload;');
  AddFunction(@T2DArray_Fit2, 'function T2DArray_Fit(const arr: T2DDoubleArray): Integer; overload;');
  AddFunction(@T2DArray_Fit3, 'function T2DArray_Fit(const arr: T2DStringArray): Integer; overload;');
  AddFunction(@T2DArray_Fit4, 'function T2DArray_Fit(const arr: T2DCharArray): Integer; overload;');
  AddFunction(@T2DArray_Fit5, 'function T2DArray_Fit(const arr: T2DBooleanArray): Integer; overload;');
  AddFunction(@T2DArray_Fit6, 'function T2DArray_Fit(const arr: T2DPointArray): Integer; overload;');
  AddFunction(@T2DArray_Fit7, 'function T2DArray_Fit(const arr: T2DBoxArray): Integer; overload;');
  AddFunction(@T2DArray_Fit8, 'function T2DArray_Fit(const arr: T2DRangeArray): Integer; overload;');
  AddFunction(@T2DArray_Fit9, 'function T2DArray_Fit(var arr: T2DIntegerArray; const aSize: Integer): Integer; overload;');
  AddFunction(@T2DArray_Fit10, 'function T2DArray_Fit(var arr: T2DDoubleArray; const aSize: Integer): Integer; overload;');
  AddFunction(@T2DArray_Fit11, 'function T2DArray_Fit(var arr: T2DStringArray; const aSize: Integer): Integer; overload;');
  AddFunction(@T2DArray_Fit12, 'function T2DArray_Fit(var arr: T2DCharArray; const aSize: Integer): Integer; overload;');
  AddFunction(@T2DArray_Fit13, 'function T2DArray_Fit(var arr: T2DBooleanArray; const aSize: Integer): Integer; overload;');
  AddFunction(@T2DArray_Fit14, 'function T2DArray_Fit(var arr: T2DPointArray; const aSize: Integer): Integer; overload;');
  AddFunction(@T2DArray_Fit15, 'function T2DArray_Fit(var arr: T2DBoxArray; const aSize: Integer): Integer; overload;');
  AddFunction(@T2DArray_Fit16, 'function T2DArray_Fit(var arr: T2DRangeArray; const aSize: Integer): Integer; overload;');
  AddFunction(@T2DArray_Fit17, 'function T2DArray_Fit(var arr: T2DIntegerArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@T2DArray_Fit18, 'function T2DArray_Fit(var arr: T2DDoubleArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@T2DArray_Fit19, 'function T2DArray_Fit(var arr: T2DStringArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@T2DArray_Fit20, 'function T2DArray_Fit(var arr: T2DCharArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@T2DArray_Fit21, 'function T2DArray_Fit(var arr: T2DBooleanArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@T2DArray_Fit22, 'function T2DArray_Fit(var arr: T2DPointArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@T2DArray_Fit23, 'function T2DArray_Fit(var arr: T2DBoxArray; const aBounds: TRange): Integer; overload;');
  AddFunction(@T2DArray_Fit24, 'function T2DArray_Fit(var arr: T2DRangeArray; const aBounds: TRange): Integer; overload;');

  AddFunction(@T2DArray_Size1, 'function T2DArray_Size(const arr: T2DIntegerArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size2, 'function T2DArray_Size(const arr: T2DDoubleArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size3, 'function T2DArray_Size(const arr: T2DStringArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size4, 'function T2DArray_Size(const arr: T2DCharArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size5, 'function T2DArray_Size(const arr: T2DBooleanArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size6, 'function T2DArray_Size(const arr: T2DPointArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size7, 'function T2DArray_Size(const arr: T2DBoxArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size8, 'function T2DArray_Size(const arr: T2DRangeArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size9, 'function T2DArray_Size(const arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Size10, 'function T2DArray_Size(const arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Size11, 'function T2DArray_Size(const arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Size12, 'function T2DArray_Size(const arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Size13, 'function T2DArray_Size(const arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Size14, 'function T2DArray_Size(const arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Size15, 'function T2DArray_Size(const arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Size16, 'function T2DArray_Size(const arr: T2DRangeArray): Int64; overload;');
  
  AddFunction(@T2DArray_Total1, 'function T2DArray_Total(const arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Total2, 'function T2DArray_Total(const arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Total3, 'function T2DArray_Total(const arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Total4, 'function T2DArray_Total(const arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Total5, 'function T2DArray_Total(const arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Total6, 'function T2DArray_Total(const arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Total7, 'function T2DArray_Total(const arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Total8, 'function T2DArray_Total(const arr: T2DRangeArray): Int64; overload;');

  AddFunction(@T2DArray_Population1, 'function T2DArray_Population(const arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Population2, 'function T2DArray_Population(const arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Population3, 'function T2DArray_Population(const arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Population4, 'function T2DArray_Population(const arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Population5, 'function T2DArray_Population(const arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Population6, 'function T2DArray_Population(const arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Population7, 'function T2DArray_Population(const arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Population8, 'function T2DArray_Population(const arr: T2DRangeArray): Int64; overload;');

  AddFunction(@T2DArray_Census1, 'function T2DArray_Census(const arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Census2, 'function T2DArray_Census(const arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Census3, 'function T2DArray_Census(const arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Census4, 'function T2DArray_Census(const arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Census5, 'function T2DArray_Census(const arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Census6, 'function T2DArray_Census(const arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Census7, 'function T2DArray_Census(const arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Census8, 'function T2DArray_Census(const arr: T2DRangeArray): Int64; overload;');
  
  AddFunction(@T2DArray_Inventory1, 'function T2DArray_Inventory(const arr: T2DIntegerArray; var items: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory2, 'function T2DArray_Inventory(const arr: T2DDoubleArray; var items: TDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory3, 'function T2DArray_Inventory(const arr: T2DStringArray; var items: TStringArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory4, 'function T2DArray_Inventory(const arr: T2DCharArray; var items: TCharArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory5, 'function T2DArray_Inventory(const arr: T2DBooleanArray; var items: TBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory6, 'function T2DArray_Inventory(const arr: T2DPointArray; var items: TPointArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory7, 'function T2DArray_Inventory(const arr: T2DBoxArray; var items: TBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory8, 'function T2DArray_Inventory(const arr: T2DRangeArray; var items: TRangeArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory9, 'function T2DArray_Inventory(const arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory10, 'function T2DArray_Inventory(const arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory11, 'function T2DArray_Inventory(const arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory12, 'function T2DArray_Inventory(const arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory13, 'function T2DArray_Inventory(const arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory14, 'function T2DArray_Inventory(const arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory15, 'function T2DArray_Inventory(const arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Inventory16, 'function T2DArray_Inventory(const arr: T2DRangeArray): Int64; overload;');

  AddFunction(@T2DArray_TArray1, 'function T2DArray_TArray(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_TArray2, 'function T2DArray_TArray(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_TArray3, 'function T2DArray_TArray(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_TArray4, 'function T2DArray_TArray(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_TArray5, 'function T2DArray_TArray(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_TArray6, 'function T2DArray_TArray(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_TArray7, 'function T2DArray_TArray(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_TArray8, 'function T2DArray_TArray(const arr: T2DRangeArray): TRangeArray; overload;');

  AddFunction(@T2DArray_Unwrap1, 'function T2DArray_Unwrap(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_Unwrap2, 'function T2DArray_Unwrap(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_Unwrap3, 'function T2DArray_Unwrap(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_Unwrap4, 'function T2DArray_Unwrap(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_Unwrap5, 'function T2DArray_Unwrap(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_Unwrap6, 'function T2DArray_Unwrap(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_Unwrap7, 'function T2DArray_Unwrap(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_Unwrap8, 'function T2DArray_Unwrap(const arr: T2DRangeArray): TRangeArray; overload;');

  AddFunction(@T2DArray_Kill1, 'function T2DArray_Kill(var arr: T2DIntegerArray): Integer; overload;');
  AddFunction(@T2DArray_Kill2, 'function T2DArray_Kill(var arr: T2DDoubleArray): Integer; overload;');
  AddFunction(@T2DArray_Kill3, 'function T2DArray_Kill(var arr: T2DStringArray): Integer; overload;');
  AddFunction(@T2DArray_Kill4, 'function T2DArray_Kill(var arr: T2DCharArray): Integer; overload;');
  AddFunction(@T2DArray_Kill5, 'function T2DArray_Kill(var arr: T2DBooleanArray): Integer; overload;');
  AddFunction(@T2DArray_Kill6, 'function T2DArray_Kill(var arr: T2DPointArray): Integer; overload;');
  AddFunction(@T2DArray_Kill7, 'function T2DArray_Kill(var arr: T2DBoxArray): Integer; overload;');
  AddFunction(@T2DArray_Kill8, 'function T2DArray_Kill(var arr: T2DRangeArray): Integer; overload;');
  AddFunction(@T2DArray_Kill9, 'function T2DArray_Kill(var arr: T2DIntegerArray; const k2D: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Kill10, 'function T2DArray_Kill(var arr: T2DDoubleArray; const k2D: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Kill11, 'function T2DArray_Kill(var arr: T2DStringArray; const k2D: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Kill12, 'function T2DArray_Kill(var arr: T2DCharArray; const k2D: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Kill13, 'function T2DArray_Kill(var arr: T2DBooleanArray; const k2D: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Kill14, 'function T2DArray_Kill(var arr: T2DPointArray; const k2D: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Kill15, 'function T2DArray_Kill(var arr: T2DBoxArray; const k2D: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Kill16, 'function T2DArray_Kill(var arr: T2DRangeArray; const k2D: TIntegerArray): Int64; overload;');
  
  AddFunction(@T2DArray_Free1, 'function T2DArray_Free(var arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Free2, 'function T2DArray_Free(var arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Free3, 'function T2DArray_Free(var arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Free4, 'function T2DArray_Free(var arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Free5, 'function T2DArray_Free(var arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Free6, 'function T2DArray_Free(var arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Free7, 'function T2DArray_Free(var arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Free8, 'function T2DArray_Free(var arr: T2DRangeArray): Int64; overload;');
  
  AddFunction(@T2DArray_Recreate1, 'function T2DArray_Recreate(var arr: T2DIntegerArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@T2DArray_Recreate2, 'function T2DArray_Recreate(var arr: T2DDoubleArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@T2DArray_Recreate3, 'function T2DArray_Recreate(var arr: T2DStringArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@T2DArray_Recreate4, 'function T2DArray_Recreate(var arr: T2DCharArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@T2DArray_Recreate5, 'function T2DArray_Recreate(var arr: T2DBooleanArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@T2DArray_Recreate6, 'function T2DArray_Recreate(var arr: T2DPointArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@T2DArray_Recreate7, 'function T2DArray_Recreate(var arr: T2DBoxArray; const arrSize: Integer): Boolean; overload;');
  AddFunction(@T2DArray_Recreate8, 'function T2DArray_Recreate(var arr: T2DRangeArray; const arrSize: Integer): Boolean; overload;');

  AddFunction(@T2DArray_Reset1, 'function T2DArray_Reset(var arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Reset2, 'function T2DArray_Reset(var arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Reset3, 'function T2DArray_Reset(var arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Reset4, 'function T2DArray_Reset(var arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Reset5, 'function T2DArray_Reset(var arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Reset6, 'function T2DArray_Reset(var arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Reset7, 'function T2DArray_Reset(var arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Reset8, 'function T2DArray_Reset(var arr: T2DRangeArray): Int64; overload;');
  
  AddFunction(@T2DArray_Destroy1, 'function T2DArray_Destroy(var arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Destroy2, 'function T2DArray_Destroy(var arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Destroy3, 'function T2DArray_Destroy(var arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Destroy4, 'function T2DArray_Destroy(var arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Destroy5, 'function T2DArray_Destroy(var arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Destroy6, 'function T2DArray_Destroy(var arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Destroy7, 'function T2DArray_Destroy(var arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Destroy8, 'function T2DArray_Destroy(var arr: T2DRangeArray): Int64; overload;');
  
  AddFunction(@T2DArray_Pull1, 'function T2DArray_Pull(var arr: T2DIntegerArray): T2DIntegerArray; overload;');
  AddFunction(@T2DArray_Pull2, 'function T2DArray_Pull(var arr: T2DDoubleArray): T2DDoubleArray; overload;');
  AddFunction(@T2DArray_Pull3, 'function T2DArray_Pull(var arr: T2DStringArray): T2DStringArray; overload;');
  AddFunction(@T2DArray_Pull4, 'function T2DArray_Pull(var arr: T2DCharArray): T2DCharArray; overload;');
  AddFunction(@T2DArray_Pull5, 'function T2DArray_Pull(var arr: T2DBooleanArray): T2DBooleanArray; overload;');
  AddFunction(@T2DArray_Pull6, 'function T2DArray_Pull(var arr: T2DPointArray): T2DPointArray; overload;');
  AddFunction(@T2DArray_Pull7, 'function T2DArray_Pull(var arr: T2DBoxArray): T2DBoxArray; overload;');
  AddFunction(@T2DArray_Pull8, 'function T2DArray_Pull(var arr: T2DRangeArray): T2DRangeArray; overload;');
end;
