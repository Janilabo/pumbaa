{$I wrappers.inc}

procedure AddTypes;
begin
  AddType('T2DBooleanArray', 'TBooleanMatrix;');
  AddType('T2DDoubleArray', 'TDoubleMatrix;');
  AddType('TCharArray', 'array of Char;');
  AddType('T2DCharArray', 'array of TCharArray;');
  AddType('T2DBoxArray', 'array of TBoxArray;');
  AddType('TRange', 'record start, stop: Integer; end;');
  AddType('TRangeArray', 'array of TRange;');
  AddType('T2DRangeArray', 'array of TRangeArray;');
end;

procedure AddFunctions;
begin
  AddFunction(@Double_Inc, 'function Double_Inc(var x: Double; const N: Double = 1): Double;');
  AddFunction(@Double_Dec, 'function Double_Dec(var x: Double; const N: Double = 1): Double;');
  AddFunction(@Double_Increase, 'function Double_Increase(var x: Double; const N: Double = 1): Double;');
  AddFunction(@Double_Decrease, 'function Double_Decrease(var x: Double; const N: Double = 1): Double;');
  AddFunction(@Double_Digits, 'function Double_Digits(const x: Double): TIntegerArray;');
  AddFunction(@Double_NegA, 'function Double_NegA(const x: Double): Double;');
  AddFunction(@Double_Neg, 'function Double_Neg(const x: Double): Double;');
  AddFunction(@Double_Negative, 'function Double_Negative(const x: Double): Boolean;');
  AddFunction(@Double_Positive, 'function Double_Positive(const x: Double): Boolean;');
  AddFunction(@Double_Neutral, 'function Double_Neutral(const x: Double): Boolean;');
  AddFunction(@Double_MinDecimal, 'function Double_MinDecimal(const x: Double): Double;');
  AddFunction(@Double_MaxDecimal, 'function Double_MaxDecimal(const x: Double): Double;');
  AddFunction(@Double_Copy, 'function Double_Copy(const x: Double; const a: Int32): Double;');
  AddFunction(@Double_Compare, 'function Double_Compare(const x, T: Double): Int32;');
  AddFunction(@Double_Distance, 'function Double_Distance(const x, T: Double): Double;');
  AddFunction(@Double_Difference, 'function Double_Difference(const x, T: Double): Double;');
  AddFunction(@Double_Opposite, 'function Double_Opposite(const x: Double): Double;');
  AddFunction(@Double_Sign, 'function Double_Sign(const x: Double): Int32;');
  AddFunction(@Double_Percent, 'function Double_Percent(const source, position: Double): Double;');
  AddFunction(@Double_Percentage, 'function Double_Percentage(const source, percent: Double): Double;');
  AddFunction(@Double_Oversize, 'function Double_Oversize(const x, limit: Double): Boolean;');
  AddFunction(@Double_Undersize, 'function Double_Undersize(const x, limit: Double): Boolean;');

  AddFunction(@Int32_Inc, 'function Int32_Inc(var x: Int32; const N: Int32 = 1): Int32;');
  AddFunction(@Int32_Dec, 'function Int32_Dec(var x: Int32; const N: Int32 = 1): Int32;');
  AddFunction(@Int32_Increase, 'function Int32_Increase(var x: Int32; const N: Int32 = 1): Int32;');
  AddFunction(@Int32_Decrease, 'function Int32_Decrease(var x: Int32; const N: Int32 = 1): Int32;');
  AddFunction(@Int32_DigitCount, 'function Int32_DigitCount(const x: Int32): Int32;');
  AddFunction(@Int32_Digitz, 'function Int32_Digitz(const x: Int32): TIntegerArray;');
  AddFunction(@Int32_Digits, 'function Int32_Digits(const x: Int32): TIntegerArray;');
  AddFunction(@Int32_NegA, 'function Int32_NegA(const x: Int32): Int32;');
  AddFunction(@Int32_Neg, 'function Int32_Neg(const x: Int32): Int32;');
  AddFunction(@Int32_Negative, 'function Int32_Negative(const x: Int32): Boolean;');
  AddFunction(@Int32_Positive, 'function Int32_Positive(const x: Int32): Boolean;');
  AddFunction(@Int32_Neutral, 'function Int32_Neutral(const x: Int32): Boolean;');
  AddFunction(@Int32_Compare, 'function Int32_Compare(const x, T: Int32): Int32;');
  AddFunction(@Int32_Distance, 'function Int32_Distance(const x, T: Int32): Int32;');
  AddFunction(@Int32_Difference, 'function Int32_Difference(const x, T: Int32): Int32;');
  AddFunction(@Int32_Opposite, 'function Int32_Opposite(const x: Int32): Int32;');
  AddFunction(@Int32_Sign, 'function Int32_Sign(const x: Int32): Int32;');
  AddFunction(@Int32_Oversize, 'function Int32_Oversize(const x, limit: Int64): Boolean;');
  AddFunction(@Int32_Undersize, 'function Int32_Undersize(const x, limit: Int64): Boolean;');

  AddFunction(@Int64_Inc, 'function Int64_Inc(var x: Int64; const N: Int64 = 1): Int64;');
  AddFunction(@Int64_Dec, 'function Int64_Dec(var x: Int64; const N: Int64 = 1): Int64;');
  AddFunction(@Int64_Increase, 'function Int64_Increase(var x: Int64; const N: Int64 = 1): Int64;');
  AddFunction(@Int64_Decrease, 'function Int64_Decrease(var x: Int64; const N: Int64 = 1): Int64;');
  AddFunction(@Int64_DigitCount, 'function Int64_DigitCount(const x: Int64): Int32;');
  AddFunction(@Int64_Digitz, 'function Int64_Digitz(const x: Int64): TIntegerArray;');
  AddFunction(@Int64_Digits, 'function Int64_Digits(const x: Int64): TIntegerArray;');
  AddFunction(@Int64_Compare, 'function Int64_Compare(const x, T: Int64): Int32;');
  AddFunction(@Int64_Distance, 'function Int64_Distance(const x, T: Int64): Int64;');
  AddFunction(@Int64_Difference, 'function Int64_Difference(const x, T: Int64): Int64;');
  AddFunction(@Int64_Opposite, 'function Int64_Opposite(const x: Int64): Int64;');
  AddFunction(@Int64_Sign, 'function Int64_Sign(const x: Int64): Int32;');
  AddFunction(@Int64_Oversize, 'function Int64_Oversize(const x, limit: Int64): Boolean;');
  AddFunction(@Int64_Undersize, 'function Int64_Undersize(const x, limit: Int64): Boolean;');

  AddFunction(@String_At, 'function String_At(const str, s: string; const index: Int32 = 1): Boolean;');
  AddFunction(@String_Get, 'function String_Get(const str: string; const index, size: Int32): string;');
  AddFunction(@String_Pos, 'function String_Pos(const str, s: string; const offset: Int32 = 0): Int32;');
  AddFunction(@String_PosLast, 'function String_PosLast(const str, s: string; const offset: Int32 = -1): Int32;');
  AddFunction(@String_Position, 'function String_Position(const str, s: string; const offset: Int32 = 0): Int32;');
  AddFunction(@String_Between, 'function String_Between(const str, s1, s2: string; const offset: Int32 = 0): string;');
  AddFunction(@String_Count, 'function String_Count(const str, s: string; const overlap: Boolean = True): Int32;');
  AddFunction(@String_FromLeft, 'function String_FromLeft(const str: string; const x: Int32): string;');
  AddFunction(@String_FromRight, 'function String_FromRight(const str: string; const x: Int32): string;');
  AddFunction(@String_Explode, 'function String_Explode(const str, d: string; const limit: Int32 = -1): TStringArray;');
  AddFunction(@String_Exploded, 'function String_Exploded(const str: string; const d: TStringArray; const limit: Int32 = -1): TStringArray;');
  AddFunction(@String_Slice, 'function String_Slice(const str: string; const a, b: Int32): string;');
  AddFunction(@String_Chunk, 'function String_Chunk(const str: string; const a, b: Int32): string;');
  AddFunction(@String_Reverse, 'function String_Reverse(var str: string): Boolean;');
  AddFunction(@String_Flip, 'function String_Flip(const str: string): string;');
  AddFunction(@String_Reversed, 'function String_Reversed(const str: string): string;');
  AddFunction(@String_StartsWith, 'function String_StartsWith(const str, s: string): Boolean;');
  AddFunction(@String_EndsWith, 'function String_EndsWith(const str, s: string): Boolean;');
  AddFunction(@String_Begin, 'function String_Begin(var str: string; const s: string; const offset: Int32 = 0): Boolean;');
  AddFunction(@String_End, 'function String_End(var str: string; const s: string; const offset: Int32 = -1): Boolean;');
  AddFunction(@String_Behind, 'function String_Behind(const str: string; const position, size: Int32): string;');
  AddFunction(@String_Ahead, 'function String_Ahead(const str: string; const position, size: Int32): string;');
  AddFunction(@String_After, 'function String_After(const str, s: string; offset: Int32 = -1): string;');
  AddFunction(@String_Before, 'function String_Before(const str, s: string; offset: Int32 = -1): string;');
  AddFunction(@String_AfterLast, 'function String_AfterLast(const str, s: string; const offset: Int32 = -1): string;');
  AddFunction(@String_BeforeLast, 'function String_BeforeLast(const str, s: string; const offset: Int32 = -1): string;');
  AddFunction(@String_Center, 'function String_Center(const str: string; const size: Int32; const fill: Char = #32): string;');
  AddFunction(@String_Stuff, 'function String_Stuff(const str, s: string; const iFrom, iCount: Integer): string;');
  AddFunction(@String_Duplicate, 'function String_Duplicate(const str: string; const count: Int32 = 2): string;');
  AddFunction(@String_Duplicated, 'function String_Duplicated(const str: string; const count: Int32; const glue: string): string;');
  AddFunction(@String_Compare, 'function String_Compare(const str, T: string): Int32;');
  AddFunction(@String_Quotatation, 'function String_Quotatation(const str: string): string;');
  AddFunction(@String_PregQuote, 'function String_PregQuote(const str: string; const regex: string = ''.\+*?[^]$(){}=!<>|:-''): string;');
  AddFunction(@String_TrimLeft, 'function String_TrimLeft(const str: string; const t: Char = #32): string;');
  AddFunction(@String_TrimRight, 'function String_TrimRight(const str: string; const t: Char = #32): string;');
  AddFunction(@String_Trim, 'function String_Trim(const str: string; const t: Char = #32): string;');

  AddFunction(@Boolean_Random, 'function Boolean_Random: Boolean;');
  AddFunction(@Boolean_X1, 'function Boolean_X(const X: Boolean; const trueX, falseX: Boolean): Boolean; overload;');
  AddFunction(@Boolean_X2, 'function Boolean_X(const X: Boolean; const trueX, falseX: Int32): Int32; overload;');
  AddFunction(@Boolean_X3, 'function Boolean_X(const X: Boolean; const trueX, falseX: Int64): Int64; overload;');
  AddFunction(@Boolean_X4, 'function Boolean_X(const X: Boolean; const trueX, falseX: Double): Double; overload;');
  AddFunction(@Boolean_X5, 'function Boolean_X(const X: Boolean; const trueX, falseX: string): string; overload;');
  AddFunction(@Boolean_X6, 'function Boolean_X(const X: Boolean; const trueX, falseX: Char): Char; overload;');
  AddFunction(@Boolean_X7, 'function Boolean_X(const X: Boolean; const trueX, falseX: TPoint): TPoint; overload;');
  AddFunction(@Boolean_X8, 'function Boolean_X(const X: Boolean; const trueX, falseX: TBox): TBox; overload;');
  AddFunction(@Boolean_X9, 'function Boolean_X(const X: Boolean; const trueX, falseX: TRange): TRange; overload;');

  AddFunction(@TPoint_To, 'function TPoint_To(const X, Y: Int32): TPoint;');
  AddFunction(@TPoint_At, 'function TPoint_At(const X, Y: Int32): TPoint;');
  AddFunction(@TPoint_InBox, 'function TPoint_InBox(const pt: TPoint; const bx: TBox): Boolean;');
  AddFunction(@TPoint_InCircle, 'function TPoint_InCircle(const pt, center: TPoint; const radius: Double): Boolean;');
  AddFunction(@TPoint_InEllipse, 'function TPoint_InEllipse(const pt, center: TPoint; const XRadius, YRadius: Double): Boolean;');
  AddFunction(@TPoint_AngleDegrees, 'function TPoint_AngleDegrees(const source, target: TPoint; const compass: Boolean = False): Double;');
  AddFunction(@TPoint_AngleRadians, 'function TPoint_AngleRadians(const source, target: TPoint): Double;');
  AddFunction(@TPoint_DistEuclidean, 'function TPoint_DistEuclidean(const source, target: TPoint): Double;');
  AddFunction(@TPoint_DistEuclidean2, 'function TPoint_DistEuclidean2(const source, target: TPoint): Double;');
  AddFunction(@TPoint_DistSquaredEuclidean, 'function TPoint_DistSquaredEuclidean(const source, target: TPoint): Double;');
  AddFunction(@TPoint_DistManhattan, 'function TPoint_DistManhattan(const source, target: TPoint): Double;');
  AddFunction(@TPoint_DistChebyshev, 'function TPoint_DistChebyshev(const source, target: TPoint): Double;');
  AddFunction(@TPoint_Grid, 'function TPoint_Grid(const pt: TPoint; const rows, columns: Int32; const spaceVertical: Int32 = 0; const spaceHorizontal: Int32 = 0): TPointArray;');
  AddFunction(@TPoint_Row, 'function TPoint_Row(const pt: TPoint; const cells: Int32; const space: Int32 = 0): TPointArray;');
  AddFunction(@TPoint_Column, 'function TPoint_Column(const pt: TPoint; const cells: Int32; const space: Int32 = 0): TPointArray;');

  AddFunction(@TBox_Build1, 'function TBox_Build(const X1, Y1, X2, Y2: Int32): TBox; overload;');
  AddFunction(@TBox_Build2, 'function TBox_Build(const a, b: TPoint): TBox; overload;');
  AddFunction(@TBox_Create1, 'function TBox_Create(const X1, Y1, X2, Y2: Int32): TBox; overload;');
  AddFunction(@TBox_Create2, 'function TBox_Create(const a, b: TPoint): TBox; overload;');
  AddFunction(@TBox_Form1, 'function TBox_Form(const XY: Int32 = 0): TBox; overload;');
  AddFunction(@TBox_Form2, 'function TBox_Form(const XY: TPoint): TBox; overload;');
  AddFunction(@TBox_At1, 'function TBox_At(const pt: TPoint; const radius: Int32 = 0): TBox; overload;');
  AddFunction(@TBox_At2, 'function TBox_At(const pt: TPoint; const wRadius, hRadius: Int32): TBox; overload;');
  AddFunction(@TBox_To1, 'function TBox_To(const pt: TPoint; const size: Int32 = 1): TBox; overload;');
  AddFunction(@TBox_To2, 'function TBox_To(const pt: TPoint; const width, height: Int32): TBox; overload;');
  AddFunction(@TBox_W1, 'function TBox_W(const bx: TBox): Int32; overload;');
  AddFunction(@TBox_W2, 'function TBox_W(var bx: TBox; const width: Int32): Int32; overload;');
  AddFunction(@TBox_Width1, 'function TBox_Width(const bx: TBox): Int32; overload;');
  AddFunction(@TBox_Width2, 'function TBox_Width(var bx: TBox; const width: Int32): Int32; overload;');
  AddFunction(@TBox_H1, 'function TBox_H(const bx: TBox): Int32; overload;');
  AddFunction(@TBox_H2, 'function TBox_H(var bx: TBox; const height: Int32): Int32; overload;');
  AddFunction(@TBox_Height1, 'function TBox_Height(const bx: TBox): Int32; overload;');
  AddFunction(@TBox_Height2, 'function TBox_Height(var bx: TBox; const height: Int32): Int32; overload;');
  AddFunction(@TBox_Expand, 'function TBox_Expand(const bx: TBox; const change: Int32 = 1): TBox;');
  AddFunction(@TBox_Shrink, 'function TBox_Shrink(const bx: TBox; const change: Int32 = 1): TBox;');
  AddFunction(@TBox_Resize, 'function TBox_Resize(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeVertically, 'function TBox_ResizeVertically(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeHorizontally, 'function TBox_ResizeHorizontally(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeTop, 'function TBox_ResizeTop(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeBottom, 'function TBox_ResizeBottom(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeLeft, 'function TBox_ResizeLeft(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeRight, 'function TBox_ResizeRight(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeTopLeft, 'function TBox_ResizeTopLeft(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeTopRight, 'function TBox_ResizeTopRight(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeBottomRight, 'function TBox_ResizeBottomRight(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_ResizeBottomLeft, 'function TBox_ResizeBottomLeft(const bx: TBox; const change: Int32): TBox;');
  AddFunction(@TBox_Equal, 'function TBox_Equal(a, b: TBox): Boolean;');
  AddFunction(@TBox_Contains1, 'function TBox_Contains(const bx: TBox; const pt: TPoint): Boolean; overload;');
  AddFunction(@TBox_Contains2, 'function TBox_Contains(const bx, x: TBox): Boolean; overload;');
  AddFunction(@TBox_In1, 'function TBox_In(const bx, area: TBox): Boolean; overload;');
  AddFunction(@TBox_In2, 'function TBox_In(const bx: TBox; const areas: TBoxArray): Boolean; overload;');
  AddFunction(@TBox_Inside1, 'function TBox_Inside(const bx, area: TBox): Boolean; overload;');
  AddFunction(@TBox_Inside2, 'function TBox_Inside(const bx: TBox; const areas: TBoxArray): Boolean; overload;');
  AddFunction(@TBox_Area, 'function TBox_Area(const bx: TBox): Int32;');
  AddFunction(@TBox_Center, 'function TBox_Center(const bx: TBox): TPoint;');
  AddFunction(@TBox_Envelope, 'function TBox_Envelope(const a, b: TBox): TBox;');
  AddFunction(@TBox_Overlap, 'function TBox_Overlap(const a, b: TBox): Boolean;');
  AddFunction(@TBox_Intersection, 'function TBox_Intersection(const a, b: TBox): TBox;');
  AddFunction(@TBox_Intersect, 'function TBox_Intersect(const a, b: TBox; var intersection: TBox): Boolean;');
  AddFunction(@TBox_Union, 'function TBox_Union(const a, b: TBox): TBox;');
  AddFunction(@TBox_Size, 'function TBox_Size(const bx: TBox; var width, height: Int32): Int32;');
  AddFunction(@TBox_Valid, 'function TBox_Valid(const bx: TBox): Boolean;');
  AddFunction(@TBox_Invalid, 'function TBox_Invalid(const bx: TBox): Boolean;');
  AddFunction(@TBox_Similar1, 'function TBox_Similar(const a, b: TBox; const maxWDiff, maxHDiff: Int32): Boolean; overload;');
  AddFunction(@TBox_Similar2, 'function TBox_Similar(const a, b: TBox; const diff: Int32): Boolean; overload;');
  AddFunction(@TBox_Fix, 'function TBox_Fix(var bx: TBox): Boolean;');
  AddFunction(@TBox_Constraint, 'function TBox_Constraint(var bx: TBox; const area: TBox): Boolean;');
  AddFunction(@TBox_Clip, 'function TBox_Clip(const bx: TBox; const area: TBox): TBox;');
  AddFunction(@TBox_Restrict, 'function TBox_Restrict(var bx: TBox; const area: TBox): Boolean;');
  AddFunction(@TBox_Clamp, 'function TBox_Clamp(const bx, area: TBox): TBox;');
  AddFunction(@TBox_Points, 'function TBox_Points(const bx: TBox): TPointArray;');
  AddFunction(@TBox_TPointArray, 'function TBox_TPointArray(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Diagonal, 'function TBox_Diagonal(const bx: TBox): Double;');
  AddFunction(@TBox_Grid, 'function TBox_Grid(const bx: TBox; const rows, columns: Int32; const spaceVertical: Int32 = 0; const spaceHorizontal: Int32 = 0): TBoxArray;');
  AddFunction(@TBox_Row, 'function TBox_Row(const bx: TBox; const cells: Int32; const space: Int32 = 0): TBoxArray;');
  AddFunction(@TBox_Column, 'function TBox_Column(const bx: TBox; const cells: Int32; const space: Int32 = 0): TBoxArray;');
  AddFunction(@TBox_CornerPoints, 'function TBox_CornerPoints(const bx: TBox): TPointArray;');
  AddFunction(@TBox_Corners, 'function TBox_Corners(const bx: TBox): TPointArray;');
  AddFunction(@TBox_SimilarSize1, 'function TBox_SimilarSize(const a, b: TBox; const widthDifferency, heightDifferency: Int32): Boolean; overload;');
  AddFunction(@TBox_SimilarSize1, 'function TBox_SimilarSize(const a, b: TBox; const differency: Integer): Boolean; overload;');
  AddFunction(@TBox_Centered, 'function TBox_Centered(const bx, area: TBox): TBox;');
  AddFunction(@TBox_CenterVertically, 'function TBox_CenterVertically(const bx, area: TBox): TBox;');
  AddFunction(@TBox_CenterHorizontally, 'function TBox_CenterHorizontally(const bx, area: TBox): TBox;');

  AddFunction(@TRange_Neutral, 'function TRange_Neutral(const range: TRange): Boolean;');
  AddFunction(@TRange_Ascending, 'function TRange_Ascending(const range: TRange): Boolean;');
  AddFunction(@TRange_Descending, 'function TRange_Descending(const range: TRange): Boolean;');
  AddFunction(@TRange_Create, 'function TRange_Create(const start: Int32 = 0; const stop: Int32 = 0): TRange;');
  AddFunction(@TRange_Build, 'function TRange_Build(const start: Int32 = 0; const stop: Int32 = 0): TRange;');
  AddFunction(@TRange_Grab, 'function TRange_Grab(const range: TRange): TRange;');
  AddFunction(@TRange_Size, 'function TRange_Size(const range: TRange): Int32;');
  AddFunction(@TRange_Length, 'function TRange_Length(const range: TRange): Int32;');
  AddFunction(@TRange_Min, 'function TRange_Min(const range: TRange): Int32;');
  AddFunction(@TRange_Minimum, 'function TRange_Minimum(const range: TRange): Int32;');
  AddFunction(@TRange_Max, 'function TRange_Max(const range: TRange): Int32;');
  AddFunction(@TRange_Maximum, 'function TRange_Maximum(const range: TRange): Int32;');
  AddFunction(@TRange_Digits, 'function TRange_Digits(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Ints, 'function TRange_Ints(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_TIntegerArray, 'function TRange_TIntegerArray(const range: TRange): TIntegerArray;');
  AddFunction(@TRange_Normalize, 'function TRange_Normalize(const range: TRange): TRange;');
  AddFunction(@TRange_Overlapping, 'function TRange_Overlapping(const a, b: TRange): Boolean;');
  AddFunction(@TRange_Overlap, 'function TRange_Overlap(const a, b: TRange): Boolean;');
  AddFunction(@TRange_Intersection, 'function TRange_Intersection(const a, b: TRange; const null: TRange): TRange;');
  AddFunction(@TRange_Intersect, 'function TRange_Intersect(const a, b: TRange; var intersection: TRange): Boolean;');
  AddFunction(@TRange_Union, 'function TRange_Union(const a, b: TRange): TRange;');
  AddFunction(@TRange_Shift, 'function TRange_Shift(const range: TRange; const delta: Int32): TRange;');
  AddFunction(@TRange_Contains, 'function TRange_Contains(const range, x: TRange): Boolean;');
  AddFunction(@TRange_Reversed, 'function TRange_Reversed(const range: TRange): TRange;');
  AddFunction(@TRange_Reverse, 'function TRange_Reverse(var range: TRange): Boolean;');
  AddFunction(@TRange_Equals, 'function TRange_Equals(const a, b: TRange): Boolean;');
  AddFunction(@TRange_Differs, 'function TRange_Differs(const a, b: TRange): Boolean;');
  AddFunction(@TRange_Equal, 'function TRange_Equal(const a, b: TRange): Boolean;');
  AddFunction(@TRange_Differ, 'function TRange_Differ(const a, b: TRange): Boolean;');
  AddFunction(@TRange_Clamp, 'function TRange_Clamp(const range, zone: TRange): TRange;');
  AddFunction(@TRange_ClampMax, 'function TRange_ClampMax(const range: TRange; const maximum: Int32): TRange;');
  AddFunction(@TRange_ClampMin, 'function TRange_ClampMin(const range: TRange; const minimum: Int32): TRange;');
  AddFunction(@TRange_Clip, 'function TRange_Clip(const range, zone: TRange): TRange;');
  AddFunction(@TRange_ClipMax, 'function TRange_ClipMax(const range: TRange; const maximum: Int32): TRange;');
  AddFunction(@TRange_ClipMin, 'function TRange_ClipMin(const range: TRange; const minimum: Int32): TRange;');
  AddFunction(@TRange_Restrict, 'function TRange_Restrict(var range: TRange; const zone: TRange): Boolean;');
  AddFunction(@TRange_RestrictMin, 'function TRange_RestrictMin(var range: TRange; const minimum: Int32): Boolean;');
  AddFunction(@TRange_RestrictMax, 'function TRange_RestrictMax(var range: TRange; const maximum: Int32): Boolean;');
  AddFunction(@TRange_Distribute, 'function TRange_Distribute(const range: TRange; const parts: Int32): TRangeArray;');
  AddFunction(@TRange_Partition, 'function TRange_Partition(const range: TRange; const size: Int32): TRangeArray;');
  AddFunction(@TRange_Divide, 'function TRange_Divide(const range: TRange; const size: Int32): TRangeArray;');
  AddFunction(@TRange_Touch, 'function TRange_Touch(const a, b: TRange): Boolean;');
  AddFunction(@TRange_Touches, 'function TRange_Touches(const a, b: TRange): Boolean;');
  AddFunction(@TRange_Distance, 'function TRange_Distance(const a, b: TRange): Int32;');
  AddFunction(@TRange_DistHausdorff, 'function TRange_DistHausdorff(const a, b: TRange): Int32;');
  AddFunction(@TRange_Digit, 'function TRange_Digit(const range: TRange; const x: Int32): Boolean;');
  AddFunction(@TRange_Value, 'function TRange_Value(const range: TRange; const x: Int32): Boolean;');

  AddFunction(@TIntegerArray_Descending, 'function TIntegerArray_Descending(const arr: TIntegerArray): Boolean;');
  AddFunction(@TIntegerArray_Ascending, 'function TIntegerArray_Ascending(const arr: TIntegerArray): Boolean;');
  AddFunction(@TIntegerArray_BubbleSort, 'function TIntegerArray_BubbleSort(var arr: TIntegerArray; const ascending: Boolean = True): Int32;');
  AddFunction(@TIntegerArray_BubbleSortOptimized, 'function TIntegerArray_BubbleSortOptimized(var arr: TIntegerArray; const ascending: Boolean = True): Int32;');
  AddFunction(@TIntegerArray_Bounds, 'function TIntegerArray_Bounds(const arr: TIntegerArray): TRange;');
  AddFunction(@TIntegerArray_Max, 'function TIntegerArray_Max(const arr: TIntegerArray): Int32;');
  AddFunction(@TIntegerArray_Min, 'function TIntegerArray_Min(const arr: TIntegerArray): Int32;');
  AddFunction(@TIntegerArray_Sum, 'function TIntegerArray_Sum(const arr: TIntegerArray): Int64;');
  AddFunction(@TIntegerArray_Density, 'function TIntegerArray_Density(const arr: TIntegerArray): Double;');
  AddFunction(@TIntegerArray_Mean, 'function TIntegerArray_Mean(const arr: TIntegerArray): Double;');
  AddFunction(@TIntegerArray_MostFrequent, 'function TIntegerArray_MostFrequent(const arr: TIntegerArray; const null: Int32 = -2147483648): Int32;');
  AddFunction(@TIntegerArray_LeastFrequent, 'function TIntegerArray_LeastFrequent(const arr: TIntegerArray; const null: Int32 = -2147483648): Int32;');
  
  AddFunction(@TPointArray_Bounds, 'function TPointArray_Bounds(const arr: TPointArray): TBox;');
  AddFunction(@TPointArray_Unique, 'function TPointArray_Unique(var arr: TPointArray): Int32;');
  AddFunction(@TPointArray_Uniqued, 'function TPointArray_Uniqued(const arr: TPointArray): TPointArray;');
  AddFunction(@TPointArray_Invert, 'function TPointArray_Invert(const arr: TPointArray): TPointArray;');
  AddFunction(@TPointArray_Edge, 'function TPointArray_Edge(const arr: TPointArray; const scan8Ways: Boolean = False): TPointArray;');
  AddFunction(@TPointArray_FloodFill1, 'function TPointArray_FloodFill(const arr: TPointArray; const start: TPoint; const area: TBox; const scan8W: Boolean = False): TPointArray; overload;');
  AddFunction(@TPointArray_FloodFill2, 'function TPointArray_FloodFill(const arr: TPointArray; const start: TPoint; const scan8W: Boolean = False): TPointArray; overload;');
  
  AddFunction(@TArray_Add_Int32, 'function TArray_Add(const arr: TIntegerArray; const item: Int32): TIntegerArray; overload;');
  AddFunction(@TArray_Add_Double, 'function TArray_Add(const arr: TDoubleArray; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Add_String, 'function TArray_Add(const arr: TStringArray; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Add_Char, 'function TArray_Add(const arr: TCharArray; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Add_Boolean, 'function TArray_Add(const arr: TBooleanArray; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Add_TPoint, 'function TArray_Add(const arr: TPointArray; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Add_TBox, 'function TArray_Add(const arr: TBoxArray; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Add_TRange, 'function TArray_Add(const arr: TRangeArray; const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Add_Int32_1, 'function TArray_Add(const arr: TIntegerArray; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Add_Double_1, 'function TArray_Add(const arr: TDoubleArray; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Add_String_1, 'function TArray_Add(const arr: TStringArray; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Add_Char_1, 'function TArray_Add(const arr: TCharArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Add_Boolean_1, 'function TArray_Add(const arr: TBooleanArray; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Add_TPoint_1, 'function TArray_Add(const arr: TPointArray; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Add_TBox_1, 'function TArray_Add(const arr: TBoxArray; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Add_TRange_1, 'function TArray_Add(const arr: TRangeArray; const items: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_AllEqual_Int32, 'function TArray_AllEqual(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual_Double, 'function TArray_AllEqual(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual_String, 'function TArray_AllEqual(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual_Char, 'function TArray_AllEqual(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual_Boolean, 'function TArray_AllEqual(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual_TPoint, 'function TArray_AllEqual(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual_TBox, 'function TArray_AllEqual(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_AllEqual_TRange, 'function TArray_AllEqual(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_AllSame_Int32, 'function TArray_AllSame(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_AllSame_Double, 'function TArray_AllSame(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_AllSame_String, 'function TArray_AllSame(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_AllSame_Char, 'function TArray_AllSame(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_AllSame_Boolean, 'function TArray_AllSame(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_AllSame_TPoint, 'function TArray_AllSame(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_AllSame_TBox, 'function TArray_AllSame(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_AllSame_TRange, 'function TArray_AllSame(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_AllUnique_Int32, 'function TArray_AllUnique(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique_Double, 'function TArray_AllUnique(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique_String, 'function TArray_AllUnique(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique_Char, 'function TArray_AllUnique(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique_Boolean, 'function TArray_AllUnique(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique_TPoint, 'function TArray_AllUnique(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique_TBox, 'function TArray_AllUnique(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_AllUnique_TRange, 'function TArray_AllUnique(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Append_Int32, 'function TArray_Append(var arr: TIntegerArray; const item: Int32): Int32; overload;');
  AddFunction(@TArray_Append_Double, 'function TArray_Append(var arr: TDoubleArray; const item: Double): Int32; overload;');
  AddFunction(@TArray_Append_String, 'function TArray_Append(var arr: TStringArray; const item: string): Int32; overload;');
  AddFunction(@TArray_Append_Char, 'function TArray_Append(var arr: TCharArray; const item: Char): Int32; overload;');
  AddFunction(@TArray_Append_Boolean, 'function TArray_Append(var arr: TBooleanArray; const item: Boolean): Int32; overload;');
  AddFunction(@TArray_Append_TPoint, 'function TArray_Append(var arr: TPointArray; const item: TPoint): Int32; overload;');
  AddFunction(@TArray_Append_TBox, 'function TArray_Append(var arr: TBoxArray; const item: TBox): Int32; overload;');
  AddFunction(@TArray_Append_TRange, 'function TArray_Append(var arr: TRangeArray; const item: TRange): Int32; overload;');
  AddFunction(@TArray_Append_Int32_1, 'function TArray_Append(var arr: TIntegerArray; const items: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Append_Double_1, 'function TArray_Append(var arr: TDoubleArray; const items: TDoubleArray): Int32; overload;');
  AddFunction(@TArray_Append_String_1, 'function TArray_Append(var arr: TStringArray; const items: TStringArray): Int32; overload;');
  AddFunction(@TArray_Append_Char_1, 'function TArray_Append(var arr: TCharArray; const items: TCharArray): Int32; overload;');
  AddFunction(@TArray_Append_Boolean_1, 'function TArray_Append(var arr: TBooleanArray; const items: TBooleanArray): Int32; overload;');
  AddFunction(@TArray_Append_TPoint_1, 'function TArray_Append(var arr: TPointArray; const items: TPointArray): Int32; overload;');
  AddFunction(@TArray_Append_TBox_1, 'function TArray_Append(var arr: TBoxArray; const items: TBoxArray): Int32; overload;');
  AddFunction(@TArray_Append_TRange_1, 'function TArray_Append(var arr: TRangeArray; const items: TRangeArray): Int32; overload;');

  AddFunction(@TArray_Build_Int32, 'function TArray_Build(const item: Int32; const size: Int32 = 1): TIntegerArray; overload;');
  AddFunction(@TArray_Build_Double, 'function TArray_Build(const item: Double; const size: Int32 = 1): TDoubleArray; overload;');
  AddFunction(@TArray_Build_String, 'function TArray_Build(const item: string; const size: Int32 = 1): TStringArray; overload;');
  AddFunction(@TArray_Build_Char, 'function TArray_Build(const item: Char; const size: Int32 = 1): TCharArray; overload;');
  AddFunction(@TArray_Build_Boolean, 'function TArray_Build(const item: Boolean; const size: Int32 = 1): TBooleanArray; overload;');
  AddFunction(@TArray_Build_TPoint, 'function TArray_Build(const item: TPoint; const size: Int32 = 1): TPointArray; overload;');
  AddFunction(@TArray_Build_TBox, 'function TArray_Build(const item: TBox; const size: Int32 = 1): TBoxArray; overload;');
  AddFunction(@TArray_Build_TRange, 'function TArray_Build(const item: TRange; const size: Int32 = 1): TRangeArray; overload;');

  AddFunction(@TArray_BuiltWith_Int32, 'function TArray_BuiltWith(const arr, allowed: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith_Double, 'function TArray_BuiltWith(const arr, allowed: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith_String, 'function TArray_BuiltWith(const arr, allowed: TStringArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith_Char, 'function TArray_BuiltWith(const arr, allowed: TCharArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith_Boolean, 'function TArray_BuiltWith(const arr, allowed: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith_TPoint, 'function TArray_BuiltWith(const arr, allowed: TPointArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith_TBox, 'function TArray_BuiltWith(const arr, allowed: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWith_TRange, 'function TArray_BuiltWith(const arr, allowed: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_BuiltWithout_Int32, 'function TArray_BuiltWithout(const arr, forbidden: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout_Double, 'function TArray_BuiltWithout(const arr, forbidden: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout_String, 'function TArray_BuiltWithout(const arr, forbidden: TStringArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout_Char, 'function TArray_BuiltWithout(const arr, forbidden: TCharArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout_Boolean, 'function TArray_BuiltWithout(const arr, forbidden: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout_TPoint, 'function TArray_BuiltWithout(const arr, forbidden: TPointArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout_TBox, 'function TArray_BuiltWithout(const arr, forbidden: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_BuiltWithout_TRange, 'function TArray_BuiltWithout(const arr, forbidden: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Clone_Int32, 'function TArray_Clone(const arr: TIntegerArray; const startIndex: Int32 = 0; const count: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Clone_Double, 'function TArray_Clone(const arr: TDoubleArray; const startIndex: Int32 = 0; const count: Int32 = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Clone_String, 'function TArray_Clone(const arr: TStringArray; const startIndex: Int32 = 0; const count: Int32 = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Clone_Char, 'function TArray_Clone(const arr: TCharArray; const startIndex: Int32 = 0; const count: Int32 = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Clone_Boolean, 'function TArray_Clone(const arr: TBooleanArray; const startIndex: Int32 = 0; const count: Int32 = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Clone_TPoint, 'function TArray_Clone(const arr: TPointArray; const startIndex: Int32 = 0; const count: Int32 = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Clone_TBox, 'function TArray_Clone(const arr: TBoxArray; const startIndex: Int32 = 0; const count: Int32 = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Clone_TRange, 'function TArray_Clone(const arr: TRangeArray; const startIndex: Int32 = 0; const count: Int32 = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Combine_Int32, 'function TArray_Combine(const a, b: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Combine_Double, 'function TArray_Combine(const a, b: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Combine_String, 'function TArray_Combine(const a, b: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Combine_Char, 'function TArray_Combine(const a, b: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Combine_Boolean, 'function TArray_Combine(const a, b: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Combine_TPoint, 'function TArray_Combine(const a, b: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Combine_TBox, 'function TArray_Combine(const a, b: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Combine_TRange, 'function TArray_Combine(const a, b: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Contains_Int32, 'function TArray_Contains(const arr: TIntegerArray; const item: Int32; const start: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Contains_Double, 'function TArray_Contains(const arr: TDoubleArray; const item: Double; const start: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Contains_String, 'function TArray_Contains(const arr: TStringArray; const item: string; const start: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Contains_Char, 'function TArray_Contains(const arr: TCharArray; const item: Char; const start: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Contains_Boolean, 'function TArray_Contains(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Contains_TPoint, 'function TArray_Contains(const arr: TPointArray; const item: TPoint; const start: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Contains_TBox, 'function TArray_Contains(const arr: TBoxArray; const item: TBox; const start: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Contains_TRange, 'function TArray_Contains(const arr: TRangeArray; const item: TRange; const start: Int32 = 0): Boolean; overload;');

  AddFunction(@TArray_Copy_Int32, 'function TArray_Copy(const arr: TIntegerArray; const index: Int32 = 0; const count: Int32 = -1): TIntegerArray; overload;');
  AddFunction(@TArray_Copy_Double, 'function TArray_Copy(const arr: TDoubleArray; const index: Int32 = 0; const count: Int32 = -1): TDoubleArray; overload;');
  AddFunction(@TArray_Copy_String, 'function TArray_Copy(const arr: TStringArray; const index: Int32 = 0; const count: Int32 = -1): TStringArray; overload;');
  AddFunction(@TArray_Copy_Char, 'function TArray_Copy(const arr: TCharArray; const index: Int32 = 0; const count: Int32 = -1): TCharArray; overload;');
  AddFunction(@TArray_Copy_Boolean, 'function TArray_Copy(const arr: TBooleanArray; const index: Int32 = 0; const count: Int32 = -1): TBooleanArray; overload;');
  AddFunction(@TArray_Copy_TPoint, 'function TArray_Copy(const arr: TPointArray; const index: Int32 = 0; const count: Int32 = -1): TPointArray; overload;');
  AddFunction(@TArray_Copy_TBox, 'function TArray_Copy(const arr: TBoxArray; const index: Int32 = 0; const count: Int32 = -1): TBoxArray; overload;');
  AddFunction(@TArray_Copy_TRange, 'function TArray_Copy(const arr: TRangeArray; const index: Int32 = 0; const count: Int32 = -1): TRangeArray; overload;');
  AddFunction(@TArray_Copy_Int32_1, 'function TArray_Copy(const arr: TIntegerArray; const IDs: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Copy_Double_1, 'function TArray_Copy(const arr: TDoubleArray; const IDs: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_Copy_String_1, 'function TArray_Copy(const arr: TStringArray; const IDs: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_Copy_Char_1, 'function TArray_Copy(const arr: TCharArray; const IDs: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_Copy_Boolean_1, 'function TArray_Copy(const arr: TBooleanArray; const IDs: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_Copy_TPoint_1, 'function TArray_Copy(const arr: TPointArray; const IDs: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_Copy_TBox_1, 'function TArray_Copy(const arr: TBoxArray; const IDs: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_Copy_TRange_1, 'function TArray_Copy(const arr: TRangeArray; const IDs: TIntegerArray): TRangeArray; overload;');

  AddFunction(@TArray_Create_Int32, 'function TArray_Create(const size: Int32; const item: Int32): TIntegerArray; overload;');
  AddFunction(@TArray_Create_Double, 'function TArray_Create(const size: Int32; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Create_String, 'function TArray_Create(const size: Int32; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Create_Char, 'function TArray_Create(const size: Int32; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Create_Boolean, 'function TArray_Create(const size: Int32; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Create_TPoint, 'function TArray_Create(const size: Int32; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Create_TBox, 'function TArray_Create(const size: Int32; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Create_TRange, 'function TArray_Create(const size: Int32; const item: TRange): TRangeArray; overload;');

  AddFunction(@TArray_Delete_Int32, 'function TArray_Delete(var arr: TIntegerArray; const index: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Delete_Double, 'function TArray_Delete(var arr: TDoubleArray; const index: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Delete_String, 'function TArray_Delete(var arr: TStringArray; const index: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Delete_Char, 'function TArray_Delete(var arr: TCharArray; const index: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Delete_Boolean, 'function TArray_Delete(var arr: TBooleanArray; const index: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Delete_TPoint, 'function TArray_Delete(var arr: TPointArray; const index: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Delete_TBox, 'function TArray_Delete(var arr: TBoxArray; const index: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Delete_TRange, 'function TArray_Delete(var arr: TRangeArray; const index: Int32 = 0): Boolean; overload;');
  AddFunction(@TArray_Delete_Int32_1, 'function TArray_Delete(var arr: TIntegerArray; const IDs: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Delete_Double_1, 'function TArray_Delete(var arr: TDoubleArray; const IDs: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Delete_String_1, 'function TArray_Delete(var arr: TStringArray; const IDs: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Delete_Char_1, 'function TArray_Delete(var arr: TCharArray; const IDs: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Delete_Boolean_1, 'function TArray_Delete(var arr: TBooleanArray; const IDs: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Delete_TPoint_1, 'function TArray_Delete(var arr: TPointArray; const IDs: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Delete_TBox_1, 'function TArray_Delete(var arr: TBoxArray; const IDs: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Delete_TRange_1, 'function TArray_Delete(var arr: TRangeArray; const IDs: TIntegerArray): Int32; overload;');

  AddFunction(@TArray_Differ_Int32, 'function TArray_Differ(const arr, target: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Differ_Double, 'function TArray_Differ(const arr, target: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Differ_String, 'function TArray_Differ(const arr, target: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Differ_Char, 'function TArray_Differ(const arr, target: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Differ_Boolean, 'function TArray_Differ(const arr, target: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Differ_TPoint, 'function TArray_Differ(const arr, target: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Differ_TBox, 'function TArray_Differ(const arr, target: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Differ_TRange, 'function TArray_Differ(const arr, target: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Distribute_Int32, 'function TArray_Distribute(const arr: TIntegerArray; const parts: Int32): T2DIntegerArray; overload;');
  AddFunction(@TArray_Distribute_Double, 'function TArray_Distribute(const arr: TDoubleArray; const parts: Int32): T2DDoubleArray; overload;');
  AddFunction(@TArray_Distribute_String, 'function TArray_Distribute(const arr: TStringArray; const parts: Int32): T2DStringArray; overload;');
  AddFunction(@TArray_Distribute_Char, 'function TArray_Distribute(const arr: TCharArray; const parts: Int32): T2DCharArray; overload;');
  AddFunction(@TArray_Distribute_Boolean, 'function TArray_Distribute(const arr: TBooleanArray; const parts: Int32): T2DBooleanArray; overload;');
  AddFunction(@TArray_Distribute_TPoint, 'function TArray_Distribute(const arr: TPointArray; const parts: Int32): T2DPointArray; overload;');
  AddFunction(@TArray_Distribute_TBox, 'function TArray_Distribute(const arr: TBoxArray; const parts: Int32): T2DBoxArray; overload;');
  AddFunction(@TArray_Distribute_TRange, 'function TArray_Distribute(const arr: TRangeArray; const parts: Int32): T2DRangeArray; overload;');

  AddFunction(@TArray_Dupe_Int32, 'function TArray_Dupe(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Dupe_Double, 'function TArray_Dupe(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Dupe_String, 'function TArray_Dupe(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Dupe_Char, 'function TArray_Dupe(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Dupe_Boolean, 'function TArray_Dupe(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Dupe_TPoint, 'function TArray_Dupe(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Dupe_TBox, 'function TArray_Dupe(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Dupe_TRange, 'function TArray_Dupe(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Empty_Int32, 'function TArray_Empty(const arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Empty_Double, 'function TArray_Empty(const arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Empty_String, 'function TArray_Empty(const arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Empty_Char, 'function TArray_Empty(const arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Empty_Boolean, 'function TArray_Empty(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Empty_TPoint, 'function TArray_Empty(const arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Empty_TBox, 'function TArray_Empty(const arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Empty_TRange, 'function TArray_Empty(const arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Equal_Int32, 'function TArray_Equal(const arr, target: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Equal_Double, 'function TArray_Equal(const arr, target: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Equal_String, 'function TArray_Equal(const arr, target: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Equal_Char, 'function TArray_Equal(const arr, target: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Equal_Boolean, 'function TArray_Equal(const arr, target: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Equal_TPoint, 'function TArray_Equal(const arr, target: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Equal_TBox, 'function TArray_Equal(const arr, target: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Equal_TRange, 'function TArray_Equal(const arr, target: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Extend_Int32, 'function TArray_Extend(const arr: TIntegerArray; const item: Int32): TIntegerArray; overload;');
  AddFunction(@TArray_Extend_Double, 'function TArray_Extend(const arr: TDoubleArray; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Extend_String, 'function TArray_Extend(const arr: TStringArray; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Extend_Char, 'function TArray_Extend(const arr: TCharArray; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Extend_Boolean, 'function TArray_Extend(const arr: TBooleanArray; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Extend_TPoint, 'function TArray_Extend(const arr: TPointArray; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Extend_TBox, 'function TArray_Extend(const arr: TBoxArray; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Extend_TRange, 'function TArray_Extend(const arr: TRangeArray; const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Extend_Int32_1, 'function TArray_Extend(const arr: TIntegerArray; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Extend_Double_1, 'function TArray_Extend(const arr: TDoubleArray; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Extend_String_1, 'function TArray_Extend(const arr: TStringArray; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Extend_Char_1, 'function TArray_Extend(const arr: TCharArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Extend_Boolean_1, 'function TArray_Extend(const arr: TBooleanArray; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Extend_TPoint_1, 'function TArray_Extend(const arr: TPointArray; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Extend_TBox_1, 'function TArray_Extend(const arr: TBoxArray; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Extend_TRange_1, 'function TArray_Extend(const arr: TRangeArray; const items: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Extract_Int32, 'function TArray_Extract(const arr: TIntegerArray; const item: Int32; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Extract_Double, 'function TArray_Extract(const arr: TDoubleArray; const item: Double; const start: Int32 = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Extract_String, 'function TArray_Extract(const arr: TStringArray; const item: string; const start: Int32 = 0): TStringArray; overload;');
  AddFunction(@TArray_Extract_Char, 'function TArray_Extract(const arr: TCharArray; const item: Char; const start: Int32 = 0): TCharArray; overload;');
  AddFunction(@TArray_Extract_Boolean, 'function TArray_Extract(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Extract_TPoint, 'function TArray_Extract(const arr: TPointArray; const item: TPoint; const start: Int32 = 0): TPointArray; overload;');
  AddFunction(@TArray_Extract_TBox, 'function TArray_Extract(const arr: TBoxArray; const item: TBox; const start: Int32 = 0): TBoxArray; overload;');
  AddFunction(@TArray_Extract_TRange, 'function TArray_Extract(const arr: TRangeArray; const item: TRange; const start: Int32 = 0): TRangeArray; overload;');
  AddFunction(@TArray_Extract_Int32_1, 'function TArray_Extract(const arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Extract_Double_1, 'function TArray_Extract(const arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Extract_String_1, 'function TArray_Extract(const arr: TStringArray; const items: TStringArray; const start: Int32 = 0): TStringArray; overload;');
  AddFunction(@TArray_Extract_Char_1, 'function TArray_Extract(const arr: TCharArray; const items: TCharArray; const start: Int32 = 0): TCharArray; overload;');
  AddFunction(@TArray_Extract_Boolean_1, 'function TArray_Extract(const arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Extract_TPoint_1, 'function TArray_Extract(const arr: TPointArray; const items: TPointArray; const start: Int32 = 0): TPointArray; overload;');
  AddFunction(@TArray_Extract_TBox_1, 'function TArray_Extract(const arr: TBoxArray; const items: TBoxArray; const start: Int32 = 0): TBoxArray; overload;');
  AddFunction(@TArray_Extract_TRange_1, 'function TArray_Extract(const arr: TRangeArray; const items: TRangeArray; const start: Int32 = 0): TRangeArray; overload;');

  AddFunction(@TArray_ExtractEvery_Int32, 'function TArray_ExtractEvery(const arr: TIntegerArray; const X: Int32 = 1; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_ExtractEvery_Double, 'function TArray_ExtractEvery(const arr: TDoubleArray; const X: Int32 = 1; const start: Int32 = 0): TDoubleArray; overload;');
  AddFunction(@TArray_ExtractEvery_String, 'function TArray_ExtractEvery(const arr: TStringArray; const X: Int32 = 1; const start: Int32 = 0): TStringArray; overload;');
  AddFunction(@TArray_ExtractEvery_Char, 'function TArray_ExtractEvery(const arr: TCharArray; const X: Int32 = 1; const start: Int32 = 0): TCharArray; overload;');
  AddFunction(@TArray_ExtractEvery_Boolean, 'function TArray_ExtractEvery(const arr: TBooleanArray; const X: Int32 = 1; const start: Int32 = 0): TBooleanArray; overload;');
  AddFunction(@TArray_ExtractEvery_TPoint, 'function TArray_ExtractEvery(const arr: TPointArray; const X: Int32 = 1; const start: Int32 = 0): TPointArray; overload;');
  AddFunction(@TArray_ExtractEvery_TBox, 'function TArray_ExtractEvery(const arr: TBoxArray; const X: Int32 = 1; const start: Int32 = 0): TBoxArray; overload;');
  AddFunction(@TArray_ExtractEvery_TRange, 'function TArray_ExtractEvery(const arr: TRangeArray; const X: Int32 = 1; const start: Int32 = 0): TRangeArray; overload;');

  AddFunction(@TArray_Fill_Int32, 'function TArray_Fill(const arr: TIntegerArray; const item: Int32; const start: Int32 = 0; const count: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Fill_Double, 'function TArray_Fill(const arr: TDoubleArray; const item: Double; const start: Int32 = 0; const count: Int32 = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Fill_String, 'function TArray_Fill(const arr: TStringArray; const item: string; const start: Int32 = 0; const count: Int32 = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Fill_Char, 'function TArray_Fill(const arr: TCharArray; const item: Char; const start: Int32 = 0; const count: Int32 = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Fill_Boolean, 'function TArray_Fill(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 0; const count: Int32 = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Fill_TPoint, 'function TArray_Fill(const arr: TPointArray; const item: TPoint; const start: Int32 = 0; const count: Int32 = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Fill_TBox, 'function TArray_Fill(const arr: TBoxArray; const item: TBox; const start: Int32 = 0; const count: Int32 = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Fill_TRange, 'function TArray_Fill(const arr: TRangeArray; const item: TRange; const start: Int32 = 0; const count: Int32 = 2147483647): TRangeArray; overload;');
  AddFunction(@TArray_Fill_Int32_1, 'function TArray_Fill(const arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 0; const count: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_Fill_Double_1, 'function TArray_Fill(const arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 0; const count: Int32 = 2147483647): TDoubleArray; overload;');
  AddFunction(@TArray_Fill_String_1, 'function TArray_Fill(const arr: TStringArray; const items: TStringArray; const start: Int32 = 0; const count: Int32 = 2147483647): TStringArray; overload;');
  AddFunction(@TArray_Fill_Char_1, 'function TArray_Fill(const arr: TCharArray; const items: TCharArray; const start: Int32 = 0; const count: Int32 = 2147483647): TCharArray; overload;');
  AddFunction(@TArray_Fill_Boolean_1, 'function TArray_Fill(const arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 0; const count: Int32 = 2147483647): TBooleanArray; overload;');
  AddFunction(@TArray_Fill_TPoint_1, 'function TArray_Fill(const arr: TPointArray; const items: TPointArray; const start: Int32 = 0; const count: Int32 = 2147483647): TPointArray; overload;');
  AddFunction(@TArray_Fill_TBox_1, 'function TArray_Fill(const arr: TBoxArray; const items: TBoxArray; const start: Int32 = 0; const count: Int32 = 2147483647): TBoxArray; overload;');
  AddFunction(@TArray_Fill_TRange_1, 'function TArray_Fill(const arr: TRangeArray; const items: TRangeArray; const start: Int32 = 0; const count: Int32 = 2147483647): TRangeArray; overload;');

  AddFunction(@TArray_Filter_Int32, 'function TArray_Filter(const arr: TIntegerArray; const item: Int32; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Filter_Double, 'function TArray_Filter(const arr: TDoubleArray; const item: Double; const start: Int32 = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Filter_String, 'function TArray_Filter(const arr: TStringArray; const item: string; const start: Int32 = 0): TStringArray; overload;');
  AddFunction(@TArray_Filter_Char, 'function TArray_Filter(const arr: TCharArray; const item: Char; const start: Int32 = 0): TCharArray; overload;');
  AddFunction(@TArray_Filter_Boolean, 'function TArray_Filter(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Filter_TPoint, 'function TArray_Filter(const arr: TPointArray; const item: TPoint; const start: Int32 = 0): TPointArray; overload;');
  AddFunction(@TArray_Filter_TBox, 'function TArray_Filter(const arr: TBoxArray; const item: TBox; const start: Int32 = 0): TBoxArray; overload;');
  AddFunction(@TArray_Filter_TRange, 'function TArray_Filter(const arr: TRangeArray; const item: TRange; const start: Int32 = 0): TRangeArray; overload;');
  AddFunction(@TArray_Filter_Int32_1, 'function TArray_Filter(const arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Filter_Double_1, 'function TArray_Filter(const arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 0): TDoubleArray; overload;');
  AddFunction(@TArray_Filter_String_1, 'function TArray_Filter(const arr: TStringArray; const items: TStringArray; const start: Int32 = 0): TStringArray; overload;');
  AddFunction(@TArray_Filter_Char_1, 'function TArray_Filter(const arr: TCharArray; const items: TCharArray; const start: Int32 = 0): TCharArray; overload;');
  AddFunction(@TArray_Filter_Boolean_1, 'function TArray_Filter(const arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 0): TBooleanArray; overload;');
  AddFunction(@TArray_Filter_TPoint_1, 'function TArray_Filter(const arr: TPointArray; const items: TPointArray; const start: Int32 = 0): TPointArray; overload;');
  AddFunction(@TArray_Filter_TBox_1, 'function TArray_Filter(const arr: TBoxArray; const items: TBoxArray; const start: Int32 = 0): TBoxArray; overload;');
  AddFunction(@TArray_Filter_TRange_1, 'function TArray_Filter(const arr: TRangeArray; const items: TRangeArray; const start: Int32 = 0): TRangeArray; overload;');

  AddFunction(@TArray_FilterEvery_Int32, 'function TArray_FilterEvery(const arr: TIntegerArray; const X: Int32 = 1; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_FilterEvery_Double, 'function TArray_FilterEvery(const arr: TDoubleArray; const X: Int32 = 1; const start: Int32 = 0): TDoubleArray; overload;');
  AddFunction(@TArray_FilterEvery_String, 'function TArray_FilterEvery(const arr: TStringArray; const X: Int32 = 1; const start: Int32 = 0): TStringArray; overload;');
  AddFunction(@TArray_FilterEvery_Char, 'function TArray_FilterEvery(const arr: TCharArray; const X: Int32 = 1; const start: Int32 = 0): TCharArray; overload;');
  AddFunction(@TArray_FilterEvery_Boolean, 'function TArray_FilterEvery(const arr: TBooleanArray; const X: Int32 = 1; const start: Int32 = 0): TBooleanArray; overload;');
  AddFunction(@TArray_FilterEvery_TPoint, 'function TArray_FilterEvery(const arr: TPointArray; const X: Int32 = 1; const start: Int32 = 0): TPointArray; overload;');
  AddFunction(@TArray_FilterEvery_TBox, 'function TArray_FilterEvery(const arr: TBoxArray; const X: Int32 = 1; const start: Int32 = 0): TBoxArray; overload;');
  AddFunction(@TArray_FilterEvery_TRange, 'function TArray_FilterEvery(const arr: TRangeArray; const X: Int32 = 1; const start: Int32 = 0): TRangeArray; overload;');

  AddFunction(@TArray_Flip_Int32, 'function TArray_Flip(var arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Flip_Double, 'function TArray_Flip(var arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Flip_String, 'function TArray_Flip(var arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Flip_Char, 'function TArray_Flip(var arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Flip_Boolean, 'function TArray_Flip(var arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Flip_TPoint, 'function TArray_Flip(var arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Flip_TBox, 'function TArray_Flip(var arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Flip_TRange, 'function TArray_Flip(var arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Get_Int32, 'function TArray_Get(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Get_Double, 'function TArray_Get(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Get_String, 'function TArray_Get(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Get_Char, 'function TArray_Get(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Get_Boolean, 'function TArray_Get(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Get_TPoint, 'function TArray_Get(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Get_TBox, 'function TArray_Get(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Get_TRange, 'function TArray_Get(const arr: TRangeArray): TRangeArray; overload;');
  AddFunction(@TArray_Get_Int32_1, 'function TArray_Get(const arr: TIntegerArray; const IDs: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Get_Double_1, 'function TArray_Get(const arr: TDoubleArray; const IDs: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_Get_String_1, 'function TArray_Get(const arr: TStringArray; const IDs: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_Get_Char_1, 'function TArray_Get(const arr: TCharArray; const IDs: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_Get_Boolean_1, 'function TArray_Get(const arr: TBooleanArray; const IDs: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_Get_TPoint_1, 'function TArray_Get(const arr: TPointArray; const IDs: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_Get_TBox_1, 'function TArray_Get(const arr: TBoxArray; const IDs: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_Get_TRange_1, 'function TArray_Get(const arr: TRangeArray; const IDs: TIntegerArray): TRangeArray; overload;');

  AddFunction(@TArray_Group_Int32, 'function TArray_Group(const arr: TIntegerArray): T2DIntegerArray; overload;');
  AddFunction(@TArray_Group_Double, 'function TArray_Group(const arr: TDoubleArray): T2DDoubleArray; overload;');
  AddFunction(@TArray_Group_String, 'function TArray_Group(const arr: TStringArray): T2DStringArray; overload;');
  AddFunction(@TArray_Group_Char, 'function TArray_Group(const arr: TCharArray): T2DCharArray; overload;');
  AddFunction(@TArray_Group_Boolean, 'function TArray_Group(const arr: TBooleanArray): T2DBooleanArray; overload;');
  AddFunction(@TArray_Group_TPoint, 'function TArray_Group(const arr: TPointArray): T2DPointArray; overload;');
  AddFunction(@TArray_Group_TBox, 'function TArray_Group(const arr: TBoxArray): T2DBoxArray; overload;');
  AddFunction(@TArray_Group_TRange, 'function TArray_Group(const arr: TRangeArray): T2DRangeArray; overload;');

  AddFunction(@TArray_Holds_Int32, 'function TArray_Holds(const arr, chain: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Holds_Double, 'function TArray_Holds(const arr, chain: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Holds_String, 'function TArray_Holds(const arr, chain: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Holds_Char, 'function TArray_Holds(const arr, chain: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Holds_Boolean, 'function TArray_Holds(const arr, chain: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Holds_TPoint, 'function TArray_Holds(const arr, chain: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Holds_TBox, 'function TArray_Holds(const arr, chain: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Holds_TRange, 'function TArray_Holds(const arr, chain: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Includes_Int32, 'function TArray_Includes(const arr: TIntegerArray; const item: Int32; const start: Int32 = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes_Double, 'function TArray_Includes(const arr: TDoubleArray; const item: Double; const start: Int32 = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes_String, 'function TArray_Includes(const arr: TStringArray; const item: string; const start: Int32 = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes_Char, 'function TArray_Includes(const arr: TCharArray; const item: Char; const start: Int32 = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes_Boolean, 'function TArray_Includes(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes_TPoint, 'function TArray_Includes(const arr: TPointArray; const item: TPoint; const start: Int32 = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes_TBox, 'function TArray_Includes(const arr: TBoxArray; const item: TBox; const start: Int32 = 2147483647): Boolean; overload;');
  AddFunction(@TArray_Includes_TRange, 'function TArray_Includes(const arr: TRangeArray; const item: TRange; const start: Int32 = 2147483647): Boolean; overload;');

  AddFunction(@TArray_LeastFrequent_Int32, 'function TArray_LeastFrequent(const arr: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_LeastFrequent_Double, 'function TArray_LeastFrequent(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_LeastFrequent_String, 'function TArray_LeastFrequent(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_LeastFrequent_Char, 'function TArray_LeastFrequent(const arr: TCharArray): Char; overload;');
  AddFunction(@TArray_LeastFrequent_Boolean, 'function TArray_LeastFrequent(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_LeastFrequent_TPoint, 'function TArray_LeastFrequent(const arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_LeastFrequent_TBox, 'function TArray_LeastFrequent(const arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_LeastFrequent_TRange, 'function TArray_LeastFrequent(const arr: TRangeArray): TRange; overload;');
  
  AddFunction(@TArray_MostFrequent_Int32, 'function TArray_MostFrequent(const arr: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_MostFrequent_Double, 'function TArray_MostFrequent(const arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_MostFrequent_String, 'function TArray_MostFrequent(const arr: TStringArray): string; overload;');
  AddFunction(@TArray_MostFrequent_Char, 'function TArray_MostFrequent(const arr: TCharArray): Char; overload;');
  AddFunction(@TArray_MostFrequent_Boolean, 'function TArray_MostFrequent(const arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_MostFrequent_TPoint, 'function TArray_MostFrequent(const arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_MostFrequent_TBox, 'function TArray_MostFrequent(const arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_MostFrequent_TRange, 'function TArray_MostFrequent(const arr: TRangeArray): TRange; overload;');

  AddFunction(@TArray_Move_Int32, 'function TArray_Move(var arr: TIntegerArray; oldIndex, newIndex: Int32): Boolean; overload;');
  AddFunction(@TArray_Move_Double, 'function TArray_Move(var arr: TDoubleArray; oldIndex, newIndex: Int32): Boolean; overload;');
  AddFunction(@TArray_Move_String, 'function TArray_Move(var arr: TStringArray; oldIndex, newIndex: Int32): Boolean; overload;');
  AddFunction(@TArray_Move_Char, 'function TArray_Move(var arr: TCharArray; oldIndex, newIndex: Int32): Boolean; overload;');
  AddFunction(@TArray_Move_Boolean, 'function TArray_Move(var arr: TBooleanArray; oldIndex, newIndex: Int32): Boolean; overload;');
  AddFunction(@TArray_Move_TPoint, 'function TArray_Move(var arr: TPointArray; oldIndex, newIndex: Int32): Boolean; overload;');
  AddFunction(@TArray_Move_TBox, 'function TArray_Move(var arr: TBoxArray; oldIndex, newIndex: Int32): Boolean; overload;');
  AddFunction(@TArray_Move_TRange, 'function TArray_Move(var arr: TRangeArray; oldIndex, newIndex: Int32): Boolean; overload;');

  AddFunction(@TArray_Oversize_Int32, 'function TArray_Oversize(const arr: TIntegerArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Oversize_Double, 'function TArray_Oversize(const arr: TDoubleArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Oversize_String, 'function TArray_Oversize(const arr: TStringArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Oversize_Char, 'function TArray_Oversize(const arr: TCharArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Oversize_Boolean, 'function TArray_Oversize(const arr: TBooleanArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Oversize_TPoint, 'function TArray_Oversize(const arr: TPointArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Oversize_TBox, 'function TArray_Oversize(const arr: TBoxArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Oversize_TRange, 'function TArray_Oversize(const arr: TRangeArray; const limit: Int32): Boolean; overload;');

  AddFunction(@TArray_Partition_Int32, 'function TArray_Partition(const arr: TIntegerArray; const size: Int32): T2DIntegerArray; overload;');
  AddFunction(@TArray_Partition_Double, 'function TArray_Partition(const arr: TDoubleArray; const size: Int32): T2DDoubleArray; overload;');
  AddFunction(@TArray_Partition_String, 'function TArray_Partition(const arr: TStringArray; const size: Int32): T2DStringArray; overload;');
  AddFunction(@TArray_Partition_Char, 'function TArray_Partition(const arr: TCharArray; const size: Int32): T2DCharArray; overload;');
  AddFunction(@TArray_Partition_Boolean, 'function TArray_Partition(const arr: TBooleanArray; const size: Int32): T2DBooleanArray; overload;');
  AddFunction(@TArray_Partition_TPoint, 'function TArray_Partition(const arr: TPointArray; const size: Int32): T2DPointArray; overload;');
  AddFunction(@TArray_Partition_TBox, 'function TArray_Partition(const arr: TBoxArray; const size: Int32): T2DBoxArray; overload;');
  AddFunction(@TArray_Partition_TRange, 'function TArray_Partition(const arr: TRangeArray; const size: Int32): T2DRangeArray; overload;');

  AddFunction(@TArray_Pick_Int32, 'function TArray_Pick(var arr: TIntegerArray; const IDs: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Pick_Double, 'function TArray_Pick(var arr: TDoubleArray; const IDs: TIntegerArray): TDoubleArray; overload;');
  AddFunction(@TArray_Pick_String, 'function TArray_Pick(var arr: TStringArray; const IDs: TIntegerArray): TStringArray; overload;');
  AddFunction(@TArray_Pick_Char, 'function TArray_Pick(var arr: TCharArray; const IDs: TIntegerArray): TCharArray; overload;');
  AddFunction(@TArray_Pick_Boolean, 'function TArray_Pick(var arr: TBooleanArray; const IDs: TIntegerArray): TBooleanArray; overload;');
  AddFunction(@TArray_Pick_TPoint, 'function TArray_Pick(var arr: TPointArray; const IDs: TIntegerArray): TPointArray; overload;');
  AddFunction(@TArray_Pick_TBox, 'function TArray_Pick(var arr: TBoxArray; const IDs: TIntegerArray): TBoxArray; overload;');
  AddFunction(@TArray_Pick_TRange, 'function TArray_Pick(var arr: TRangeArray; const IDs: TIntegerArray): TRangeArray; overload;');

  AddFunction(@TArray_Pop_Int32, 'function TArray_Pop(var arr: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Pop_Double, 'function TArray_Pop(var arr: TDoubleArray): Double; overload;');
  AddFunction(@TArray_Pop_String, 'function TArray_Pop(var arr: TStringArray): string; overload;');
  AddFunction(@TArray_Pop_Char, 'function TArray_Pop(var arr: TCharArray): Char; overload;');
  AddFunction(@TArray_Pop_Boolean, 'function TArray_Pop(var arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Pop_TPoint, 'function TArray_Pop(var arr: TPointArray): TPoint; overload;');
  AddFunction(@TArray_Pop_TBox, 'function TArray_Pop(var arr: TBoxArray): TBox; overload;');
  AddFunction(@TArray_Pop_TRange, 'function TArray_Pop(var arr: TRangeArray): TRange; overload;');
  AddFunction(@TArray_Pop_Int32_1, 'function TArray_Pop(var arr: TIntegerArray; const null: Int32): Int32; overload;');
  AddFunction(@TArray_Pop_Double_1, 'function TArray_Pop(var arr: TDoubleArray; const null: Double): Double; overload;');
  AddFunction(@TArray_Pop_String_1, 'function TArray_Pop(var arr: TStringArray; const null: string): string; overload;');
  AddFunction(@TArray_Pop_Char_1, 'function TArray_Pop(var arr: TCharArray; const null: Char): Char; overload;');
  AddFunction(@TArray_Pop_Boolean_1, 'function TArray_Pop(var arr: TBooleanArray; const null: Boolean): Boolean; overload;');
  AddFunction(@TArray_Pop_TPoint_1, 'function TArray_Pop(var arr: TPointArray; const null: TPoint): TPoint; overload;');
  AddFunction(@TArray_Pop_TBox_1, 'function TArray_Pop(var arr: TBoxArray; const null: TBox): TBox; overload;');
  AddFunction(@TArray_Pop_TRange_1, 'function TArray_Pop(var arr: TRangeArray; const null: TRange): TRange; overload;');

  AddFunction(@TArray_Pos_Int32, 'function TArray_Pos(const arr: TIntegerArray; const item: Int32; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_Double, 'function TArray_Pos(const arr: TDoubleArray; const item: Double; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_String, 'function TArray_Pos(const arr: TStringArray; const item: string; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_Char, 'function TArray_Pos(const arr: TCharArray; const item: Char; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_Boolean, 'function TArray_Pos(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_TPoint, 'function TArray_Pos(const arr: TPointArray; const item: TPoint; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_TBox, 'function TArray_Pos(const arr: TBoxArray; const item: TBox; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_TRange, 'function TArray_Pos(const arr: TRangeArray; const item: TRange; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_Int32_1, 'function TArray_Pos(const arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_Double_1, 'function TArray_Pos(const arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_String_1, 'function TArray_Pos(const arr: TStringArray; const items: TStringArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_Char_1, 'function TArray_Pos(const arr: TCharArray; const items: TCharArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_Boolean_1, 'function TArray_Pos(const arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_TPoint_1, 'function TArray_Pos(const arr: TPointArray; const items: TPointArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_TBox_1, 'function TArray_Pos(const arr: TBoxArray; const items: TBoxArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Pos_TRange_1, 'function TArray_Pos(const arr: TRangeArray; const items: TRangeArray; const start: Int32 = 0): Int32; overload;');

  AddFunction(@TArray_Position_Int32, 'function TArray_Position(const arr: TIntegerArray; const item: Int32; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_Double, 'function TArray_Position(const arr: TDoubleArray; const item: Double; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_String, 'function TArray_Position(const arr: TStringArray; const item: string; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_Char, 'function TArray_Position(const arr: TCharArray; const item: Char; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_Boolean, 'function TArray_Position(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_TPoint, 'function TArray_Position(const arr: TPointArray; const item: TPoint; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_TBox, 'function TArray_Position(const arr: TBoxArray; const item: TBox; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_TRange, 'function TArray_Position(const arr: TRangeArray; const item: TRange; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_Int32_1, 'function TArray_Position(const arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_Double_1, 'function TArray_Position(const arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_String_1, 'function TArray_Position(const arr: TStringArray; const items: TStringArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_Char_1, 'function TArray_Position(const arr: TCharArray; const items: TCharArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_Boolean_1, 'function TArray_Position(const arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_TPoint_1, 'function TArray_Position(const arr: TPointArray; const items: TPointArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_TBox_1, 'function TArray_Position(const arr: TBoxArray; const items: TBoxArray; const start: Int32 = 0): Int32; overload;');
  AddFunction(@TArray_Position_TRange_1, 'function TArray_Position(const arr: TRangeArray; const items: TRangeArray; const start: Int32 = 0): Int32; overload;');

  AddFunction(@TArray_Positions_Int32, 'function TArray_Positions(const arr: TIntegerArray; const item: Int32; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_Double, 'function TArray_Positions(const arr: TDoubleArray; const item: Double; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_String, 'function TArray_Positions(const arr: TStringArray; const item: string; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_Char, 'function TArray_Positions(const arr: TCharArray; const item: Char; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_Boolean, 'function TArray_Positions(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_TPoint, 'function TArray_Positions(const arr: TPointArray; const item: TPoint; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_TBox, 'function TArray_Positions(const arr: TBoxArray; const item: TBox; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_TRange, 'function TArray_Positions(const arr: TRangeArray; const item: TRange; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_Int32_1, 'function TArray_Positions(const arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_Double_1, 'function TArray_Positions(const arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_String_1, 'function TArray_Positions(const arr: TStringArray; const items: TStringArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_Char_1, 'function TArray_Positions(const arr: TCharArray; const items: TCharArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_Boolean_1, 'function TArray_Positions(const arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_TPoint_1, 'function TArray_Positions(const arr: TPointArray; const items: TPointArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_TBox_1, 'function TArray_Positions(const arr: TBoxArray; const items: TBoxArray; const start: Int32 = 0): TIntegerArray; overload;');
  AddFunction(@TArray_Positions_TRange_1, 'function TArray_Positions(const arr: TRangeArray; const items: TRangeArray; const start: Int32 = 0): TIntegerArray; overload;');

  AddFunction(@TArray_PosLast_Int32, 'function TArray_PosLast(const arr: TIntegerArray; const item: Int32; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_Double, 'function TArray_PosLast(const arr: TDoubleArray; const item: Double; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_String, 'function TArray_PosLast(const arr: TStringArray; const item: string; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_Char, 'function TArray_PosLast(const arr: TCharArray; const item: Char; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_Boolean, 'function TArray_PosLast(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_TPoint, 'function TArray_PosLast(const arr: TPointArray; const item: TPoint; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_TBox, 'function TArray_PosLast(const arr: TBoxArray; const item: TBox; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_TRange, 'function TArray_PosLast(const arr: TRangeArray; const item: TRange; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_Int32_1, 'function TArray_PosLast(const arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_Double_1, 'function TArray_PosLast(const arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_String_1, 'function TArray_PosLast(const arr: TStringArray; const items: TStringArray; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_Char_1, 'function TArray_PosLast(const arr: TCharArray; const items: TCharArray; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_Boolean_1, 'function TArray_PosLast(const arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_TPoint_1, 'function TArray_PosLast(const arr: TPointArray; const items: TPointArray; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_TBox_1, 'function TArray_PosLast(const arr: TBoxArray; const items: TBoxArray; const start: Int32 = 2147483647): Int32; overload;');
  AddFunction(@TArray_PosLast_TRange_1, 'function TArray_PosLast(const arr: TRangeArray; const items: TRangeArray; const start: Int32 = 2147483647): Int32; overload;');

  AddFunction(@TArray_PosLasts_Int32, 'function TArray_PosLasts(const arr: TIntegerArray; const item: Int32; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_Double, 'function TArray_PosLasts(const arr: TDoubleArray; const item: Double; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_String, 'function TArray_PosLasts(const arr: TStringArray; const item: string; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_Char, 'function TArray_PosLasts(const arr: TCharArray; const item: Char; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_Boolean, 'function TArray_PosLasts(const arr: TBooleanArray; const item: Boolean; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_TPoint, 'function TArray_PosLasts(const arr: TPointArray; const item: TPoint; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_TBox, 'function TArray_PosLasts(const arr: TBoxArray; const item: TBox; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_TRange, 'function TArray_PosLasts(const arr: TRangeArray; const item: TRange; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_Int32_1, 'function TArray_PosLasts(const arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_Double_1, 'function TArray_PosLasts(const arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_String_1, 'function TArray_PosLasts(const arr: TStringArray; const items: TStringArray; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_Char_1, 'function TArray_PosLasts(const arr: TCharArray; const items: TCharArray; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_Boolean_1, 'function TArray_PosLasts(const arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_TPoint_1, 'function TArray_PosLasts(const arr: TPointArray; const items: TPointArray; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_TBox_1, 'function TArray_PosLasts(const arr: TBoxArray; const items: TBoxArray; const start: Int32 = 2147483647): TIntegerArray; overload;');
  AddFunction(@TArray_PosLasts_TRange_1, 'function TArray_PosLasts(const arr: TRangeArray; const items: TRangeArray; const start: Int32 = 2147483647): TIntegerArray; overload;');

  AddFunction(@TArray_Push_Int32, 'function TArray_Push(var arr: TIntegerArray; const item: Int32): Int32; overload;');
  AddFunction(@TArray_Push_Double, 'function TArray_Push(var arr: TDoubleArray; const item: Double): Int32; overload;');
  AddFunction(@TArray_Push_String, 'function TArray_Push(var arr: TStringArray; const item: string): Int32; overload;');
  AddFunction(@TArray_Push_Char, 'function TArray_Push(var arr: TCharArray; const item: Char): Int32; overload;');
  AddFunction(@TArray_Push_Boolean, 'function TArray_Push(var arr: TBooleanArray; const item: Boolean): Int32; overload;');
  AddFunction(@TArray_Push_TPoint, 'function TArray_Push(var arr: TPointArray; const item: TPoint): Int32; overload;');
  AddFunction(@TArray_Push_TBox, 'function TArray_Push(var arr: TBoxArray; const item: TBox): Int32; overload;');
  AddFunction(@TArray_Push_TRange, 'function TArray_Push(var arr: TRangeArray; const item: TRange): Int32; overload;');
  AddFunction(@TArray_Push_Int32_1, 'function TArray_Push(var arr: TIntegerArray; const items: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Push_Double_1, 'function TArray_Push(var arr: TDoubleArray; const items: TDoubleArray): Int32; overload;');
  AddFunction(@TArray_Push_String_1, 'function TArray_Push(var arr: TStringArray; const items: TStringArray): Int32; overload;');
  AddFunction(@TArray_Push_Char_1, 'function TArray_Push(var arr: TCharArray; const items: TCharArray): Int32; overload;');
  AddFunction(@TArray_Push_Boolean_1, 'function TArray_Push(var arr: TBooleanArray; const items: TBooleanArray): Int32; overload;');
  AddFunction(@TArray_Push_TPoint_1, 'function TArray_Push(var arr: TPointArray; const items: TPointArray): Int32; overload;');
  AddFunction(@TArray_Push_TBox_1, 'function TArray_Push(var arr: TBoxArray; const items: TBoxArray): Int32; overload;');
  AddFunction(@TArray_Push_TRange_1, 'function TArray_Push(var arr: TRangeArray; const items: TRangeArray): Int32; overload;');

  AddFunction(@TArray_Randomize_Int32, 'function TArray_Randomize(var arr: TIntegerArray; const shuffles: Int32 = 1): Boolean; overload;');
  AddFunction(@TArray_Randomize_Double, 'function TArray_Randomize(var arr: TDoubleArray; const shuffles: Int32 = 1): Boolean; overload;');
  AddFunction(@TArray_Randomize_String, 'function TArray_Randomize(var arr: TStringArray; const shuffles: Int32 = 1): Boolean; overload;');
  AddFunction(@TArray_Randomize_Char, 'function TArray_Randomize(var arr: TCharArray; const shuffles: Int32 = 1): Boolean; overload;');
  AddFunction(@TArray_Randomize_Boolean, 'function TArray_Randomize(var arr: TBooleanArray; const shuffles: Int32 = 1): Boolean; overload;');
  AddFunction(@TArray_Randomize_TPoint, 'function TArray_Randomize(var arr: TPointArray; const shuffles: Int32 = 1): Boolean; overload;');
  AddFunction(@TArray_Randomize_TBox, 'function TArray_Randomize(var arr: TBoxArray; const shuffles: Int32 = 1): Boolean; overload;');
  AddFunction(@TArray_Randomize_TRange, 'function TArray_Randomize(var arr: TRangeArray; const shuffles: Int32 = 1): Boolean; overload;');

  AddFunction(@TArray_Remove_Int32, 'function TArray_Remove(var arr: TIntegerArray; const item: Int32; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_Int32_1, 'function TArray_Remove(var arr: TIntegerArray; const item: Int32; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_Double, 'function TArray_Remove(var arr: TDoubleArray; const item: Double; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_Double_1, 'function TArray_Remove(var arr: TDoubleArray; const item: Double; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_String, 'function TArray_Remove(var arr: TStringArray; const item: string; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_String_1, 'function TArray_Remove(var arr: TStringArray; const item: string; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_Char, 'function TArray_Remove(var arr: TCharArray; const item: Char; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_Char_1, 'function TArray_Remove(var arr: TCharArray; const item: Char; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_Boolean, 'function TArray_Remove(var arr: TBooleanArray; const item: Boolean; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_Boolean_1, 'function TArray_Remove(var arr: TBooleanArray; const item: Boolean; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_TPoint, 'function TArray_Remove(var arr: TPointArray; const item: TPoint; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_TPoint_1, 'function TArray_Remove(var arr: TPointArray; const item: TPoint; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_TBox, 'function TArray_Remove(var arr: TBoxArray; const item: TBox; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_TBox_1, 'function TArray_Remove(var arr: TBoxArray; const item: TBox; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_TRange, 'function TArray_Remove(var arr: TRangeArray; const item: TRange; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_TRange_1, 'function TArray_Remove(var arr: TRangeArray; const item: TRange; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_Int32_2, 'function TArray_Remove(var arr: TIntegerArray; const items: TIntegerArray; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_Int32_3, 'function TArray_Remove(var arr: TIntegerArray; const items: TIntegerArray; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_Double_2, 'function TArray_Remove(var arr: TDoubleArray; const items: TDoubleArray; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_Double_3, 'function TArray_Remove(var arr: TDoubleArray; const items: TDoubleArray; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_String_2, 'function TArray_Remove(var arr: TStringArray; const items: TStringArray; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_String_3, 'function TArray_Remove(var arr: TStringArray; const items: TStringArray; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_Char_2, 'function TArray_Remove(var arr: TCharArray; const items: TCharArray; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_Char_3, 'function TArray_Remove(var arr: TCharArray; const items: TCharArray; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_Boolean_2, 'function TArray_Remove(var arr: TBooleanArray; const items: TBooleanArray; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_Boolean_3, 'function TArray_Remove(var arr: TBooleanArray; const items: TBooleanArray; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_TPoint_2, 'function TArray_Remove(var arr: TPointArray; const items: TPointArray; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_TPoint_3, 'function TArray_Remove(var arr: TPointArray; const items: TPointArray; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_TBox_2, 'function TArray_Remove(var arr: TBoxArray; const items: TBoxArray; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_TBox_3, 'function TArray_Remove(var arr: TBoxArray; const items: TBoxArray; const all: Boolean): Int32; overload;');
  AddFunction(@TArray_Remove_TRange_2, 'function TArray_Remove(var arr: TRangeArray; const items: TRangeArray; const start: Int32 = 0; const all: Boolean = True): Int32; overload;');
  AddFunction(@TArray_Remove_TRange_3, 'function TArray_Remove(var arr: TRangeArray; const items: TRangeArray; const all: Boolean): Int32; overload;');

  AddFunction(@TArray_Reverse_Int32, 'function TArray_Reverse(var arr: TIntegerArray): Boolean; overload;');
  AddFunction(@TArray_Reverse_Double, 'function TArray_Reverse(var arr: TDoubleArray): Boolean; overload;');
  AddFunction(@TArray_Reverse_String, 'function TArray_Reverse(var arr: TStringArray): Boolean; overload;');
  AddFunction(@TArray_Reverse_Char, 'function TArray_Reverse(var arr: TCharArray): Boolean; overload;');
  AddFunction(@TArray_Reverse_Boolean, 'function TArray_Reverse(var arr: TBooleanArray): Boolean; overload;');
  AddFunction(@TArray_Reverse_TPoint, 'function TArray_Reverse(var arr: TPointArray): Boolean; overload;');
  AddFunction(@TArray_Reverse_TBox, 'function TArray_Reverse(var arr: TBoxArray): Boolean; overload;');
  AddFunction(@TArray_Reverse_TRange, 'function TArray_Reverse(var arr: TRangeArray): Boolean; overload;');

  AddFunction(@TArray_Reversed_Int32, 'function TArray_Reversed(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Reversed_Double, 'function TArray_Reversed(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Reversed_String, 'function TArray_Reversed(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Reversed_Char, 'function TArray_Reversed(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Reversed_Boolean, 'function TArray_Reversed(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Reversed_TPoint, 'function TArray_Reversed(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Reversed_TBox, 'function TArray_Reversed(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Reversed_TRange, 'function TArray_Reversed(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Set_Int32, 'function TArray_Set(const arr: TIntegerArray; const IDs: TIntegerArray; const item: Int32): TIntegerArray; overload;');
  AddFunction(@TArray_Set_Double, 'function TArray_Set(const arr: TDoubleArray; const IDs: TIntegerArray; const item: Double): TDoubleArray; overload;');
  AddFunction(@TArray_Set_String, 'function TArray_Set(const arr: TStringArray; const IDs: TIntegerArray; const item: string): TStringArray; overload;');
  AddFunction(@TArray_Set_Char, 'function TArray_Set(const arr: TCharArray; const IDs: TIntegerArray; const item: Char): TCharArray; overload;');
  AddFunction(@TArray_Set_Boolean, 'function TArray_Set(const arr: TBooleanArray; const IDs: TIntegerArray; const item: Boolean): TBooleanArray; overload;');
  AddFunction(@TArray_Set_TPoint, 'function TArray_Set(const arr: TPointArray; const IDs: TIntegerArray; const item: TPoint): TPointArray; overload;');
  AddFunction(@TArray_Set_TBox, 'function TArray_Set(const arr: TBoxArray; const IDs: TIntegerArray; const item: TBox): TBoxArray; overload;');
  AddFunction(@TArray_Set_TRange, 'function TArray_Set(const arr: TRangeArray; const IDs: TIntegerArray; const item: TRange): TRangeArray; overload;');
  AddFunction(@TArray_Set_Int32_1, 'function TArray_Set(const arr: TIntegerArray; const IDs: TIntegerArray; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Set_Double_1, 'function TArray_Set(const arr: TDoubleArray; const IDs: TIntegerArray; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Set_String_1, 'function TArray_Set(const arr: TStringArray; const IDs: TIntegerArray; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Set_Char_1, 'function TArray_Set(const arr: TCharArray; const IDs: TIntegerArray; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Set_Boolean_1, 'function TArray_Set(const arr: TBooleanArray; const IDs: TIntegerArray; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Set_TPoint_1, 'function TArray_Set(const arr: TPointArray; const IDs: TIntegerArray; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Set_TBox_1, 'function TArray_Set(const arr: TBoxArray; const IDs: TIntegerArray; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Set_TRange_1, 'function TArray_Set(const arr: TRangeArray; const IDs: TIntegerArray; const items: TRangeArray): TRangeArray; overload;');
  AddFunction(@TArray_Set_Int32_2, 'function TArray_Set(const arr: TIntegerArray; const start: Int32; const items: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Set_Double_2, 'function TArray_Set(const arr: TDoubleArray; const start: Int32; const items: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Set_String_2, 'function TArray_Set(const arr: TStringArray; const start: Int32; const items: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Set_Char_2, 'function TArray_Set(const arr: TCharArray; const start: Int32; const items: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Set_Boolean_2, 'function TArray_Set(const arr: TBooleanArray; const start: Int32; const items: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Set_TPoint_2, 'function TArray_Set(const arr: TPointArray; const start: Int32; const items: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Set_TBox_2, 'function TArray_Set(const arr: TBoxArray; const start: Int32; const items: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Set_TRange_2, 'function TArray_Set(const arr: TRangeArray; const start: Int32; const items: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Size_Int32, 'function TArray_Size(var arr: TIntegerArray; const size: Int32): Int32; overload;');
  AddFunction(@TArray_Size_Double, 'function TArray_Size(var arr: TDoubleArray; const size: Int32): Int32; overload;');
  AddFunction(@TArray_Size_String, 'function TArray_Size(var arr: TStringArray; const size: Int32): Int32; overload;');
  AddFunction(@TArray_Size_Char, 'function TArray_Size(var arr: TCharArray; const size: Int32): Int32; overload;');
  AddFunction(@TArray_Size_Boolean, 'function TArray_Size(var arr: TBooleanArray; const size: Int32): Int32; overload;');
  AddFunction(@TArray_Size_TPoint, 'function TArray_Size(var arr: TPointArray; const size: Int32): Int32; overload;');
  AddFunction(@TArray_Size_TBox, 'function TArray_Size(var arr: TBoxArray; const size: Int32): Int32; overload;');
  AddFunction(@TArray_Size_TRange, 'function TArray_Size(var arr: TRangeArray; const size: Int32): Int32; overload;');
  AddFunction(@TArray_Size_Int32_1, 'function TArray_Size(var arr: TIntegerArray; const size: Int32; const null: Int32): Int32; overload;');
  AddFunction(@TArray_Size_Double_1, 'function TArray_Size(var arr: TDoubleArray; const size: Int32; const null: Double): Int32; overload;');
  AddFunction(@TArray_Size_String_1, 'function TArray_Size(var arr: TStringArray; const size: Int32; const null: string): Int32; overload;');
  AddFunction(@TArray_Size_Char_1, 'function TArray_Size(var arr: TCharArray; const size: Int32; const null: Char): Int32; overload;');
  AddFunction(@TArray_Size_Boolean_1, 'function TArray_Size(var arr: TBooleanArray; const size: Int32; const null: Boolean): Int32; overload;');
  AddFunction(@TArray_Size_TPoint_1, 'function TArray_Size(var arr: TPointArray; const size: Int32; const null: TPoint): Int32; overload;');
  AddFunction(@TArray_Size_TBox_1, 'function TArray_Size(var arr: TBoxArray; const size: Int32; const null: TBox): Int32; overload;');
  AddFunction(@TArray_Size_TRange_1, 'function TArray_Size(var arr: TRangeArray; const size: Int32; const null: TRange): Int32; overload;');
  AddFunction(@TArray_Size_Int32_2, 'function TArray_Size(const arr: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Size_Double_2, 'function TArray_Size(const arr: TDoubleArray): Int32; overload;');
  AddFunction(@TArray_Size_String_2, 'function TArray_Size(const arr: TStringArray): Int32; overload;');
  AddFunction(@TArray_Size_Char_2, 'function TArray_Size(const arr: TCharArray): Int32; overload;');
  AddFunction(@TArray_Size_Boolean_2, 'function TArray_Size(const arr: TBooleanArray): Int32; overload;');
  AddFunction(@TArray_Size_TPoint_2, 'function TArray_Size(const arr: TPointArray): Int32; overload;');
  AddFunction(@TArray_Size_TBox_2, 'function TArray_Size(const arr: TBoxArray): Int32; overload;');
  AddFunction(@TArray_Size_TRange_2, 'function TArray_Size(const arr: TRangeArray): Int32; overload;');
  
  AddFunction(@TArray_SizeBetween_Int32, 'function TArray_SizeBetween(const arr: TIntegerArray; const x, y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeBetween_Double, 'function TArray_SizeBetween(const arr: TDoubleArray; const x, y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeBetween_String, 'function TArray_SizeBetween(const arr: TStringArray; const x, y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeBetween_Char, 'function TArray_SizeBetween(const arr: TCharArray; const x, y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeBetween_Boolean, 'function TArray_SizeBetween(const arr: TBooleanArray; const x, y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeBetween_TPoint, 'function TArray_SizeBetween(const arr: TPointArray; const x, y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeBetween_TBox, 'function TArray_SizeBetween(const arr: TBoxArray; const x, y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeBetween_TRange, 'function TArray_SizeBetween(const arr: TRangeArray; const x, y: Int32): Boolean; overload;');

  AddFunction(@TArray_SizeMax_Int32, 'function TArray_SizeMax(const arr: TIntegerArray; const y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMax_Double, 'function TArray_SizeMax(const arr: TDoubleArray; const y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMax_String, 'function TArray_SizeMax(const arr: TStringArray; const y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMax_Char, 'function TArray_SizeMax(const arr: TCharArray; const y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMax_Boolean, 'function TArray_SizeMax(const arr: TBooleanArray; const y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMax_TPoint, 'function TArray_SizeMax(const arr: TPointArray; const y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMax_TBox, 'function TArray_SizeMax(const arr: TBoxArray; const y: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMax_TRange, 'function TArray_SizeMax(const arr: TRangeArray; const y: Int32): Boolean; overload;');

  AddFunction(@TArray_SizeMin_Int32, 'function TArray_SizeMin(const arr: TIntegerArray; const x: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMin_Double, 'function TArray_SizeMin(const arr: TDoubleArray; const x: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMin_String, 'function TArray_SizeMin(const arr: TStringArray; const x: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMin_Char, 'function TArray_SizeMin(const arr: TCharArray; const x: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMin_Boolean, 'function TArray_SizeMin(const arr: TBooleanArray; const x: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMin_TPoint, 'function TArray_SizeMin(const arr: TPointArray; const x: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMin_TBox, 'function TArray_SizeMin(const arr: TBoxArray; const x: Int32): Boolean; overload;');
  AddFunction(@TArray_SizeMin_TRange, 'function TArray_SizeMin(const arr: TRangeArray; const x: Int32): Boolean; overload;');

  AddFunction(@TArray_Swap_Int32, 'function TArray_Swap(var a, b: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Swap_Double, 'function TArray_Swap(var a, b: TDoubleArray): Int32; overload;');
  AddFunction(@TArray_Swap_String, 'function TArray_Swap(var a, b: TStringArray): Int32; overload;');
  AddFunction(@TArray_Swap_Char, 'function TArray_Swap(var a, b: TCharArray): Int32; overload;');
  AddFunction(@TArray_Swap_Boolean, 'function TArray_Swap(var a, b: TBooleanArray): Int32; overload;');
  AddFunction(@TArray_Swap_TPoint, 'function TArray_Swap(var a, b: TPointArray): Int32; overload;');
  AddFunction(@TArray_Swap_TBox, 'function TArray_Swap(var a, b: TBoxArray): Int32; overload;');
  AddFunction(@TArray_Swap_TRange, 'function TArray_Swap(var a, b: TRangeArray): Int32; overload;');

  AddFunction(@TArray_Trade_Int32, 'function TArray_Trade(var a, b: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Trade_Double, 'function TArray_Trade(var a, b: TDoubleArray): Int32; overload;');
  AddFunction(@TArray_Trade_String, 'function TArray_Trade(var a, b: TStringArray): Int32; overload;');
  AddFunction(@TArray_Trade_Char, 'function TArray_Trade(var a, b: TCharArray): Int32; overload;');
  AddFunction(@TArray_Trade_Boolean, 'function TArray_Trade(var a, b: TBooleanArray): Int32; overload;');
  AddFunction(@TArray_Trade_TPoint, 'function TArray_Trade(var a, b: TPointArray): Int32; overload;');
  AddFunction(@TArray_Trade_TBox, 'function TArray_Trade(var a, b: TBoxArray): Int32; overload;');
  AddFunction(@TArray_Trade_TRange, 'function TArray_Trade(var a, b: TRangeArray): Int32; overload;');

  AddFunction(@TArray_Undersize_Int32, 'function TArray_Undersize(const arr: TIntegerArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Undersize_Double, 'function TArray_Undersize(const arr: TDoubleArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Undersize_String, 'function TArray_Undersize(const arr: TStringArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Undersize_Char, 'function TArray_Undersize(const arr: TCharArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Undersize_Boolean, 'function TArray_Undersize(const arr: TBooleanArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Undersize_TPoint, 'function TArray_Undersize(const arr: TPointArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Undersize_TBox, 'function TArray_Undersize(const arr: TBoxArray; const limit: Int32): Boolean; overload;');
  AddFunction(@TArray_Undersize_TRange, 'function TArray_Undersize(const arr: TRangeArray; const limit: Int32): Boolean; overload;');

  AddFunction(@TArray_Unique_Int32, 'function TArray_Unique(var arr: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Unique_Double, 'function TArray_Unique(var arr: TDoubleArray): Int32; overload;');
  AddFunction(@TArray_Unique_String, 'function TArray_Unique(var arr: TStringArray): Int32; overload;');
  AddFunction(@TArray_Unique_Char, 'function TArray_Unique(var arr: TCharArray): Int32; overload;');
  AddFunction(@TArray_Unique_Boolean, 'function TArray_Unique(var arr: TBooleanArray): Int32; overload;');
  AddFunction(@TArray_Unique_TPoint, 'function TArray_Unique(var arr: TPointArray): Int32; overload;');
  AddFunction(@TArray_Unique_TBox, 'function TArray_Unique(var arr: TBoxArray): Int32; overload;');
  AddFunction(@TArray_Unique_TRange, 'function TArray_Unique(var arr: TRangeArray): Int32; overload;');

  AddFunction(@TArray_Uniqued_Int32, 'function TArray_Uniqued(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniqued_Double, 'function TArray_Uniqued(const arr: TDoubleArray): TDoubleArray; overload;');
  AddFunction(@TArray_Uniqued_String, 'function TArray_Uniqued(const arr: TStringArray): TStringArray; overload;');
  AddFunction(@TArray_Uniqued_Char, 'function TArray_Uniqued(const arr: TCharArray): TCharArray; overload;');
  AddFunction(@TArray_Uniqued_Boolean, 'function TArray_Uniqued(const arr: TBooleanArray): TBooleanArray; overload;');
  AddFunction(@TArray_Uniqued_TPoint, 'function TArray_Uniqued(const arr: TPointArray): TPointArray; overload;');
  AddFunction(@TArray_Uniqued_TBox, 'function TArray_Uniqued(const arr: TBoxArray): TBoxArray; overload;');
  AddFunction(@TArray_Uniqued_TRange, 'function TArray_Uniqued(const arr: TRangeArray): TRangeArray; overload;');

  AddFunction(@TArray_Uniques_Int32, 'function TArray_Uniques(const arr: TIntegerArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques_Double, 'function TArray_Uniques(const arr: TDoubleArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques_String, 'function TArray_Uniques(const arr: TStringArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques_Char, 'function TArray_Uniques(const arr: TCharArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques_Boolean, 'function TArray_Uniques(const arr: TBooleanArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques_TPoint, 'function TArray_Uniques(const arr: TPointArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques_TBox, 'function TArray_Uniques(const arr: TBoxArray): TIntegerArray; overload;');
  AddFunction(@TArray_Uniques_TRange, 'function TArray_Uniques(const arr: TRangeArray): TIntegerArray; overload;');
  
  AddFunction(@TArray_Unshift_Int32, 'function TArray_Unshift(var arr: TIntegerArray; const item: Int32): Int32; overload;');
  AddFunction(@TArray_Unshift_Double, 'function TArray_Unshift(var arr: TDoubleArray; const item: Double): Int32; overload;');
  AddFunction(@TArray_Unshift_String, 'function TArray_Unshift(var arr: TStringArray; const item: string): Int32; overload;');
  AddFunction(@TArray_Unshift_Char, 'function TArray_Unshift(var arr: TCharArray; const item: Char): Int32; overload;');
  AddFunction(@TArray_Unshift_Boolean, 'function TArray_Unshift(var arr: TBooleanArray; const item: Boolean): Int32; overload;');
  AddFunction(@TArray_Unshift_TPoint, 'function TArray_Unshift(var arr: TPointArray; const item: TPoint): Int32; overload;');
  AddFunction(@TArray_Unshift_TBox, 'function TArray_Unshift(var arr: TBoxArray; const item: TBox): Int32; overload;');
  AddFunction(@TArray_Unshift_TRange, 'function TArray_Unshift(var arr: TRangeArray; const item: TRange): Int32; overload;');
  AddFunction(@TArray_Unshift_Int32_1, 'function TArray_Unshift(var arr: TIntegerArray; const items: TIntegerArray): Int32; overload;');
  AddFunction(@TArray_Unshift_Double_1, 'function TArray_Unshift(var arr: TDoubleArray; const items: TDoubleArray): Int32; overload;');
  AddFunction(@TArray_Unshift_String_1, 'function TArray_Unshift(var arr: TStringArray; const items: TStringArray): Int32; overload;');
  AddFunction(@TArray_Unshift_Char_1, 'function TArray_Unshift(var arr: TCharArray; const items: TCharArray): Int32; overload;');
  AddFunction(@TArray_Unshift_Boolean_1, 'function TArray_Unshift(var arr: TBooleanArray; const items: TBooleanArray): Int32; overload;');
  AddFunction(@TArray_Unshift_TPoint_1, 'function TArray_Unshift(var arr: TPointArray; const items: TPointArray): Int32; overload;');
  AddFunction(@TArray_Unshift_TBox_1, 'function TArray_Unshift(var arr: TBoxArray; const items: TBoxArray): Int32; overload;');
  AddFunction(@TArray_Unshift_TRange_1, 'function TArray_Unshift(var arr: TRangeArray; const items: TRangeArray): Int32; overload;');

  AddFunction(@T2DArray_Blank_Int32, 'function T2DArray_Blank(const arr: T2DIntegerArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank_Double, 'function T2DArray_Blank(const arr: T2DDoubleArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank_String, 'function T2DArray_Blank(const arr: T2DStringArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank_Char, 'function T2DArray_Blank(const arr: T2DCharArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank_Boolean, 'function T2DArray_Blank(const arr: T2DBooleanArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank_TPoint, 'function T2DArray_Blank(const arr: T2DPointArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank_TBox, 'function T2DArray_Blank(const arr: T2DBoxArray): Boolean; overload;');
  AddFunction(@T2DArray_Blank_TRange, 'function T2DArray_Blank(const arr: T2DRangeArray): Boolean; overload;');

  AddFunction(@T2DArray_Create_Int32, 'function T2DArray_Create(const size1D, size2D: Int32; const item: Int32): T2DIntegerArray; overload;');
  AddFunction(@T2DArray_Create_Double, 'function T2DArray_Create(const size1D, size2D: Int32; const item: Double): T2DDoubleArray; overload;');
  AddFunction(@T2DArray_Create_String, 'function T2DArray_Create(const size1D, size2D: Int32; const item: string): T2DStringArray; overload;');
  AddFunction(@T2DArray_Create_Char, 'function T2DArray_Create(const size1D, size2D: Int32; const item: Char): T2DCharArray; overload;');
  AddFunction(@T2DArray_Create_Boolean, 'function T2DArray_Create(const size1D, size2D: Int32; const item: Boolean): T2DBooleanArray; overload;');
  AddFunction(@T2DArray_Create_TPoint, 'function T2DArray_Create(const size1D, size2D: Int32; const item: TPoint): T2DPointArray; overload;');
  AddFunction(@T2DArray_Create_TBox, 'function T2DArray_Create(const size1D, size2D: Int32; const item: TBox): T2DBoxArray; overload;');
  AddFunction(@T2DArray_Create_TRange, 'function T2DArray_Create(const size1D, size2D: Int32; const item: TRange): T2DRangeArray; overload;');

  AddFunction(@T2DArray_Empty_Int32, 'function T2DArray_Empty(const arr: T2DIntegerArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty_Double, 'function T2DArray_Empty(const arr: T2DDoubleArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty_String, 'function T2DArray_Empty(const arr: T2DStringArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty_Char, 'function T2DArray_Empty(const arr: T2DCharArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty_Boolean, 'function T2DArray_Empty(const arr: T2DBooleanArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty_TPoint, 'function T2DArray_Empty(const arr: T2DPointArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty_TBox, 'function T2DArray_Empty(const arr: T2DBoxArray): Boolean; overload;');
  AddFunction(@T2DArray_Empty_TRange, 'function T2DArray_Empty(const arr: T2DRangeArray): Boolean; overload;');

  AddFunction(@T2DArray_Length_Int32, 'function T2DArray_Length(const arr: T2DIntegerArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_Double, 'function T2DArray_Length(const arr: T2DDoubleArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_String, 'function T2DArray_Length(const arr: T2DStringArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_Char, 'function T2DArray_Length(const arr: T2DCharArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_Boolean, 'function T2DArray_Length(const arr: T2DBooleanArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_TPoint, 'function T2DArray_Length(const arr: T2DPointArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_TBox, 'function T2DArray_Length(const arr: T2DBoxArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_TRange, 'function T2DArray_Length(const arr: T2DRangeArray; var lengths: TIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_Int32_1, 'function T2DArray_Length(const arr: T2DIntegerArray): Int64; overload;');
  AddFunction(@T2DArray_Length_Double_1, 'function T2DArray_Length(const arr: T2DDoubleArray): Int64; overload;');
  AddFunction(@T2DArray_Length_String_1, 'function T2DArray_Length(const arr: T2DStringArray): Int64; overload;');
  AddFunction(@T2DArray_Length_Char_1, 'function T2DArray_Length(const arr: T2DCharArray): Int64; overload;');
  AddFunction(@T2DArray_Length_Boolean_1, 'function T2DArray_Length(const arr: T2DBooleanArray): Int64; overload;');
  AddFunction(@T2DArray_Length_TPoint_1, 'function T2DArray_Length(const arr: T2DPointArray): Int64; overload;');
  AddFunction(@T2DArray_Length_TBox_1, 'function T2DArray_Length(const arr: T2DBoxArray): Int64; overload;');
  AddFunction(@T2DArray_Length_TRange_1, 'function T2DArray_Length(const arr: T2DRangeArray): Int64; overload;');
  
  AddFunction(@T2DArray_Merge_Int32, 'function T2DArray_Merge(const arr: T2DIntegerArray): TIntegerArray; overload;');
  AddFunction(@T2DArray_Merge_Double, 'function T2DArray_Merge(const arr: T2DDoubleArray): TDoubleArray; overload;');
  AddFunction(@T2DArray_Merge_String, 'function T2DArray_Merge(const arr: T2DStringArray): TStringArray; overload;');
  AddFunction(@T2DArray_Merge_Char, 'function T2DArray_Merge(const arr: T2DCharArray): TCharArray; overload;');
  AddFunction(@T2DArray_Merge_Boolean, 'function T2DArray_Merge(const arr: T2DBooleanArray): TBooleanArray; overload;');
  AddFunction(@T2DArray_Merge_TPoint, 'function T2DArray_Merge(const arr: T2DPointArray): TPointArray; overload;');
  AddFunction(@T2DArray_Merge_TBox, 'function T2DArray_Merge(const arr: T2DBoxArray): TBoxArray; overload;');
  AddFunction(@T2DArray_Merge_TRange, 'function T2DArray_Merge(const arr: T2DRangeArray): TRangeArray; overload;');
end;