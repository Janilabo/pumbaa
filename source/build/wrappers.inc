function T_AllEqual_TIntegerArray(const arr: TIntegerArray): Boolean; cdecl; begin Result := TArray_AllEqual(arr); end;
function T_AllEqual_TDoubleArray(const arr: TDoubleArray): Boolean; cdecl; begin Result := TArray_AllEqual(arr); end;
function T_AllEqual_TStringArray(const arr: TStringArray): Boolean; cdecl; begin Result := TArray_AllEqual(arr); end;
function T_AllEqual_TCharArray(const arr: TCharArray): Boolean; cdecl; begin Result := TArray_AllEqual(arr); end;
function T_AllEqual_TBooleanArray(const arr: TBooleanArray): Boolean; cdecl; begin Result := TArray_AllEqual(arr); end;
function T_AllEqual_TPointArray(const arr: TPointArray): Boolean; cdecl; begin Result := TArray_AllEqual(arr); end;
function T_AllEqual_TBoxArray(const arr: TBoxArray): Boolean; cdecl; begin Result := TArray_AllEqual(arr); end;
function T_AllEqual_TRangeArray(const arr: TRangeArray): Boolean; cdecl; begin Result := TArray_AllEqual(arr); end;

function T_AllSame_TIntegerArray(const arr: TIntegerArray): Boolean; cdecl; begin Result := TArray_AllSame(arr); end;
function T_AllSame_TDoubleArray(const arr: TDoubleArray): Boolean; cdecl; begin Result := TArray_AllSame(arr); end;
function T_AllSame_TStringArray(const arr: TStringArray): Boolean; cdecl; begin Result := TArray_AllSame(arr); end;
function T_AllSame_TCharArray(const arr: TCharArray): Boolean; cdecl; begin Result := TArray_AllSame(arr); end;
function T_AllSame_TBooleanArray(const arr: TBooleanArray): Boolean; cdecl; begin Result := TArray_AllSame(arr); end;
function T_AllSame_TPointArray(const arr: TPointArray): Boolean; cdecl; begin Result := TArray_AllSame(arr); end;
function T_AllSame_TBoxArray(const arr: TBoxArray): Boolean; cdecl; begin Result := TArray_AllSame(arr); end;
function T_AllSame_TRangeArray(const arr: TRangeArray): Boolean; cdecl; begin Result := TArray_AllSame(arr); end;

function T_AllUnique_TIntegerArray(const arr: TIntegerArray): Boolean; cdecl; begin Result := TArray_AllUnique(arr); end;
function T_AllUnique_TDoubleArray(const arr: TDoubleArray): Boolean; cdecl; begin Result := TArray_AllUnique(arr); end;
function T_AllUnique_TStringArray(const arr: TStringArray): Boolean; cdecl; begin Result := TArray_AllUnique(arr); end;
function T_AllUnique_TCharArray(const arr: TCharArray): Boolean; cdecl; begin Result := TArray_AllUnique(arr); end;
function T_AllUnique_TBooleanArray(const arr: TBooleanArray): Boolean; cdecl; begin Result := TArray_AllUnique(arr); end;
function T_AllUnique_TPointArray(const arr: TPointArray): Boolean; cdecl; begin Result := TArray_AllUnique(arr); end;
function T_AllUnique_TBoxArray(const arr: TBoxArray): Boolean; cdecl; begin Result := TArray_AllUnique(arr); end;
function T_AllUnique_TRangeArray(const arr: TRangeArray): Boolean; cdecl; begin Result := TArray_AllUnique(arr); end;